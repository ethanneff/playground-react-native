// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`input renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            nativeID="animatedComponent"
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  nativeID="animatedComponent"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockedScreen
                </Text>
              </View>
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                            }
                          }
                        />
                        <View
                          style={
                            Object {
                              "backgroundColor": "hsl(0,0%,100%)",
                              "borderColor": "hsl(0,0%,32.9%)",
                              "borderRadius": 4,
                              "borderWidth": 2,
                              "flexDirection": "row",
                              "padding": 8,
                            }
                          }
                        >
                          <TextInput
                            blurOnSubmit={true}
                            disableFullscreenUI={true}
                            editable={true}
                            onBlur={[Function]}
                            onChangeText={[MockFunction]}
                            onFocus={[Function]}
                            placeholderTextColor="hsl(0,0%,32.9%)"
                            selectionColor="hsl(219,87.8%,54.9%)"
                            style={
                              Array [
                                Object {
                                  "color": "hsl(0,0%,0%)",
                                  "flex": 1,
                                },
                                Object {
                                  "fontSize": 14,
                                  "fontWeight": "300",
                                  "letterSpacing": 0.25,
                                },
                                undefined,
                              ]
                            }
                            textContentType="none"
                            underlineColorAndroid="transparent"
                            value="hello"
                          />
                          <RNGestureHandlerButton
                            collapsable={false}
                            onGestureEvent={[Function]}
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            onHandlerStateChange={[Function]}
                            rippleColor={0}
                          >
                            <View
                              accessible={true}
                              collapsable={false}
                              nativeID="animatedComponent"
                              style={
                                Object {
                                  "flex": 0,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "paddingLeft": 8,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  style={
                                    Array [
                                      Object {
                                        "color": "hsl(0,0%,45.9%)",
                                        "fontSize": 24,
                                      },
                                      Array [
                                        undefined,
                                        undefined,
                                      ],
                                      Object {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  󰅙
                                </Text>
                              </View>
                            </View>
                          </RNGestureHandlerButton>
                        </View>
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                            }
                          }
                        >
                          <RNGestureHandlerButton
                            collapsable={false}
                            onGestureEvent={[Function]}
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            onHandlerStateChange={[Function]}
                            rippleColor={0}
                          >
                            <View
                              accessible={true}
                              collapsable={false}
                              nativeID="animatedComponent"
                              style={
                                Object {
                                  "flex": 0,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  style={
                                    Array [
                                      Object {
                                        "color": "hsl(7,100%,44.1%)",
                                        "fontSize": 24,
                                      },
                                      Array [
                                        Object {
                                          "opacity": 0,
                                        },
                                        undefined,
                                      ],
                                      Object {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  󰀨
                                </Text>
                              </View>
                            </View>
                          </RNGestureHandlerButton>
                          <RNGestureHandlerButton
                            collapsable={false}
                            onGestureEvent={[Function]}
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            onHandlerStateChange={[Function]}
                            rippleColor={0}
                          >
                            <View
                              accessible={true}
                              collapsable={false}
                              nativeID="animatedComponent"
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "transparent",
                                  "borderRadius": 4,
                                  "borderWidth": 1,
                                  "flex": 0,
                                  "flexDirection": "row",
                                  "opacity": 0,
                                  "padding": 0,
                                  "paddingHorizontal": 0,
                                }
                              }
                            >
                              <Text
                                collapsable={false}
                                nativeID="animatedComponent"
                                onPress={[Function]}
                                style={
                                  Object {
                                    "color": "hsl(7,100%,44.1%)",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "letterSpacing": 0.5,
                                    "opacity": 1,
                                    "textAlign": "center",
                                  }
                                }
                              >
                                
                              </Text>
                            </View>
                          </RNGestureHandlerButton>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
