{"version":3,"sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/useKeyboardHeight.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/utils/useTabTap.tsx","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/PasswordReset/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/Login.tsx","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"names":["completeConfig","borderRadius","padding","alert","width","height","useKeyboardHeight","isFocused","useIsFocused","keyboardHeight","useRootSelector","s","device","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","name","items","useTabTap","addListener","useNavigation","useEffect","SoundManager","play","AddItem","memo","parentItemId","placeholder","color","useColor","textInputRef","useRef","useState","showInput","setShowInput","dispatch","useRootDispatch","completeUser","Error","onSubmit","useCallback","value","Keyboard","dismiss","itemId","item","createItem","addItemToItem","onAddItemPress","p","onClose","onBlur","icons","onPress","focus","reset","required","clear","current","View","style","backgroundColor","background","primaryA","justifyContent","blurOnSubmit","onRef","onSubmitEditing","returnKeyType","submitClear","center","Card","onLayout","margin","flex","marginRight","marginBottom","ListHeader","navigate","completeItem","onSave","updateItem","onDetail","navItemDetails","flexDirection","alignItems","ListItem","index","parentChildrenCount","length","onItemTitleClose","onItemTitleSubmit","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","swapItemOrderInItem","j","hidden","key","onLongPress","secondary","pointerEvents","ListItems","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","titleEditable","multiline","ModalHeader","onLeftPress","size","onRightPress","invisible","Account","useAuth","onLogout","response","profile","completeAuth","onNavToAdmin","logout","displayName","String","emailVerified","uid","error","initialState","container","button","Capture","containerRefs","containerHeight","setContainerHeight","keyboardPadding","getInbox","noItemChildren","onOrganize","event","nativeEvent","layout","showSearchBar","rightIcon","disabled","ItemDetail","goBack","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","text","onDeletePress","onDeleteClose","initialRef","password","eye","completeForm","LogIn","form","state","setState","navWelcome","onSecondary","emailRef","passwordRef","eyeIcon","onEye","loadUser","onFormChange","val","autoCorrect","keyboardType","onChangeText","textContentType","secureTextEntry","buttonStyle","lowercase","complete","PasswordReset","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","navBack","Projects","dimensions","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","Dimensions","get","passwordError","SignUp","SignInButton","icon","borderColor","borderWidth","paddingLeft","phone","phoneCode","screen","Login","showFacebook","showGoogle","showApple","showPhone","showEmail","showAnonymous","onSuccess","onApple","onGoogle","onFacebook","onPhoneConfirm","onPhone","onEmail","onPasswordReset","onAnonymous","loading","successful","handleConfirm","handlePhone","handleReset","onScreenChange","Platform","OS","slides","sections","titleType","titleStyle","paragraphs","Welcome","showLogin","setShowLogin","onToggleLogin","onLoginSuccess","auth","isAnonymous","phoneNumber","photoURL","login","duration","noHeader","headerShown","tabIcons","plan","focused","unFocused","implement","reflect","account","HomeStack","createBottomTabNavigator","Home","screenOptions","route","tabBarIcon","iconColor","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarInactiveTintColor","tertiary","tabBarShowLabel","tabBarStyle","useTabs","Navigator","Screen","component","Implement","ImplementStack","createStackNavigator","LandingStack","Landing","rootScreenOptions","MainStack","Main","App"],"mappings":"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","file":"static/js/12.825c1057.chunk.js","sourcesContent":["import {padding} from '../../../utils';\n\nexport const completeConfig = {\n  borderRadius: padding(2),\n  padding: padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import {useIsFocused} from '@react-navigation/native';\nimport {useRootSelector} from '../../../utils';\n\nexport const useKeyboardHeight = (): number => {\n  const isFocused = useIsFocused();\n  const keyboardHeight = useRootSelector(s => s.device.keyboardHeight);\n  return isFocused && keyboardHeight ? keyboardHeight : 0;\n};\n","import {v4} from 'uuid';\nimport {Item, User} from '../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  items: Item[];\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    {...dItem(u), title: 'Backlog', type: 'list'},\n    {...dItem(u), title: 'Todo', type: 'list'},\n    {...dItem(u), title: 'In Progress', type: 'list'},\n    {...dItem(u), title: 'Done', type: 'list'},\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // user\n  const date = Date.now();\n  const u = v4();\n\n  // inbox\n  const inboxItems: Item[] = [\n    {...dItem(u), title: 'do dishes'},\n    {...dItem(u), title: 'schedule meeting with Jim'},\n    {...dItem(u), title: 'run 4 miles'},\n    {...dItem(u), title: 'change oil'},\n    {...dItem(u), title: 'what is the best mediation'},\n    {...dItem(u), title: 'record Kelly birthday on Sep 22'},\n    {...dItem(u), title: 'drink water'},\n    {...dItem(u), title: 'intensity + focus = deep work'},\n    {...dItem(u), title: 'put $20 in phone'},\n    {...dItem(u), title: 'clear emails'},\n  ];\n\n  // projects\n  const homeTodoItems: Item[] = [\n    {...dItem(u), title: 'clean desk'},\n    {...dItem(u), title: 'clean room'},\n    {...dItem(u), title: 'walk dog'},\n    {...dItem(u), title: 'brush teeth'},\n    {...dItem(u), title: 'do laundry'},\n    {...dItem(u), title: 'fix sink'},\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map(i => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    {...dItem(u), title: 'one one one'},\n    {...dItem(u), title: 'q1 planning'},\n  ];\n  const bookItems: Item[] = [\n    {...dItem(u), title: 'eat that frog'},\n    {...dItem(u), title: 'deep work'},\n    {...dItem(u), title: 'the one thing'},\n  ];\n  const giftItems: Item[] = [\n    {...dItem(u), title: 'girlfriend'},\n    {...dItem(u), title: 'sister'},\n    {...dItem(u), title: 'parents'},\n  ];\n  const checkItems: Item[] = [\n    {...dItem(u), title: 'after bathroom'},\n    {...dItem(u), title: 'before car'},\n    {...dItem(u), title: 'before sleep'},\n  ];\n  const codeItems: Item[] = [\n    {...dItem(u), title: 'php'},\n    {...dItem(u), title: 'javascript'},\n    {...dItem(u), title: 'swift'},\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map(i => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map(i => i.id),\n    },\n  ];\n\n  // user\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map(i => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map(i => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    email: 'bob@smith.com',\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map(i => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import {useNavigation} from '@react-navigation/native';\nimport {useEffect} from 'react';\nimport {SoundManager} from '../../../utils';\n\nexport const useTabTap = (): void => {\n  const {addListener} = useNavigation();\n  useEffect(() => {\n    const unsubscribe = addListener('tabPress', () => {\n      SoundManager.play('tap');\n    });\n    return unsubscribe;\n  }, [addListener]);\n};\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {Keyboard, TextInput as OriginalTextInput, View} from 'react-native';\nimport {v4} from 'uuid';\nimport {Button, TextInput, TextInputIcon} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {padding, useRootDispatch, useRootSelector} from '../../../utils';\nimport {addItemToItem, createItem, Item} from '../models';\nimport {completeConfig} from '../utils';\n\ntype AddItemProps = {\n  width?: number;\n  parentItemId: string;\n  placeholder: string;\n  title: string;\n};\n\nexport const AddItem = memo(function AddItem({\n  width,\n  parentItemId,\n  placeholder,\n  title,\n}: AddItemProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector(s => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) return Keyboard.dismiss();\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n        type: 'note',\n      };\n      dispatch(createItem(item));\n      dispatch(addItemToItem({parentItemId, itemId}));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  const onAddItemPress = useCallback(() => setShowInput(p => !p), []);\n  const onClose = useCallback(() => setShowInput(false), []);\n  const onBlur = useCallback(() => setShowInput(false), []);\n\n  const icons: TextInputIcon[] = [\n    {name: 'close', onPress: onClose, focus: true, reset: true},\n    {\n      name: 'send',\n      onPress: onSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n      clear: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background.primaryA,\n        justifyContent: 'center',\n      }}>\n      {showInput ? (\n        <TextInput\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmitEditing={onSubmit}\n          placeholder={placeholder}\n          returnKeyType=\"done\"\n          submitClear\n        />\n      ) : (\n        <Button center color=\"accent\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {completeConfig} from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n  flex?: boolean;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background.primaryA,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}>\n      {children}\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {TextInput, TextInputIcon} from '../../../components';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {navItemDetails, updateItem} from '../models';\nimport {MainStackRoutes} from '../navigationTypes';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation<StackNavigationProp<MainStackRoutes>>();\n  const item = useRootSelector(s => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    title => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons: TextInputIcon[] = [\n    {name: 'close', onPress: onClose, focus: true, reset: true},\n    {\n      name: 'send',\n      onPress: onSave,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onDetail},\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <TextInput\n        editable={item.editable}\n        icons={icons}\n        onSubmitEditing={onSave}\n        placeholder=\"List title...\"\n        returnKeyType=\"done\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef} from 'react';\nimport {Keyboard, TextInput as OriginalTextInput} from 'react-native';\nimport {TextInput, TextInputIcon} from '../../../components';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport {ImplementTabNavigation} from '../navigationTypes';\nimport {completeConfig} from '../utils';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector(s => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    s => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation<ImplementTabNavigation>();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({projectItemId: itemId}));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index - 1}));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index + 1}));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons: TextInputIcon[] = [\n    {name: 'close', onPress: onItemTitleClose, focus: true, reset: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    {name: 'chevron-up', onPress: onItemUp, hidden: true},\n    {name: 'chevron-down', onPress: onItemDown, hidden: true},\n    {name: 'dots-horizontal', onPress: onItemDetails},\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: color.background.secondary,\n        flexDirection: 'row',\n      }}>\n      <TextInput\n        backgroundColor=\"secondary\"\n        icons={icons}\n        onRef={textInputRef}\n        onSubmitEditing={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        returnKeyType=\"done\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, {memo, useCallback, useRef} from 'react';\nimport {FlatList, ListRenderItem} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {ListItem} from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    s => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback(item => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({item, index}) => (\n      <ListItem\n        index={index}\n        itemId={item}\n        key={item}\n        parentItemId={parentItemId}\n      />\n    ),\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {View} from 'react-native';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {Card} from './Card';\nimport {ListHeader} from './ListHeader';\nimport {ListItems} from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  itemId: string;\n  parentItemId: string | null;\n  orientation?: 'vertical' | 'horizontal';\n  footer?: ReactElement;\n  maxHeight: number;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{padding, maxHeight}}>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {FlatList} from '../../../conversions';\nimport {useRootSelector} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {List} from './List';\n\ntype BoardProps = {\n  projectItemId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector(s => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback(item => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({length: listSize, offset: listSize * index, index}),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({item}) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{padding: completeConfig.padding}}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{height: '100%'}}\n        />\n      )}\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {padding} from '../../../utils';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{alignItems: 'center'}}>\n        <Text\n          style={{paddingBottom: padding(2)}}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"negative\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, {memo} from 'react';\nimport {Text} from '../../../components';\nimport {padding} from '../../../utils';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{padding: padding(2)}}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {RelativeDate, Text} from '../../../components';\nimport {padding} from '../../../utils';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n  type: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text style={{padding: padding(2)}} title={type} />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{padding: padding(2)}} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{padding: padding(2)}} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{padding: padding(2)}} />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {TextInput, TextInputIcon} from '../../../components';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\n\ntype OnSubmit = (text: string) => void;\n\ntype ItemEditProps = {\n  title: string;\n  titleEditable: boolean;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => OnSubmit;\n};\n\n// TODO: need to clear on blur\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  titleEditable,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string): TextInputIcon[] => [\n      {name: 'close', onPress: onClose, focus: true, reset: true},\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: 'accent',\n        focus: true,\n        required: true,\n      },\n    ],\n    [onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInput\n          editable={titleEditable}\n          icons={icons('title')}\n          onSubmitEditing={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          returnKeyType=\"done\"\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInput\n          icons={icons('description')}\n          multiline\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Icon, Text, TouchableOpacity} from '../../../components';\nimport {padding} from '../../../utils';\n\ntype Props = {\n  title: string;\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = padding(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: padding(4),\n      }}>\n      <TouchableOpacity onPress={onLeftPress}>\n        <Icon invisible={!onLeftPress} name=\"chevron-left\" size={size} />\n      </TouchableOpacity>\n      <Text center flex title={title} type=\"h4\" />\n      <TouchableOpacity onPress={onRightPress}>\n        <Icon invisible={!onRightPress} name=\"close\" size={size} />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useEffect} from 'react';\nimport {Button, Screen, Text} from '../../../../components';\nimport {ScrollView} from '../../../../conversions';\nimport {useAuth, useColor} from '../../../../hooks';\nimport {RootNavigation} from '../../../../providers/Navigation/types';\nimport {padding, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card} from '../../components';\nimport {logout} from '../../models';\nimport {useTabTap} from '../../utils';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  useTabTap();\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation<RootNavigation>();\n  const {onLogout, response} = useAuth();\n  const profile = useRootSelector(s => s.completeAuth);\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  useEffect(() => {\n    if (response.type === 'logout') dispatch(logout());\n  }, [dispatch, response.type]);\n\n  return (\n    <Screen title=\"Account\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: color.background.secondary,\n        }}\n        style={{backgroundColor: color.background.secondary}}>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{paddingBottom: padding(4)}}\n            title=\"Profile\"\n            type=\"h5\"\n          />\n          <Text title={profile?.displayName || ''} />\n          <Text title={profile?.email || ''} />\n          <Text title={String(profile?.emailVerified) || ''} />\n          <Text title={profile?.uid || ''} />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{paddingBottom: padding(4)}}\n            title=\"Reminders\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{paddingBottom: padding(4)}}\n            title=\"Payment\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{paddingBottom: padding(4)}}\n            title=\"Feedback\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Button onPress={onLogout} title=\"logout\" />\n        {response.error && <Text color=\"negative\" title={response.error} />}\n        <Button onPress={onNavToAdmin} title=\"go to admin\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useRef, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {Button, KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding, useRootSelector} from '../../../../utils';\nimport {Card, List} from '../../components';\nimport {getInbox} from '../../models';\nimport {useTabTap} from '../../utils';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\nconst initialState = {container: 0, button: 0};\nexport const Capture = memo(function Capture() {\n  useTabTap();\n  const color = useColor();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = padding(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    s => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const {container, button} = containerRefs.current;\n      if (container > 0 && button > 0 && !containerHeight) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n      }\n    },\n    [containerHeight],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout('container')}>\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"accent\"\n                disabled={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemContext, ItemEdit} from '../../components';\nimport {removeItem, removeItemFromItem, updateItem} from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n\n  const {itemId, parentItemId} = useRootSelector(s => s.completeItem.nav);\n  const item = useRootSelector(s => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({parentItemId, itemId}));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({...item, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return !item ? null : (\n    <>\n      <Modal\n        backgroundColor={color.background.secondary}\n        onBackgroundPress={goBack}>\n        <View>\n          <ItemEdit\n            description={item.description}\n            onSubmit={onItemSubmit}\n            placeholder=\"Item\"\n            title={item.title}\n            titleEditable={item.editable}\n          />\n          <Card margin=\"bottom\">\n            <Text title=\"Reminders\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Tags\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Comments\" />\n          </Card>\n          <ItemContext\n            createdAt={item.createdAt}\n            type={item.type}\n            updatedAt={item.updatedAt}\n            userId={item.userId}\n          />\n          {!item.editable ? (\n            <Card flex>\n              <Button center onPress={goBack} title=\"close\" />\n            </Card>\n          ) : (\n            <View\n              style={{\n                flexDirection: 'row',\n                flex: 1,\n                justifyContent: 'space-between',\n              }}>\n              <Card flex>\n                <Button center onPress={goBack} title=\"close\" />\n              </Card>\n              <View style={{padding: padding(2)}} />\n              <Card flex>\n                <Button\n                  center\n                  color=\"negative\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            </View>\n          )}\n        </View>\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      )}\n    </>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput} from 'react-native';\nimport {Button, Modal, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding, useRootDispatch} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {createItem, loadUser} from '../../models';\nimport {LandingStackRoutes} from '../../navigationTypes';\nimport {getDefaultUserTemplate} from '../../utils';\n\nconst initialRef = {email: '', password: ''};\nconst initialState = {eye: false, completeForm: false};\n\nexport const LogIn = memo(function LogIn() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const {goBack, navigate} =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('password-reset'), [navigate]);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState(p => ({...p, eye: !p.eye}));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const {user, items} = getDefaultUserTemplate();\n    items.map(item => dispatch(createItem(item)));\n    dispatch(loadUser({...user, email: form.current.email}));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = {...form.current, [key]: val};\n      const {email, password} = form.current;\n      const completeForm = email.length > 0 && password.length > 0;\n      setState(p => ({...p, completeForm}));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return !focus ? null : (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{marginBottom: padding(4)}}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        icons={[{name: eyeIcon, onPress: onEye, focus: true}]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{marginBottom: padding(4)}}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Button\n        buttonStyle={{marginBottom: padding(4)}}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput} from 'react-native';\nimport {Button, Modal, Text, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {LandingStackRoutes} from '../../navigationTypes';\n\nconst initialRef = {email: ''};\nconst initialState = {complete: false};\nexport const PasswordReset = memo(function PasswordReset() {\n  const color = useColor();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const {goBack, navigate} =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const focus = useIsFocused();\n  const emailRef = useRef<OriginalTextInput | null>(null);\n\n  const onSubmit = useCallback(() => {\n    if (!state.complete) return;\n    goBack();\n  }, [goBack, state.complete]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = {...form.current, [key]: val};\n      const complete = val.length > 0;\n      setState(p => ({...p, complete}));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return !focus ? null : (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={goBack} title=\"Password reset\" />\n      <Text\n        center\n        style={{paddingBottom: padding(4)}}\n        title=\"Please enter the email address associated with your account.\"\n      />\n      <Text\n        center\n        style={{paddingBottom: padding(4)}}\n        title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Email address\"\n        returnKeyType=\"send\"\n        style={{marginBottom: padding(4)}}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.complete}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset password\"\n      />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {getSmallestDimension} from '../../../../models';\nimport {padding, useRootSelector} from '../../../../utils';\nimport {Board} from '../../components';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const {projectItemId} = useRootSelector(s => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    s => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    s => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = padding(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = padding(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      onLeftPress={navBack}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title={projectItemTitle}>\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout}>\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding, useRootSelector} from '../../../../utils';\nimport {List} from '../../components';\nimport {getProjects} from '../../models';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = padding(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Implement\">\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout}>\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {scaleLinear, scaleTime} from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Svg, {Defs, LinearGradient, Path, Stop} from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map(d => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map(d => d.value)))\n    .range([height - padding, padding]);\n  const d: string = shape\n    .line<DataPoint>()\n    .x(p => scaleX(p.date))\n    .y(p => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{width, height}}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path fill=\"transparent\" stroke=\"#3977e3\" {...{d, strokeWidth}} />\n      </Svg>\n    </View>\n  );\n};\n","import React, {memo} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport {Calendar, Screen, Text} from '../../../../components';\nimport {ScrollView} from '../../../../conversions';\nimport {useColor} from '../../../../hooks';\nimport {padding} from '../../../../utils';\nimport {Card} from '../../components/Card';\nimport {completeConfig, useTabTap} from '../../utils';\nimport {Graph} from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {name: string};\n\nconst Title = ({name}: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{paddingBottom: completeConfig.padding}}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  {date: new Date(2018, 9, 1).getTime(), value: 0},\n  {date: new Date(2018, 9, 16).getTime(), value: 0},\n  {date: new Date(2018, 9, 17).getTime(), value: 200},\n  {date: new Date(2018, 10, 1).getTime(), value: 200},\n  {date: new Date(2018, 10, 2).getTime(), value: 300},\n  {date: new Date(2018, 10, 5).getTime(), value: 300},\n];\n\nexport const Reflect = memo(function Reflect() {\n  useTabTap();\n  const color = useColor();\n\n  return (\n    <Screen title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: color.background.secondary,\n        }}\n        style={{backgroundColor: color.background.secondary}}>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput} from 'react-native';\nimport {Button, Modal, Text, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {padding, useRootDispatch} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {createItem, loadUser} from '../../models';\nimport {LandingStackRoutes} from '../../navigationTypes';\nimport {getDefaultUserTemplate} from '../../utils';\n\nconst initialRef = {email: '', password: ''};\nconst initialState = {eye: false, completeForm: false, passwordError: false};\n\nexport const SignUp = memo(function SignUp() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const {goBack, navigate} =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState(p => ({...p, eye: !p.eye}));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const {user, items} = getDefaultUserTemplate();\n    items.map(item => dispatch(createItem(item)));\n    dispatch(loadUser({...user, email: form.current.email}));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = {...form.current, [key]: val};\n      const {email, password} = form.current;\n      const passwordError = password.length < 10 && key === 'password';\n      const completeForm = email.length > 0 && password.length >= 10;\n      setState(p => ({...p, completeForm, passwordError}));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return !focus ? null : (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{marginBottom: padding(4)}}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        error={state.passwordError}\n        icons={[{name: eyeIcon, onPress: onEye, focus: true}]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{marginBottom: padding(2)}}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Text\n        color=\"negative\"\n        invisible={!state.passwordError}\n        title=\"Password is too short.\"\n      />\n      <Button\n        buttonStyle={{marginBottom: padding(4)}}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign Up\"\n      />\n    </Modal>\n  );\n});\n","import {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {Platform, TextInput as OriginalTextInput} from 'react-native';\nimport {\n  ActivityIndicator,\n  Button,\n  Icon,\n  Modal,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from '../../../../components';\nimport {useAuth, useColor} from '../../../../hooks';\nimport {padding} from '../../../../utils';\nimport {ModalHeader} from '../../components/';\n\ninterface Props {\n  onBackgroundPress: () => void;\n  showFacebook?: boolean;\n  showGoogle?: boolean;\n  showApple?: boolean;\n  showEmail?: boolean;\n  showPhone?: boolean;\n  showAnonymous?: boolean;\n  onSuccess: (user: FirebaseAuthTypes.User | null) => void;\n}\n\n// TODO: relocate to somewhere\ninterface SignInButtonProps {\n  onPress: () => void;\n  icon: string;\n  title: string;\n  margin?: boolean;\n}\n\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n  margin,\n}: SignInButtonProps) {\n  const color = useColor();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: color.background.secondary,\n        borderWidth: 1,\n        padding: padding(2),\n        marginBottom: padding(margin ? 4 : 0),\n        borderRadius: padding(2),\n      }}>\n      <Icon name={icon} />\n      <Text style={{paddingLeft: padding(2)}} title={title} type=\"button\" />\n    </TouchableOpacity>\n  );\n});\n\ntype Screen =\n  | 'loading'\n  | 'landing'\n  | 'signUp'\n  | 'logIn'\n  | 'forgotPassword'\n  | 'phone'\n  | 'phoneCode'\n  | 'anonymous';\n\ntype Ref = {\n  email: string;\n  password: string;\n  phone: string;\n  phoneCode: string;\n};\n\nconst initialRef: Ref = {\n  email: '',\n  password: '',\n  phone: '',\n  phoneCode: '',\n};\n\ntype State = {\n  eye: boolean;\n  completeForm: boolean;\n  passwordError: boolean;\n  screen: Screen;\n  error: string | null;\n};\n\nconst initialState: State = {\n  eye: false,\n  error: null,\n  completeForm: false,\n  passwordError: false,\n  screen: 'landing',\n};\n\nexport const Login = memo(function Login({\n  onBackgroundPress,\n  showFacebook,\n  showGoogle,\n  showApple,\n  showPhone,\n  showEmail,\n  showAnonymous,\n  onSuccess,\n}: Props) {\n  const {\n    response,\n    onApple,\n    onGoogle,\n    onFacebook,\n    onPhoneConfirm,\n    onPhone,\n    onEmail,\n    onPasswordReset,\n    onAnonymous,\n  } = useAuth();\n  const {type, error, user} = response;\n  const loading = type === 'loading';\n  const successful = useRef(false);\n  const form = useRef<Ref>(initialRef);\n  const [state, setState] = useState<State>(initialState);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onFormChange = useCallback(\n    (key: keyof Ref) => (val: string) => {\n      form.current = {...form.current, [key]: val};\n    },\n    [],\n  );\n\n  const handleConfirm = useCallback(\n    () => onPhoneConfirm(form.current.phoneCode),\n    [onPhoneConfirm],\n  );\n\n  const handlePhone = useCallback(() => onPhone(form.current.phone), [onPhone]);\n  const handleReset = useCallback(\n    () => onPasswordReset(form.current.email),\n    [onPasswordReset],\n  );\n\n  const onEye = useCallback(() => {\n    setState(p => ({...p, eye: !p.eye}));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password')\n        onEmail(form.current.email, form.current.password);\n    },\n    [onEmail],\n  );\n\n  const onScreenChange = useCallback(\n    (screen: Screen) => () => setState(p => ({...p, screen})),\n    [],\n  );\n\n  useEffect(() => {\n    if (user && !successful.current) {\n      onSuccess(user);\n      successful.current = true;\n    }\n  }, [onSuccess, user]);\n\n  return (\n    <Modal onBackgroundPress={onBackgroundPress} showOverlay>\n      <>\n        {error && <Text center color=\"negative\" title={error} />}\n        {state.screen === 'loading' || type === 'initalizing' ? (\n          <ActivityIndicator />\n        ) : state.screen === 'phoneCode' ? (\n          <>\n            <TextInput\n              backgroundColor=\"secondary\"\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phoneCode')}\n              placeholder=\"phone confirmation code\"\n            />\n            <Button\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleConfirm}\n              title=\"verify phone confirmation code\"\n            />\n            <Button onPress={onScreenChange('landing')} title=\"go back\" />\n          </>\n        ) : state.screen === 'phone' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Phone Confirmation\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phone')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('phone')}\n              placeholder=\"Phone number\"\n              returnKeyType=\"send\"\n              style={{marginBottom: padding(4)}}\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handlePhone}\n              title=\"send confirmation code\"\n            />\n          </>\n        ) : state.screen === 'forgotPassword' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('logIn')}\n              title=\"Reset password\"\n            />\n            <Text\n              center\n              style={{paddingBottom: padding(4)}}\n              title=\"Please enter the email address associated with your account.\"\n            />\n            <Text\n              center\n              style={{paddingBottom: padding(4)}}\n              title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"send\"\n              style={{marginBottom: padding(4)}}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleReset}\n              title=\"Reset password\"\n            />\n          </>\n        ) : state.screen === 'signUp' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Sign up\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{marginBottom: padding(4)}}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{name: eyeIcon, onPress: onEye, focus: true}]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{marginBottom: padding(4)}}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{marginBottom: padding(4)}}\n              center\n              color=\"accent\"\n              disabled={loading}\n              lowercase\n              onPress={onScreenChange('logIn')}\n              title=\"Already have an account?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              disabled={loading}\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Sign up\"\n            />\n          </>\n        ) : state.screen === 'logIn' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('signUp')}\n              title=\"Log in\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{marginBottom: padding(4)}}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"primaryA\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{name: eyeIcon, onPress: onEye, focus: true}]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{marginBottom: padding(4)}}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{marginBottom: padding(4)}}\n              center\n              color=\"accent\"\n              lowercase\n              onPress={onScreenChange('forgotPassword')}\n              title=\"Forgot password?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Log in\"\n            />\n          </>\n        ) : (\n          <>\n            <ModalHeader onRightPress={onBackgroundPress} title=\"Get Started\" />\n            {(Platform.OS === 'ios' || showApple) && (\n              <SignInButton\n                icon=\"apple\"\n                margin\n                onPress={onApple}\n                title=\"Continue with Apple\"\n              />\n            )}\n            {showGoogle && (\n              <SignInButton\n                icon=\"google\"\n                margin\n                onPress={onGoogle}\n                title=\"Continue with Google\"\n              />\n            )}\n            {showFacebook && (\n              <SignInButton\n                icon=\"facebook\"\n                margin\n                onPress={onFacebook}\n                title=\"Continue with Facebook\"\n              />\n            )}\n            {showEmail && (\n              <SignInButton\n                icon=\"email\"\n                margin\n                onPress={onScreenChange('signUp')}\n                title=\"Continue with Email\"\n              />\n            )}\n            {showPhone && (\n              <SignInButton\n                icon=\"phone\"\n                margin\n                onPress={onScreenChange('phone')}\n                title=\"Continue with Phone\"\n              />\n            )}\n            {showAnonymous && (\n              <SignInButton\n                icon=\"account\"\n                onPress={onAnonymous}\n                title=\"Continue Anonymously\"\n              />\n            )}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {View} from 'react-native';\nimport {Button, Carousel, Screen} from '../../../../components';\nimport {Slide} from '../../../../components/Carousel/types';\nimport {padding, useRootDispatch} from '../../../../utils';\nimport {createItem, loadUser, login} from '../../models';\nimport {completeConfig, getDefaultUserTemplate} from '../../utils';\nimport {Login} from './Login';\n\nconst slides: Slide[] = [\n  {\n    id: '1',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Welcome to Accomplish',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: padding(10)},\n        paragraphs: [\n          [{title: 'Start investing commission-free'}],\n          [\n            {title: 'Other fees may apply. View our'},\n            {title: 'fee schedule', onPress: () => undefined},\n            {title: 'to learn more. All investments have risks.'},\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Enjoy commission-free stock trading',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{title: 'View fee disclosures', onPress: () => undefined}],\n        ],\n      },\n    ],\n  },\n  {\n    id: '3',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'No account minimum',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Everything at your fingertips',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '5',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Account protection',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            {title: 'www.sipc.org', onPress: () => undefined},\n            {title: '.'},\n          ],\n        ],\n      },\n    ],\n  },\n];\n\nexport const Welcome = memo(function Welcome() {\n  const dispatch = useRootDispatch();\n  const [showLogin, setShowLogin] = useState(false);\n  const onToggleLogin = useCallback(() => setShowLogin(p => !p), []);\n  const onLoginSuccess = useCallback(\n    auth => {\n      const {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      } = auth;\n      const data = {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      };\n      dispatch(login(data));\n      const {user, items} = getDefaultUserTemplate();\n      items.map(item => dispatch(createItem(item)));\n      dispatch(loadUser({...user, email}));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Screen>\n        <View style={{flex: 1}}>\n          <Carousel duration={6000} slides={slides} />\n          <View style={{padding: completeConfig.padding}}>\n            <Button\n              buttonStyle={{marginBottom: padding(2)}}\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onToggleLogin}\n              title=\"Get Started\"\n            />\n          </View>\n        </View>\n      </Screen>\n      {showLogin && (\n        <Login\n          onBackgroundPress={onToggleLogin}\n          onSuccess={onLoginSuccess}\n          showAnonymous\n          showEmail\n          showFacebook\n          showGoogle\n          showPhone\n        />\n      )}\n    </>\n  );\n});\n","import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, {ReactElement, useCallback} from 'react';\nimport {Icon} from '../../components';\nimport {useColor} from '../../hooks';\nimport {rootScreenOptions} from '../../providers/Navigation/configs';\nimport {\n  HomeStackRoutes,\n  ImplementStackRoutes,\n  LandingStackRoutes,\n  MainStackRoutes,\n} from './navigationTypes';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  PasswordReset,\n  Project,\n  Projects,\n  Reflect,\n  SignUp,\n  Welcome,\n} from './screens';\nimport {useTabTap} from './utils';\n\nconst noHeader: StackNavigationOptions = {headerShown: false};\ntype TabIcons = {\n  [key in keyof HomeStackRoutes]: {focused: string; unFocused: string};\n};\n\nconst tabIcons: TabIcons = {\n  plan: {focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline'},\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: {focused: 'finance', unFocused: 'finance'},\n  account: {focused: 'account', unFocused: 'account'},\n};\n\ntype TabBarIconProps = {\n  focused: boolean;\n  size: number;\n};\n\nconst useTabs = () => {\n  const color = useColor();\n\n  const screenOptions = useCallback(\n    ({route}) => ({\n      headerShown: false,\n      tabBarIcon: function tabBarIcon({focused, size}: TabBarIconProps) {\n        const iconColor = focused ? 'primaryA' : 'tertiary';\n        const key = focused ? 'focused' : 'unFocused';\n        const name = (tabIcons as any)[route.name][key];\n        return <Icon color={iconColor} name={name} size={size} />;\n      },\n      tabBarHideOnKeyboard: true,\n      tabBarActiveTintColor: color.text.primaryA,\n      tabBarInactiveTintColor: color.text.tertiary,\n      tabBarShowLabel: false,\n      tabBarStyle: {backgroundColor: color.background.primaryA},\n    }),\n    [color.background.primaryA, color.text.primaryA, color.text.tertiary],\n  );\n\n  return {screenOptions};\n};\n\nconst HomeStack = createBottomTabNavigator<HomeStackRoutes>();\nconst Home = () => {\n  const {screenOptions} = useTabs();\n  return (\n    <HomeStack.Navigator screenOptions={screenOptions}>\n      <HomeStack.Screen component={Capture} name=\"plan\" />\n      <HomeStack.Screen component={Implement} name=\"implement\" />\n      <HomeStack.Screen component={Reflect} name=\"reflect\" />\n      <HomeStack.Screen component={Account} name=\"account\" />\n    </HomeStack.Navigator>\n  );\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackRoutes>();\nconst Implement = () => {\n  useTabTap();\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen component={Projects} name=\"projects\" />\n      <ImplementStack.Screen component={Project} name=\"project\" />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackRoutes>();\nexport const Landing = (): ReactElement => {\n  return (\n    <LandingStack.Navigator screenOptions={rootScreenOptions}>\n      <LandingStack.Screen component={Welcome} name=\"welcome\" />\n      <LandingStack.Screen component={SignUp} name=\"sign-up\" />\n      <LandingStack.Screen component={LogIn} name=\"log-in\" />\n      <LandingStack.Screen component={PasswordReset} name=\"password-reset\" />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackRoutes>();\nexport const Main = (): ReactElement => {\n  return (\n    <MainStack.Navigator screenOptions={rootScreenOptions}>\n      <MainStack.Screen component={Home} name=\"home\" />\n      <MainStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </MainStack.Navigator>\n  );\n};\n","import React, {memo} from 'react';\nimport {useRootSelector} from '../../utils';\nimport {Landing, Main} from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector(s => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}