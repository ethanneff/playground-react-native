{"version":3,"file":"static/js/485.09198ab3.chunk.js","mappings":"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","sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/PasswordReset/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/Login.tsx","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"sourcesContent":["import { padding } from '../../../features';\n\nexport const completeConfig = {\n  borderRadius: padding(2),\n  padding: padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import { v4 } from 'uuid';\nimport { Item, User } from '../models';\n\ntype GetDefaultUserTemplate = {\n  items: Item[];\n  user: User;\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    { ...dItem(u), title: 'Backlog', type: 'list' },\n    { ...dItem(u), title: 'Todo', type: 'list' },\n    { ...dItem(u), title: 'In Progress', type: 'list' },\n    { ...dItem(u), title: 'Done', type: 'list' },\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // User\n  const date = Date.now();\n  const u = v4();\n\n  // Inbox\n  const inboxItems: Item[] = [\n    { ...dItem(u), title: 'do dishes' },\n    { ...dItem(u), title: 'schedule meeting with Jim' },\n    { ...dItem(u), title: 'run 4 miles' },\n    { ...dItem(u), title: 'change oil' },\n    { ...dItem(u), title: 'what is the best mediation' },\n    { ...dItem(u), title: 'record Kelly birthday on Sep 22' },\n    { ...dItem(u), title: 'drink water' },\n    { ...dItem(u), title: 'intensity + focus = deep work' },\n    { ...dItem(u), title: 'put $20 in phone' },\n    { ...dItem(u), title: 'clear emails' },\n  ];\n\n  // Projects\n  const homeTodoItems: Item[] = [\n    { ...dItem(u), title: 'clean desk' },\n    { ...dItem(u), title: 'clean room' },\n    { ...dItem(u), title: 'walk dog' },\n    { ...dItem(u), title: 'brush teeth' },\n    { ...dItem(u), title: 'do laundry' },\n    { ...dItem(u), title: 'fix sink' },\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    { ...dItem(u), title: 'one one one' },\n    { ...dItem(u), title: 'q1 planning' },\n  ];\n  const bookItems: Item[] = [\n    { ...dItem(u), title: 'eat that frog' },\n    { ...dItem(u), title: 'deep work' },\n    { ...dItem(u), title: 'the one thing' },\n  ];\n  const giftItems: Item[] = [\n    { ...dItem(u), title: 'girlfriend' },\n    { ...dItem(u), title: 'sister' },\n    { ...dItem(u), title: 'parents' },\n  ];\n  const checkItems: Item[] = [\n    { ...dItem(u), title: 'after bathroom' },\n    { ...dItem(u), title: 'before car' },\n    { ...dItem(u), title: 'before sleep' },\n  ];\n  const codeItems: Item[] = [\n    { ...dItem(u), title: 'php' },\n    { ...dItem(u), title: 'javascript' },\n    { ...dItem(u), title: 'swift' },\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map((i) => i.id),\n    },\n  ];\n\n  // User\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    email: 'bob@smith.com',\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Button,\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n} from '../../../components';\nimport { padding, useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { addItemToItem, createItem, Item } from '../models';\nimport { completeConfig } from '../utils';\n\ntype AddItemProps = {\n  parentItemId: string;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  width,\n  parentItemId,\n  placeholder,\n  title,\n}: AddItemProps) {\n  const colors = useColors();\n  const textInputRef = useRef<TextInputRef>(null);\n  const [showInput, setShowInput] = useState(false);\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) {\n        Keyboard.dismiss();\n        return;\n      }\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n        type: 'note',\n      };\n      dispatch(createItem(item));\n      dispatch(addItemToItem({ parentItemId, itemId }));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  const onAddItemPress = useCallback(() => setShowInput((p) => !p), []);\n  const onClose = useCallback(() => setShowInput(false), []);\n  const onBlur = useCallback(() => setShowInput(false), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n      clear: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: colors.background.primaryA,\n        justifyContent: 'center',\n      }}\n    >\n      {showInput ? (\n        <TextInput\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmitEditing={onSubmit}\n          placeholder={placeholder}\n          returnKeyType=\"done\"\n          submitClear\n        />\n      ) : (\n        <Button center color=\"accent\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, { memo, ReactElement } from 'react';\nimport { LayoutChangeEvent, View } from 'react-native';\nimport { useColors } from '../../../features';\nimport { completeConfig } from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  children: ReactElement | ReactElement[];\n  flex?: boolean;\n  margin?: 'bottom' | 'right' | 'none';\n  onLayout?: (event: LayoutChangeEvent) => void;\n  width?: number;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const colors = useColors();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: colors.background.primaryA,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}\n    >\n      {children}\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { TextInput, TextInputIcon } from '../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { navItemDetails, updateItem } from '../models';\nimport { MainStackRoutes } from '../navigationTypes';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<StackNavigationProp<MainStackRoutes>>();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateItem({ ...item, title }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSave,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'dots-horizontal', onPress: onDetail },\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n    >\n      <TextInput\n        editable={item.editable}\n        icons={icons}\n        onSubmitEditing={onSave}\n        placeholder=\"List title...\"\n        returnKeyType=\"done\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport {\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n  TouchableWithoutFeedback,\n} from '../../../components';\nimport { useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport { ImplementTabNavigation } from '../navigationTypes';\nimport { completeConfig } from '../utils';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<TextInputRef>(null);\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<ImplementTabNavigation>();\n  const colors = useColors();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({ ...item, title }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({ projectItemId: itemId }));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index - 1 }));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index + 1 }));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onItemTitleClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'chevron-up', onPress: onItemUp, hidden: true },\n    { name: 'chevron-down', onPress: onItemDown, hidden: true },\n    { name: 'dots-horizontal', onPress: onItemDetails },\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: colors.background.secondary,\n        flexDirection: 'row',\n      }}\n    >\n      <TextInput\n        backgroundColor=\"secondary\"\n        icons={icons}\n        onRef={textInputRef}\n        onSubmitEditing={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        returnKeyType=\"done\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, FlatListRef } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { ListItem } from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatListRef>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({ item, index }) => (\n      <ListItem\n        index={index}\n        itemId={item}\n        key={item}\n        parentItemId={parentItemId}\n      />\n    ),\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      onRef={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, { memo, ReactElement } from 'react';\nimport { View } from 'react-native';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { Card } from './Card';\nimport { ListHeader } from './ListHeader';\nimport { ListItems } from './ListItems';\n\ntype ListProps = {\n  footer?: ReactElement;\n  itemId: string;\n  listWidth?: number;\n  maxHeight: number;\n  orientation?: 'vertical' | 'horizontal';\n  parentItemId: string | null;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{ padding, maxHeight }}>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport { FlatList } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { List } from './List';\n\ntype BoardProps = {\n  listMaxHeight: number;\n  listWidth: number;\n  projectItemId: string;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item) => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({ length: listSize, offset: listSize * index, index }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({ item }) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{ padding: completeConfig.padding }}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{ height: '100%' }}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Button, Modal, Text } from '../../../components';\nimport { padding } from '../../../features';\n\ntype DeleteModalProps = {\n  onCancel: () => void;\n  onDelete: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{ alignItems: 'center' }}>\n        <Text\n          style={{ paddingBottom: padding(2) }}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"negative\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../components';\nimport { padding } from '../../../features';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{ padding: padding(2) }}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { RelativeDate, Text } from '../../../components';\nimport { padding } from '../../../features';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  createdAt: number;\n  type: string;\n  updatedAt: number;\n  userId: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text style={{ padding: padding(2) }} title={type} />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{ padding: padding(2) }} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{ padding: padding(2) }} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{ padding: padding(2) }} />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { TextInput, TextInputIcon } from '../../../components';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype OnSubmit = (text: string) => void;\n\ntype ItemEditProps = {\n  description?: string;\n  onSubmit: (type: string) => OnSubmit;\n  placeholder: string;\n  title: string;\n  titleEditable: boolean;\n};\n\n// TODO: need to clear on blur\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  titleEditable,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string): TextInputIcon[] => [\n      { name: 'close', onPress: onClose, focus: true, reset: true },\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: 'accent',\n        focus: true,\n        required: true,\n      },\n    ],\n    [onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInput\n          editable={titleEditable}\n          icons={icons('title')}\n          onSubmitEditing={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          returnKeyType=\"done\"\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInput\n          icons={icons('description')}\n          multiline\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Icon, Text, TouchableOpacity } from '../../../components';\nimport { padding } from '../../../features';\n\ntype Props = {\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n  title: string;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = padding(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: padding(4),\n      }}\n    >\n      <TouchableOpacity onPress={onLeftPress}>\n        <Icon invisible={!onLeftPress} name=\"chevron-left\" size={size} />\n      </TouchableOpacity>\n      <Text center flex title={title} type=\"h4\" />\n      <TouchableOpacity onPress={onRightPress}>\n        <Icon invisible={!onRightPress} name=\"close\" size={size} />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { Button, Screen, ScrollView, Text } from '../../../../components';\nimport {\n  padding,\n  RootNavigation,\n  useAuth,\n  useColors,\n  useTabTap,\n} from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card } from '../../components';\nimport { logout } from '../../models';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  useTabTap();\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<RootNavigation>();\n  const { onLogout, response } = useAuth();\n  const profile = useRootSelector((s) => s.completeAuth);\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  useEffect(() => {\n    if (response.type === 'logout') dispatch(logout());\n  }, [dispatch, response.type]);\n\n  return (\n    <Screen title=\"Account\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Profile\"\n            type=\"h5\"\n          />\n          <Text title={profile?.displayName || ''} />\n          <Text title={profile?.email || ''} />\n          <Text title={String(profile?.emailVerified) || ''} />\n          <Text title={profile?.uid || ''} />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Reminders\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Payment\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Feedback\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Button onPress={onLogout} title=\"logout\" />\n        {response.error && <Text color=\"negative\" title={response.error} />}\n        <Button onPress={onNavToAdmin} title=\"go to admin\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useRef, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { Button, KeyboardHandler, Screen } from '../../../../components';\nimport {\n  padding,\n  useColors,\n  useKeyboardHeight,\n  useTabTap,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Card, List } from '../../components';\nimport { getInbox } from '../../models';\n\nconst initialState = { container: 0, button: 0 };\nexport const Capture = memo(function Capture() {\n  useTabTap();\n  const colors = useColors();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = padding(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const { height } = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const { container, button } = containerRefs.current;\n      if (container > 0 && button > 0 && !containerHeight) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n      }\n    },\n    [containerHeight],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout('container')}\n      >\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"accent\"\n                disabled={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { Button, Modal, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card, DeleteModal, ItemContext, ItemEdit } from '../../components';\nimport { removeItem, removeItemFromItem, updateItem } from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  const { itemId, parentItemId } = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({ parentItemId, itemId }));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({ ...item, [type]: text }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return item ? (\n    <>\n      <Modal\n        backgroundColor={colors.background.secondary}\n        onBackgroundPress={goBack}\n      >\n        <View>\n          <ItemEdit\n            description={item.description}\n            onSubmit={onItemSubmit}\n            placeholder=\"Item\"\n            title={item.title}\n            titleEditable={item.editable}\n          />\n          <Card margin=\"bottom\">\n            <Text title=\"Reminders\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Tags\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Comments\" />\n          </Card>\n          <ItemContext\n            createdAt={item.createdAt}\n            type={item.type}\n            updatedAt={item.updatedAt}\n            userId={item.userId}\n          />\n          {item.editable ? (\n            <View\n              style={{\n                flexDirection: 'row',\n                flex: 1,\n                justifyContent: 'space-between',\n              }}\n            >\n              <Card flex>\n                <Button center onPress={goBack} title=\"close\" />\n              </Card>\n              <View style={{ padding: padding(2) }} />\n              <Card flex>\n                <Button\n                  center\n                  color=\"negative\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            </View>\n          ) : (\n            <Card flex>\n              <Button center onPress={goBack} title=\"close\" />\n            </Card>\n          )}\n        </View>\n      </Modal>\n      {deleteModal ? (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      ) : null}\n    </>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Modal, TextInput, TextInputRef } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { eye: false, completeForm: false };\n\nexport const LogIn = memo(function LogIn() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('password-reset'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const completeForm = email.length > 0 && password.length > 0;\n      setState((p) => ({ ...p, completeForm }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: padding(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\nimport { LandingStackRoutes } from '../../navigationTypes';\n\nconst initialRef = { email: '' };\nconst initialState = { complete: false };\nexport const PasswordReset = memo(function PasswordReset() {\n  const colors = useColors();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const focus = useIsFocused();\n  const emailRef = useRef<TextInputRef>(null);\n\n  const onSubmit = useCallback(() => {\n    if (!state.complete) return;\n    goBack();\n  }, [goBack, state.complete]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const complete = val.length > 0;\n      setState((p) => ({ ...p, complete }));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Password reset\" />\n      <Text\n        center\n        style={{ paddingBottom: padding(4) }}\n        title=\"Please enter the email address associated with your account.\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: padding(4) }}\n        title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Email address\"\n        returnKeyType=\"send\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.complete}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset password\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport { padding, useColors, useKeyboardHeight } from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\nimport { Board } from '../../components';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const { projectItemId } = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = padding(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = padding(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      onLeftPress={navBack}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title={projectItemTitle}\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport { padding, useColors, useKeyboardHeight } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { List } from '../../components';\nimport { getProjects } from '../../models';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const colors = useColors();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = padding(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Implement\">\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { scaleLinear, scaleTime } from 'd3-scale';\nimport { line, curveBasis } from 'd3-shape';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Svg, { Defs, LinearGradient, Path, Stop } from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  height: number;\n  width: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d: string = line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(curveBasis)(data) as string;\n  return (\n    <View style={{ width, height }}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path\n          d={d}\n          fill=\"transparent\"\n          stroke=\"#3977e3\"\n          strokeWidth={strokeWidth}\n        />\n      </Svg>\n    </View>\n  );\n};\n","import React, { memo } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { Calendar, Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors, useTabTap } from '../../../../features';\nimport { Card } from '../../components';\nimport { completeConfig } from '../../utils';\nimport { Graph } from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = { name: string };\n\nconst Title = ({ name }: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{ paddingBottom: completeConfig.padding }}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  { date: new Date(2018, 9, 1).getTime(), value: 0 },\n  { date: new Date(2018, 9, 16).getTime(), value: 0 },\n  { date: new Date(2018, 9, 17).getTime(), value: 200 },\n  { date: new Date(2018, 10, 1).getTime(), value: 200 },\n  { date: new Date(2018, 10, 2).getTime(), value: 300 },\n  { date: new Date(2018, 10, 5).getTime(), value: 300 },\n];\n\nexport const Reflect = memo(function Reflect() {\n  useTabTap();\n  const colors = useColors();\n\n  return (\n    <Screen title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { eye: false, completeForm: false, passwordError: false };\n\nexport const SignUp = memo(function SignUp() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const passwordError = password.length < 10 && key === 'password';\n      const completeForm = email.length > 0 && password.length >= 10;\n      setState((p) => ({ ...p, completeForm, passwordError }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        error={state.passwordError}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: padding(2) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Text\n        color=\"negative\"\n        invisible={!state.passwordError}\n        title=\"Password is too short.\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: padding(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign Up\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { FirebaseAuthTypes } from '@react-native-firebase/auth';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Loader,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n  TouchableOpacity,\n} from '../../../../components';\nimport { padding, useAuth, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\n\ntype Props = {\n  onBackgroundPress: () => void;\n  onSuccess: (user: FirebaseAuthTypes.User | null) => void;\n  showAnonymous?: boolean;\n  showApple?: boolean;\n  showEmail?: boolean;\n  showFacebook?: boolean;\n  showGoogle?: boolean;\n  showPhone?: boolean;\n};\n\n// TODO: relocate to somewhere\ninterface SignInButtonProps {\n  icon: string;\n  margin?: boolean;\n  onPress: () => void;\n  title: string;\n}\n\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n  margin,\n}: SignInButtonProps) {\n  const colors = useColors();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: colors.background.secondary,\n        borderWidth: 1,\n        padding: padding(2),\n        marginBottom: padding(margin ? 4 : 0),\n        borderRadius: padding(2),\n      }}\n    >\n      <Icon name={icon} />\n      <Text style={{ paddingLeft: padding(2) }} title={title} type=\"button\" />\n    </TouchableOpacity>\n  );\n});\n\ntype Screen =\n  | 'loading'\n  | 'landing'\n  | 'signUp'\n  | 'logIn'\n  | 'forgotPassword'\n  | 'phone'\n  | 'phoneCode'\n  | 'anonymous';\n\ntype Ref = {\n  email: string;\n  password: string;\n  phone: string;\n  phoneCode: string;\n};\n\nconst initialRef: Ref = {\n  email: '',\n  password: '',\n  phone: '',\n  phoneCode: '',\n};\n\ntype State = {\n  completeForm: boolean;\n  error: string | null;\n  eye: boolean;\n  passwordError: boolean;\n  screen: Screen;\n};\n\nconst initialState: State = {\n  eye: false,\n  error: null,\n  completeForm: false,\n  passwordError: false,\n  screen: 'landing',\n};\n\nexport const Login = memo(function Login({\n  onBackgroundPress,\n  showFacebook,\n  showGoogle,\n  showApple,\n  showPhone,\n  showEmail,\n  showAnonymous,\n  onSuccess,\n}: Props) {\n  const {\n    response,\n    onApple,\n    onGoogle,\n    onFacebook,\n    onPhoneConfirm,\n    onPhone,\n    onEmail,\n    onPasswordReset,\n    onAnonymous,\n  } = useAuth();\n  const { type, error, user } = response;\n  const loading = type === 'loading';\n  const successful = useRef(false);\n  const form = useRef<Ref>(initialRef);\n  const [state, setState] = useState<State>(initialState);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onFormChange = useCallback(\n    (key: keyof Ref) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n    },\n    [],\n  );\n\n  const handleConfirm = useCallback(\n    () => onPhoneConfirm(form.current.phoneCode),\n    [onPhoneConfirm],\n  );\n\n  const handlePhone = useCallback(() => onPhone(form.current.phone), [onPhone]);\n  const handleReset = useCallback(\n    () => onPasswordReset(form.current.email),\n    [onPasswordReset],\n  );\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password')\n        onEmail(form.current.email, form.current.password);\n    },\n    [onEmail],\n  );\n\n  const onScreenChange = useCallback(\n    (screen: Screen) => () => setState((p) => ({ ...p, screen })),\n    [],\n  );\n\n  useEffect(() => {\n    if (user && !successful.current) {\n      onSuccess(user);\n      successful.current = true;\n    }\n  }, [onSuccess, user]);\n\n  return (\n    <Modal onBackgroundPress={onBackgroundPress} showOverlay>\n      <>\n        {error && <Text center color=\"negative\" title={error} />}\n        {state.screen === 'loading' || type === 'initalizing' ? (\n          <Loader />\n        ) : state.screen === 'phoneCode' ? (\n          <>\n            <TextInput\n              backgroundColor=\"secondary\"\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phoneCode')}\n              placeholder=\"phone confirmation code\"\n            />\n            <Button\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleConfirm}\n              title=\"verify phone confirmation code\"\n            />\n            <Button onPress={onScreenChange('landing')} title=\"go back\" />\n          </>\n        ) : state.screen === 'phone' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Phone Confirmation\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phone')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('phone')}\n              placeholder=\"Phone number\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: padding(4) }}\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handlePhone}\n              title=\"send confirmation code\"\n            />\n          </>\n        ) : state.screen === 'forgotPassword' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('logIn')}\n              title=\"Reset password\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: padding(4) }}\n              title=\"Please enter the email address associated with your account.\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: padding(4) }}\n              title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleReset}\n              title=\"Reset password\"\n            />\n          </>\n        ) : state.screen === 'signUp' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Sign up\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: padding(4) }}\n              center\n              color=\"accent\"\n              disabled={loading}\n              lowercase\n              onPress={onScreenChange('logIn')}\n              title=\"Already have an account?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              disabled={loading}\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Sign up\"\n            />\n          </>\n        ) : state.screen === 'logIn' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('signUp')}\n              title=\"Log in\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"primaryA\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: padding(4) }}\n              center\n              color=\"accent\"\n              lowercase\n              onPress={onScreenChange('forgotPassword')}\n              title=\"Forgot password?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Log in\"\n            />\n          </>\n        ) : (\n          <>\n            <ModalHeader onRightPress={onBackgroundPress} title=\"Get Started\" />\n            {(Platform.OS === 'ios' || showApple) && (\n              <SignInButton\n                icon=\"apple\"\n                margin\n                onPress={onApple}\n                title=\"Continue with Apple\"\n              />\n            )}\n            {showGoogle && (\n              <SignInButton\n                icon=\"google\"\n                margin\n                onPress={onGoogle}\n                title=\"Continue with Google\"\n              />\n            )}\n            {showFacebook && (\n              <SignInButton\n                icon=\"facebook\"\n                margin\n                onPress={onFacebook}\n                title=\"Continue with Facebook\"\n              />\n            )}\n            {showEmail && (\n              <SignInButton\n                icon=\"email\"\n                margin\n                onPress={onScreenChange('signUp')}\n                title=\"Continue with Email\"\n              />\n            )}\n            {showPhone && (\n              <SignInButton\n                icon=\"phone\"\n                margin\n                onPress={onScreenChange('phone')}\n                title=\"Continue with Phone\"\n              />\n            )}\n            {showAnonymous && (\n              <SignInButton\n                icon=\"account\"\n                onPress={onAnonymous}\n                title=\"Continue Anonymously\"\n              />\n            )}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { View } from 'react-native';\nimport { Button, Carousel, Screen } from '../../../../components';\nimport { CarouselSlide } from '../../../../components/Carousel/types';\nimport { padding } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { createItem, loadUser, login } from '../../models';\nimport { completeConfig, getDefaultUserTemplate } from '../../utils';\nimport { Login } from './Login';\n\nconst slides: CarouselSlide[] = [\n  {\n    id: '1',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Welcome to Accomplish',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [{ title: 'Start investing commission-free' }],\n          [\n            { title: 'Other fees may apply. View our' },\n            { title: 'fee schedule', onPress: () => undefined },\n            { title: 'to learn more. All investments have risks.' },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Enjoy commission-free stock trading',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{ title: 'View fee disclosures', onPress: () => undefined }],\n        ],\n      },\n    ],\n  },\n  {\n    id: '3',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'No account minimum',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Everything at your fingertips',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '5',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Account protection',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            { title: 'www.sipc.org', onPress: () => undefined },\n            { title: '.' },\n          ],\n        ],\n      },\n    ],\n  },\n];\n\nexport const Welcome = memo(function Welcome() {\n  const dispatch = useRootDispatch();\n  const [showLogin, setShowLogin] = useState(false);\n  const onToggleLogin = useCallback(() => setShowLogin((p) => !p), []);\n  const onLoginSuccess = useCallback(\n    (auth) => {\n      const {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      } = auth;\n      const data = {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      };\n      dispatch(login(data));\n      const { user, items } = getDefaultUserTemplate();\n      items.map((item) => dispatch(createItem(item)));\n      dispatch(loadUser({ ...user, email }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Screen>\n        <View style={{ flex: 1 }}>\n          <Carousel duration={6000} slides={slides} />\n          <View style={{ padding: completeConfig.padding }}>\n            <Button\n              buttonStyle={{ marginBottom: padding(2) }}\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onToggleLogin}\n              title=\"Get Started\"\n            />\n          </View>\n        </View>\n      </Screen>\n      {showLogin && (\n        <Login\n          onBackgroundPress={onToggleLogin}\n          onSuccess={onLoginSuccess}\n          showAnonymous\n          showEmail\n          showFacebook\n          showGoogle\n          showPhone\n        />\n      )}\n    </>\n  );\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, { ReactElement } from 'react';\nimport { useNavScreenOptions, useTabTap } from '../../features';\nimport {\n  HomeStackRoutes,\n  ImplementStackRoutes,\n  LandingStackRoutes,\n  MainStackRoutes,\n} from './navigationTypes';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  PasswordReset,\n  Project,\n  Projects,\n  Reflect,\n  SignUp,\n  Welcome,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = { headerShown: false };\n\nconst tabIcons = {\n  plan: { focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline' },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: { focused: 'finance', unFocused: 'finance' },\n  account: { focused: 'account', unFocused: 'account' },\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackRoutes>();\nconst Implement = () => {\n  useTabTap();\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen component={Projects} name=\"projects\" />\n      <ImplementStack.Screen component={Project} name=\"project\" />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst TabStack = createBottomTabNavigator<HomeStackRoutes>();\nconst Home = () => {\n  const { tabScreenOptions } = useNavScreenOptions();\n  return (\n    <TabStack.Navigator screenOptions={tabScreenOptions({ tabIcons })}>\n      <TabStack.Screen component={Capture} name=\"plan\" />\n      <TabStack.Screen component={Implement} name=\"implement\" />\n      <TabStack.Screen component={Reflect} name=\"reflect\" />\n      <TabStack.Screen component={Account} name=\"account\" />\n    </TabStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackRoutes>();\nexport const Landing = (): ReactElement => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <LandingStack.Navigator screenOptions={modalScreenOptions}>\n      <LandingStack.Screen component={Welcome} name=\"welcome\" />\n      <LandingStack.Screen component={SignUp} name=\"sign-up\" />\n      <LandingStack.Screen component={LogIn} name=\"log-in\" />\n      <LandingStack.Screen component={PasswordReset} name=\"password-reset\" />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackRoutes>();\nexport const Main = (): ReactElement => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <MainStack.Navigator screenOptions={modalScreenOptions}>\n      <MainStack.Screen component={Home} name=\"home\" />\n      <MainStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </MainStack.Navigator>\n  );\n};\n","import React, { memo } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { Landing, Main } from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"names":["completeConfig","borderRadius","padding","alert","width","height","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","name","items","AddItem","memo","parentItemId","placeholder","colors","useColors","textInputRef","useRef","useState","showInput","setShowInput","dispatch","useRootDispatch","useRootSelector","s","completeUser","Error","onSubmit","useCallback","value","itemId","item","createItem","addItemToItem","Keyboard","onAddItemPress","p","onClose","onBlur","icons","onPress","focus","reset","color","required","clear","useEffect","current","View","style","backgroundColor","background","primaryA","justifyContent","blurOnSubmit","onRef","onSubmitEditing","returnKeyType","submitClear","center","Card","onLayout","margin","flex","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeItem","onSave","updateItem","onDetail","navItemDetails","flexDirection","alignItems","ListItem","index","parentChildrenCount","length","onItemTitleClose","onItemTitleSubmit","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","swapItemOrderInItem","j","hidden","key","onLongPress","secondary","pointerEvents","ListItems","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","titleEditable","multiline","ModalHeader","onLeftPress","size","onRightPress","invisible","Account","useTabTap","useAuth","onLogout","response","profile","completeAuth","onNavToAdmin","logout","displayName","String","emailVerified","uid","error","initialState","container","button","Capture","containerRefs","keyboardHeight","useKeyboardHeight","containerHeight","setContainerHeight","keyboardPadding","getInbox","noItemChildren","onOrganize","event","nativeEvent","layout","showSearchBar","rightIcon","disabled","ItemDetail","goBack","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","text","onDeletePress","onDeleteClose","initialRef","password","eye","completeForm","LogIn","useIsFocused","form","state","setState","navWelcome","onSecondary","emailRef","passwordRef","eyeIcon","onEye","loadUser","onFormChange","val","autoCorrect","keyboardType","onChangeText","textContentType","secureTextEntry","buttonStyle","lowercase","complete","PasswordReset","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","navBack","Projects","dimensions","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","line","x","y","curve","curveBasis","StyleSheet","Defs","LinearGradient","x1","x2","y1","y2","Stop","stopColor","Path","fill","stroke","Title","getTime","Reflect","Dimensions","passwordError","SignUp","SignInButton","icon","borderColor","borderWidth","paddingLeft","phone","phoneCode","screen","Login","showFacebook","showGoogle","showApple","showPhone","showEmail","showAnonymous","onSuccess","onApple","onGoogle","onFacebook","onPhoneConfirm","onPhone","onEmail","onPasswordReset","onAnonymous","loading","successful","handleConfirm","handlePhone","handleReset","onScreenChange","Platform","slides","sections","titleType","titleStyle","paragraphs","Welcome","showLogin","setShowLogin","onToggleLogin","onLoginSuccess","auth","isAnonymous","phoneNumber","photoURL","login","duration","noHeader","headerShown","tabIcons","plan","focused","unFocused","implement","reflect","account","ImplementStack","createStackNavigator","Implement","Navigator","screenOptions","Screen","component","TabStack","createBottomTabNavigator","Home","tabScreenOptions","useNavScreenOptions","LandingStack","Landing","modalScreenOptions","MainStack","Main","App"],"sourceRoot":""}