{"version":3,"sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/PasswordReset/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/Login.tsx","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"names":["completeConfig","borderRadius","padding","alert","width","height","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","name","items","AddItem","memo","parentItemId","placeholder","color","useColor","textInputRef","useRef","useState","showInput","setShowInput","dispatch","useRootDispatch","useRootSelector","s","completeUser","Error","onSubmit","useCallback","value","itemId","item","createItem","addItemToItem","Keyboard","dismiss","onAddItemPress","p","onClose","onBlur","icons","onPress","focus","reset","required","clear","useEffect","current","View","style","backgroundColor","background","primaryA","justifyContent","blurOnSubmit","onRef","onSubmitEditing","returnKeyType","submitClear","center","Card","onLayout","margin","flex","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeItem","onSave","updateItem","onDetail","navItemDetails","flexDirection","alignItems","ListItem","index","parentChildrenCount","length","onItemTitleClose","onItemTitleSubmit","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","swapItemOrderInItem","j","hidden","key","onLongPress","secondary","pointerEvents","ListItems","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","titleEditable","multiline","ModalHeader","onLeftPress","size","onRightPress","invisible","Account","useTabTap","useAuth","onLogout","response","profile","completeAuth","onNavToAdmin","logout","displayName","String","emailVerified","uid","error","initialState","container","button","Capture","containerRefs","keyboardHeight","useKeyboardHeight","containerHeight","setContainerHeight","keyboardPadding","getInbox","noItemChildren","onOrganize","event","nativeEvent","layout","showSearchBar","rightIcon","disabled","ItemDetail","goBack","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","text","onDeletePress","onDeleteClose","initialRef","password","eye","completeForm","LogIn","useIsFocused","form","state","setState","navWelcome","onSecondary","emailRef","passwordRef","eyeIcon","onEye","loadUser","onFormChange","val","autoCorrect","keyboardType","onChangeText","textContentType","secureTextEntry","buttonStyle","lowercase","complete","PasswordReset","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","navBack","Projects","dimensions","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","Dimensions","get","passwordError","SignUp","SignInButton","icon","borderColor","borderWidth","paddingLeft","phone","phoneCode","screen","Login","showFacebook","showGoogle","showApple","showPhone","showEmail","showAnonymous","onSuccess","onApple","onGoogle","onFacebook","onPhoneConfirm","onPhone","onEmail","onPasswordReset","onAnonymous","loading","successful","handleConfirm","handlePhone","handleReset","onScreenChange","Platform","OS","slides","sections","titleType","titleStyle","paragraphs","Welcome","showLogin","setShowLogin","onToggleLogin","onLoginSuccess","auth","isAnonymous","phoneNumber","photoURL","login","duration","noHeader","headerShown","tabIcons","plan","focused","unFocused","implement","reflect","account","ImplementStack","createStackNavigator","Implement","Navigator","screenOptions","Screen","component","TabStack","createBottomTabNavigator","Home","tabScreenOptions","useNavScreenOptions","LandingStack","Landing","modalScreenOptions","MainStack","Main","App"],"mappings":"+PAEaA,EAAiB,CAC5BC,aAAcC,YAAQ,GACtBA,QAASA,YAAQ,GACjBC,MAAO,CACLC,MAAO,GACPC,OAAQ,K,eCCNC,EAAQ,SAACC,GACb,IAAMC,EAAOC,KAAKC,MAClB,MAAO,CACLC,GAAIC,cACJC,MAAO,GACPC,OAAQP,EACRQ,YAAa,GACbC,QAAQ,EACRC,UAAWT,EACXU,UAAWV,EACXW,KAAM,GACNC,UAAU,EACVC,SAAU,GACVC,KAAM,SAIJC,EAAU,SAAChB,GAOf,MANsB,CAAC,2BAChBD,EAAMC,IADS,IACLM,MAAO,UAAWS,KAAM,SADnB,2BAEfhB,EAAMC,IAFS,IAELM,MAAO,OAAQS,KAAM,SAFhB,2BAGfhB,EAAMC,IAHS,IAGLM,MAAO,cAAeS,KAAM,SAHvB,2BAIfhB,EAAMC,IAJS,IAILM,MAAO,OAAQS,KAAM,WAK3BE,EAAyB,WAEpC,IAAMhB,EAAOC,KAAKC,MACZH,EAAIK,cAGJa,EAAqB,CAAC,2BACrBnB,EAAMC,IADc,IACVM,MAAO,cADG,2BAEpBP,EAAMC,IAFc,IAEVM,MAAO,8BAFG,2BAGpBP,EAAMC,IAHc,IAGVM,MAAO,gBAHG,2BAIpBP,EAAMC,IAJc,IAIVM,MAAO,eAJG,2BAKpBP,EAAMC,IALc,IAKVM,MAAO,+BALG,2BAMpBP,EAAMC,IANc,IAMVM,MAAO,oCANG,2BAOpBP,EAAMC,IAPc,IAOVM,MAAO,gBAPG,2BAQpBP,EAAMC,IARc,IAQVM,MAAO,kCARG,2BASpBP,EAAMC,IATc,IASVM,MAAO,qBATG,2BAUpBP,EAAMC,IAVc,IAUVM,MAAO,kBAIlBa,EAAwB,CAAC,2BACxBpB,EAAMC,IADiB,IACbM,MAAO,eADM,2BAEvBP,EAAMC,IAFiB,IAEbM,MAAO,eAFM,2BAGvBP,EAAMC,IAHiB,IAGbM,MAAO,aAHM,2BAIvBP,EAAMC,IAJiB,IAIbM,MAAO,gBAJM,2BAKvBP,EAAMC,IALiB,IAKbM,MAAO,eALM,2BAMvBP,EAAMC,IANiB,IAMbM,MAAO,cAElBc,EAAoBJ,EAAQhB,GAClCoB,EAAU,GAAGN,SAAWK,EAAcE,KAAI,SAACC,GAAD,OAAOA,EAAElB,MACnD,IAAMmB,EAAoBP,EAAQhB,GAC5BwB,EAAoBR,EAAQhB,GAC5ByB,EAAmBT,EAAQhB,GAC3B0B,EAAmBV,EAAQhB,GAC3B2B,EAAoB,CAAC,2BACpB5B,EAAMC,IADa,IACTM,MAAO,gBADE,2BAEnBP,EAAMC,IAFa,IAETM,MAAO,iBAElBsB,EAAoB,CAAC,2BACpB7B,EAAMC,IADa,IACTM,MAAO,kBADE,2BAEnBP,EAAMC,IAFa,IAETM,MAAO,cAFE,2BAGnBP,EAAMC,IAHa,IAGTM,MAAO,mBAElBuB,EAAoB,CAAC,2BACpB9B,EAAMC,IADa,IACTM,MAAO,eADE,2BAEnBP,EAAMC,IAFa,IAETM,MAAO,WAFE,2BAGnBP,EAAMC,IAHa,IAGTM,MAAO,aAElBwB,EAAqB,CAAC,2BACrB/B,EAAMC,IADc,IACVM,MAAO,mBADG,2BAEpBP,EAAMC,IAFc,IAEVM,MAAO,eAFG,2BAGpBP,EAAMC,IAHc,IAGVM,MAAO,kBAElByB,EAAoB,CAAC,2BACpBhC,EAAMC,IADa,IACTM,MAAO,QADE,2BAEnBP,EAAMC,IAFa,IAETM,MAAO,eAFE,2BAGnBP,EAAMC,IAHa,IAGTM,MAAO,WAElB0B,EAAuB,CAAC,2BAEvBjC,EAAMC,IAFgB,IAGzBe,KAAM,QACNT,MAAO,UACPQ,SAAUM,EAAUC,KAAI,SAACC,GAAD,OAAOA,EAAElB,QALR,2BAQtBL,EAAMC,IARgB,IASzBe,KAAM,QACNT,MAAO,UACPQ,SAAUS,EAAUF,KAAI,SAACC,GAAD,OAAOA,EAAElB,QAXR,2BActBL,EAAMC,IAdgB,IAezBe,KAAM,QACNT,MAAO,UACPQ,SAAUU,EAAUH,KAAI,SAACC,GAAD,OAAOA,EAAElB,QAjBR,2BAoBtBL,EAAMC,IApBgB,IAqBzBe,KAAM,QACNT,MAAO,SACPQ,SAAUW,EAASJ,KAAI,SAACC,GAAD,OAAOA,EAAElB,QAvBP,2BA0BtBL,EAAMC,IA1BgB,IA2BzBe,KAAM,QACNT,MAAO,cACPQ,SAAUY,EAASL,KAAI,SAACC,GAAD,OAAOA,EAAElB,QA7BP,2BAgCtBL,EAAMC,IAhCgB,IAiCzBe,KAAM,OACNT,MAAO,gBACPQ,SAAUa,EAAUN,KAAI,SAACC,GAAD,OAAOA,EAAElB,QAnCR,2BAsCtBL,EAAMC,IAtCgB,IAuCzBe,KAAM,OACNT,MAAO,aACPQ,SAAUc,EAAUP,KAAI,SAACC,GAAD,OAAOA,EAAElB,QAzCR,2BA4CtBL,EAAMC,IA5CgB,IA6CzBe,KAAM,OACNT,MAAO,aACPQ,SAAUe,EAAUR,KAAI,SAACC,GAAD,OAAOA,EAAElB,QA/CR,2BAkDtBL,EAAMC,IAlDgB,IAmDzBe,KAAM,OACNT,MAAO,aACPQ,SAAUgB,EAAWT,KAAI,SAACC,GAAD,OAAOA,EAAElB,QArDT,2BAwDtBL,EAAMC,IAxDgB,IAyDzBe,KAAM,OACNT,MAAO,SACPQ,SAAUiB,EAAUV,KAAI,SAACC,GAAD,OAAOA,EAAElB,SAK/B6B,EAAoB,CAAC,2BAEpBlC,EAAMC,IAFa,IAGtBM,MAAO,QACPS,KAAM,OACND,SAAUI,EAAWG,KAAI,SAACC,GAAD,OAAOA,EAAElB,MAClCS,UAAU,IANY,2BASnBd,EAAMC,IATa,IAUtBM,MAAO,WACPS,KAAM,OACND,SAAUkB,EAAaX,KAAI,SAACC,GAAD,OAAOA,EAAElB,MACpCS,UAAU,KAad,MAAO,CACLqB,KAXiB,CACjB9B,GAAIJ,EACJS,QAAQ,EACR0B,MAAO,gBACPzB,UAAWT,EACXU,UAAWV,EACXmC,KAAM,YACNC,MAAOJ,EAAUZ,KAAI,SAACC,GAAD,OAAOA,EAAElB,OAK9BiC,MAAM,GAAD,OACAnB,EACAC,EAFA,YAGAC,GAHA,YAIAG,GAJA,YAKAC,GALA,YAMAC,GANA,YAOAC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,KCvLIK,EAAUC,gBAAK,YAKV,IAJhB1C,EAIe,EAJfA,MACA2C,EAGe,EAHfA,aACAC,EAEe,EAFfA,YACAnC,EACe,EADfA,MAEMoC,EAAQC,cACRC,EAAeC,iBAAiC,MACtD,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cACX3C,EAAS4C,aAAgB,SAACC,GAAD,uBAAOA,EAAEC,oBAAT,aAAO,EAAgBjD,MACtD,IAAKG,EAAQ,MAAM,IAAI+C,MAAM,8BAC7B,IAAKd,EAAc,MAAM,IAAIc,MAAM,oCAEnC,IAAMC,EAAWC,uBACf,SAACC,GACC,GAAKA,EAAL,CAIA,IAAMC,EAASrD,cACTJ,EAAOC,KAAKC,MACZwD,EAAa,CACjBvD,GAAIsD,EACJnD,SACAE,QAAQ,EACRH,MAAOmD,EACP/C,UAAWT,EACXU,UAAWV,EACXa,SAAU,GACVF,KAAM,GACNJ,YAAa,GACbK,UAAU,EACVE,KAAM,QAERkC,EAASW,YAAWD,IACpBV,EAASY,YAAc,CAAErB,eAAckB,iBAnBrCI,IAASC,YAqBb,CAACd,EAAUT,EAAcjC,IAGrByD,EAAiBR,uBAAY,kBAAMR,GAAa,SAACiB,GAAD,OAAQA,OAAI,IAC5DC,EAAUV,uBAAY,kBAAMR,GAAa,KAAQ,IACjDmB,EAASX,uBAAY,kBAAMR,GAAa,KAAQ,IAEhDoB,EAAyB,CAC7B,CAAEhC,KAAM,QAASiC,QAASH,EAASI,OAAO,EAAMC,OAAO,GACvD,CACEnC,KAAM,OACNiC,QAASd,EACTb,MAAO,SACP4B,OAAO,EACPE,UAAU,EACVC,OAAO,IAQX,OAJAC,qBAAU,WAAO,IAAD,EACV3B,IAAW,UAAAH,EAAa+B,eAAb,SAAsBL,WACpC,CAACvB,IAGF,kBAAC6B,EAAA,EAAD,CACEC,MAAO,CACLhF,QACAC,OAAQH,YAAQ,IAChBD,aAAcD,EAAeC,aAC7BoF,gBAAiBpC,EAAMqC,WAAWC,SAClCC,eAAgB,WAGjBlC,EACC,kBAAC,IAAD,CACEmC,cAAc,EACdd,MAAOA,EACPD,OAAQA,EACRgB,MAAOvC,EACPwC,gBAAiB7B,EACjBd,YAAaA,EACb4C,cAAc,OACdC,aAAW,IAGb,kBAAC,IAAD,CAAQC,QAAM,EAAC7C,MAAM,SAAS2B,QAASL,EAAgB1D,MAAOA,QCpFzDkF,EAAOjD,gBAAK,YAMV,IALbzB,EAKY,EALZA,SACA2E,EAIY,EAJZA,SAIY,IAHZC,cAGY,MAHH,OAGG,EAFZ7F,EAEY,EAFZA,MACA8F,EACY,EADZA,KAEMjD,EAAQC,cACd,OACE,kBAACiC,EAAA,EAAD,CACEa,SAAUA,EACVZ,MAAO,CACLc,KAAMA,EAAO,EAAI,EACjB9F,QACAH,aAAcD,EAAeC,aAC7BoF,gBAAiBpC,EAAMqC,WAAWC,SAClCrF,QAASF,EAAeE,QAAU,EAClCiG,YAAwB,UAAXF,EAAqBjG,EAAeE,QAAU,EAC3DkG,aAAyB,WAAXH,EAAsBjG,EAAeE,QAAU,IAG9DmB,MCtBMgF,EAAavD,gBAAK,YAGV,IAFnBmB,EAEkB,EAFlBA,OACAlB,EACkB,EADlBA,aAEMS,EAAWC,cACT6C,EAAaC,cAAbD,SACFpC,EAAOR,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAMqB,MAEnDwC,EAAS1C,uBACb,SAAClD,GACC2C,EAASkD,YAAW,2BAAKxC,GAAN,IAAYrD,YAC/BwD,IAASC,YAEX,CAACd,EAAUU,IAGPyC,EAAW5C,uBAAY,WAC3BP,EAASoD,YAAe,CAAE7D,eAAckB,YACxCqC,EAAS,iBACR,CAAC9C,EAAUS,EAAQqC,EAAUvD,IAI1B4B,EAAyB,CAC7B,CAAEhC,KAAM,QAASiC,QAHHb,uBAAY,kBAAMM,IAASC,YAAW,IAGjBO,OAAO,EAAMC,OAAO,GACvD,CACEnC,KAAM,OACNiC,QAAS6B,EACTxD,MAAO,SACP4B,OAAO,EACPE,UAAU,GAEZ,CAAEpC,KAAM,kBAAmBiC,QAAS+B,IAGtC,OACE,kBAACxB,EAAA,EAAD,CACEC,MAAO,CACLyB,cAAe,MACfC,WAAY,SACZtB,eAAgB,kBAGlB,kBAAC,IAAD,CACEpE,SAAU8C,EAAK9C,SACfuD,MAAOA,EACPgB,gBAAiBc,EACjBzD,YAAY,gBACZ4C,cAAc,OACdtE,KAAK,KACL0C,MAAOE,EAAKrD,Y,SC1CPkG,EAAWjE,gBAAK,YAIV,IAHjBkE,EAGgB,EAHhBA,MACA/C,EAEgB,EAFhBA,OACAlB,EACgB,EADhBA,aAEMmB,EAAOR,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAMqB,MACnDgD,EAAsBvD,aAC1B,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAMG,GAAc1B,SAAS6F,UAE/C/D,EAAeC,iBAAiC,MAChDI,EAAWC,cACT6C,EAAaC,cAAbD,SACFrD,EAAQC,cAERiE,EAAmBpD,uBAAY,WACnCM,IAASC,YACR,IAEG8C,EAAoBrD,uBACxB,SAAClD,GACC2C,EAASkD,YAAW,2BAAKxC,GAAN,IAAYrD,YAC/BwD,IAASC,YAEX,CAACd,EAAUU,IAGPmD,EAAYtD,uBAAY,WAC5BP,EAAS8D,YAAe,CAAEC,cAAetD,KACzCqC,EAAS,aACR,CAAC9C,EAAUS,EAAQqC,IAEhBkB,EAAgBzD,uBAAY,WAChCP,EAASoD,YAAe,CAAE7D,eAAckB,YACxCqC,EAAS,iBACR,CAAC9C,EAAUS,EAAQqC,EAAUvD,IAE1B0E,EAAkB1D,uBAAY,cAAiB,IAE/C2D,EAAc3D,uBAAY,WAAO,IAAD,EACpC,UAAAZ,EAAa+B,eAAb,SAAsBL,UACrB,IAYGF,EAAyB,CAC7B,CAAEhC,KAAM,QAASiC,QAASuC,EAAkBtC,OAAO,EAAMC,OAAO,GAChE,CACEnC,KAAM,OACNiC,QAASwC,EACTnE,MAAO,SACP4B,OAAO,EACPE,UAAU,GAEZ,CAAEpC,KAAM,aAAciC,QAnBPb,uBAAY,WACb,IAAViD,GACJxD,EAASmE,YAAoB,CAAE5E,eAAclB,EAAGmF,EAAOY,EAAGZ,EAAQ,OACjE,CAACxD,EAAUwD,EAAOjE,IAgBsB8E,QAAQ,GACjD,CAAElF,KAAM,eAAgBiC,QAfPb,uBAAY,WACzBiD,GAASC,EAAsB,GACnCzD,EAASmE,YAAoB,CAAE5E,eAAclB,EAAGmF,EAAOY,EAAGZ,EAAQ,OACjE,CAACxD,EAAUwD,EAAOC,EAAqBlE,IAYK8E,QAAQ,GACrD,CAAElF,KAAM,kBAAmBiC,QAAS4C,GACpC,CACE7E,KAAM,gBACNiC,QAASyC,EACTQ,QAAS3D,EAAK7C,SAAS6F,SAI3B,OACE,kBAAC,IAAD,CACEY,IAAK5D,EAAKvD,GACVoH,YAAaN,EACb7C,QAAS8C,EACTtC,MAAO,CACLc,KAAM,EACNjG,aAAcD,EAAeC,aAC7BgG,OAAQjG,EAAeE,QAAU,EACjCmF,gBAAiBpC,EAAMqC,WAAW0C,UAClCnB,cAAe,QAGjB,kBAAC,IAAD,CACExB,gBAAgB,YAChBV,MAAOA,EACPe,MAAOvC,EACPwC,gBAAiByB,EACjBpE,YAAY,eACZiF,cAAc,OACdrC,cAAc,OACd5B,MAAOE,EAAKrD,YCzGPqH,EAAYpF,gBAAK,YAEV,IADlBC,EACiB,EADjBA,aAEMoF,EAAOzE,aACX,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAMG,GAAc1B,YAEtC+G,EAAWhF,iBAAwB,MACnCiF,EAAcjF,iBAAO+E,EAAKjB,QAE1BoB,EAAiBvE,uBAAY,SAACG,GAAD,OAAUA,IAAM,IAE7CqE,EAAmBxE,uBAAY,WACK,IAAD,EAAnCoE,EAAKjB,OAASmB,EAAYnD,UAC5B,UAAAkD,EAASlD,eAAT,SAAkBsD,cAClBH,EAAYnD,QAAUiD,EAAKjB,UAE5B,CAACiB,EAAKjB,SAEHuB,EAAuC1E,uBAC3C,gBAAGG,EAAH,EAAGA,KAAM8C,EAAT,EAASA,MAAT,OACE,kBAAC,EAAD,CACEA,MAAOA,EACP/C,OAAQC,EACR4D,IAAK5D,EACLnB,aAAcA,MAGlB,CAACA,IAGH,OACE,kBAAC2F,EAAA,EAAD,CACEC,KAAMR,EACNS,aAAcN,EACdO,0BAA0B,UAC1BC,oBAAqBP,EACrBQ,IAAKX,EACLY,WAAYP,EACZQ,8BAA8B,OC9BvBC,EAAOpG,gBAAK,YAOV,IANbmB,EAMY,EANZA,OACAlB,EAKY,EALZA,aAKY,IAJZoG,mBAIY,MAJE,WAIF,EAHZC,EAGY,EAHZA,UACAC,EAEY,EAFZA,UACAC,EACY,EADZA,OAEMC,EAA6B,eAAhBJ,EACbjJ,EAAUqJ,EAAa,EAAIvJ,EAAeE,QAC1C+F,EAASsD,EAAa,QAAU,SACtC,OACE,kBAACpE,EAAA,EAAD,CAAMC,MAAO,CAAElF,UAASmJ,cACtB,kBAAC,EAAD,CAAMpD,OAAQA,EAAQ7F,MAAOgJ,GAC3B,kBAAC,EAAD,CAAYnF,OAAQA,EAAQlB,aAAcA,IAC1C,kBAAC,EAAD,CAAWA,aAAckB,IACzB,kBAAC,EAAD,CACElB,aAAckB,EACdjB,YAAY,gBACZnC,MAAM,cAGTyI,GAAkB,SCzBZE,EAAQ1G,gBAAK,YAIV,IAHdyE,EAGa,EAHbA,cACAkC,EAEa,EAFbA,cACAL,EACa,EADbA,UAEMM,EAAWN,EAAYpJ,EAAeE,QACtCyJ,EAAQjG,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAM2E,MACpDqC,EAAY7F,uBAAY,SAACG,GAAD,OAAUA,IAAM,IACxC2F,EAAgB9F,uBACpB,SAAC+F,EAAG9C,GAAJ,MAAe,CAAEE,OAAQwC,EAAUK,OAAQL,EAAW1C,EAAOA,WAC7D,CAAC0C,IAGGM,EAAgBjG,uBAAY,WAChC,OACE,kBAAC,EAAD,CACEhB,aAAc4G,EAAMhJ,GACpBqC,YAAY,gBACZnC,MAAM,WACNT,MAAOgJ,MAGV,CAACO,EAAMhJ,GAAIyI,IAERa,EAAalG,uBACjB,YAAe,IAAZG,EAAW,EAAXA,KACD,OACE,kBAAC,EAAD,CACED,OAAQC,EACR4D,IAAK5D,EACLkF,UAAWA,EACXC,UAAWI,EACXN,YAAY,aACZpG,aAAc4G,EAAMhJ,OAI1B,CAACgJ,EAAMhJ,GAAI8I,EAAeL,IAG5B,OACE,kBAACjE,EAAA,EAAD,KACkB,SAAfwE,EAAMrI,KACL,kBAAC,EAAD,CACE2C,OAAQ0F,EAAMhJ,GACd0I,UAAWI,EACX1G,aAAc4G,EAAMhJ,KAGtB,kBAAC,IAAD,CACEuJ,oBAAqBF,EACrBG,sBAAuB,CAAEjK,QAASF,EAAeE,SACjDyI,KAAMgB,EAAMtI,SACZ+I,iBAAiB,OACjBP,cAAeA,EACfN,YAAU,EACVX,aAAcgB,EACdf,0BAA0B,UAC1BG,WAAYiB,EACZI,gCAAgC,EAChCC,gBAAgB,SAChBC,eAAgBb,EAChBtE,MAAO,CAAE/E,OAAQ,cClEdmK,EAAc1H,gBAAK,YAGV,IAFpB2H,EAEmB,EAFnBA,SACAC,EACmB,EADnBA,SAEA,OACE,kBAAC,IAAD,CAAOC,kBAAmBF,EAAUG,aAAW,EAACC,aAAc,IAC5D,kBAAC1F,EAAA,EAAD,CAAMC,MAAO,CAAE0B,WAAY,WACzB,kBAAC,IAAD,CACE1B,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,gBACNS,KAAK,OAEP,kBAAC6D,EAAA,EAAD,CAAMC,MAAO,CAAEyB,cAAe,MAAOrB,eAAgB,WACnD,kBAAC,IAAD,CAAQZ,QAAS6F,EAAU5J,MAAM,UACjC,kBAAC,IAAD,CAAQoC,MAAM,WAAW2B,QAAS8F,EAAU7J,MAAM,iBChB/CkK,EAAmBjI,gBAAK,YAEV,IADzBjC,EACwB,EADxBA,MAEA,OACE,kBAAC,IAAD,CACEmK,SAAS,SACT5F,MAAO,CAAElF,QAASA,YAAQ,IAC1BW,MAAOA,EACPS,KAAK,gBCFE2J,EAAcnI,gBAAK,YAKV,IAJpBxB,EAImB,EAJnBA,KACAR,EAGmB,EAHnBA,OACAG,EAEmB,EAFnBA,UACAC,EACmB,EADnBA,UAEA,OACE,kBAACiE,EAAA,EAAD,KACE,kBAAC,EAAD,CAAMc,OAAO,UACX,kBAAC,EAAD,CAAkBpF,MAAM,SACxB,kBAAC,IAAD,CAAMuE,MAAO,CAAElF,QAASA,YAAQ,IAAMW,MAAOS,IAC7C,kBAAC,EAAD,CAAkBT,MAAM,YACxB,kBAAC,IAAD,CAAMuE,MAAO,CAAElF,QAASA,YAAQ,IAAMW,MAAOC,IAC7C,kBAAC,EAAD,CAAkBD,MAAM,YACxB,kBAAC,IAAD,CAAcL,KAAMS,EAAWmE,MAAO,CAAElF,QAASA,YAAQ,MACzD,kBAAC,EAAD,CAAkBW,MAAM,YACxB,kBAAC,IAAD,CAAcL,KAAMU,EAAWkE,MAAO,CAAElF,QAASA,YAAQ,WCbpDgL,EAAWpI,gBAAK,YAMV,IALjBjC,EAKgB,EALhBA,MACAsK,EAIgB,EAJhBA,cAIgB,IAHhBpK,mBAGgB,MAHF,GAGE,EAFhBiC,EAEgB,EAFhBA,YACAc,EACgB,EADhBA,SAEMW,EAAUV,uBAAY,kBAAMM,IAASC,YAAW,IAEhDK,EAAQZ,uBACZ,SAACzC,GAAD,MAAmC,CACjC,CAAEqB,KAAM,QAASiC,QAASH,EAASI,OAAO,EAAMC,OAAO,GACvD,CACEnC,KAAM,OACNiC,QAASd,EAASxC,GAClB2B,MAAO,SACP4B,OAAO,EACPE,UAAU,MAGd,CAACN,EAASX,IAGZ,OACE,kBAACqB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAMc,OAAO,UACX,kBAAC,EAAD,CAAkBpF,MAAM,UACxB,kBAAC,IAAD,CACEO,SAAU+J,EACVxG,MAAOA,EAAM,SACbgB,gBAAiB7B,EAAS,SAC1Bd,YAAW,UAAKA,EAAL,aACX4C,cAAc,OACd5B,MAAOnD,IAET,kBAAC,EAAD,CAAkBA,MAAM,YACxB,kBAAC,IAAD,CACE8D,MAAOA,EAAM,eACbyG,WAAS,EACTpI,YAAW,UAAKA,EAAL,eACXgB,MAAOjD,GAAe,UC7CnBsK,EAAcvI,gBAAK,YAKrB,IAJTjC,EAIQ,EAJRA,MACAyK,EAGQ,EAHRA,YAGQ,IAFRC,YAEQ,MAFDrL,YAAQ,GAEP,EADRsL,EACQ,EADRA,aAEA,OACE,kBAACrG,EAAA,EAAD,CACEC,MAAO,CACLyB,cAAe,MACfC,WAAY,SACZV,aAAclG,YAAQ,KAGxB,kBAAC,IAAD,CAAkB0E,QAAS0G,GACzB,kBAAC,IAAD,CAAMG,WAAYH,EAAa3I,KAAK,eAAe4I,KAAMA,KAE3D,kBAAC,IAAD,CAAMzF,QAAM,EAACI,MAAI,EAACrF,MAAOA,EAAOS,KAAK,OACrC,kBAAC,IAAD,CAAkBsD,QAAS4G,GACzB,kBAAC,IAAD,CAAMC,WAAYD,EAAc7I,KAAK,QAAQ4I,KAAMA,SCX9CG,EAAU5I,gBAAK,WAC1B6I,cACA,IAAM1I,EAAQC,cACRM,EAAWC,cACT6C,EAAaC,cAAbD,SACR,EAA+BsF,cAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SACZC,EAAUrI,aAAgB,SAACC,GAAD,OAAOA,EAAEqI,gBACnCC,EAAelI,uBAAY,kBAAMuC,EAAS,WAAU,CAACA,IAM3D,OAJArB,qBAAU,WACc,WAAlB6G,EAASxK,MAAmBkC,EAAS0I,iBACxC,CAAC1I,EAAUsI,EAASxK,OAGrB,kBAAC,IAAD,CAAQT,MAAM,WACZ,kBAAC,IAAD,CACEsJ,sBAAuB,CACrBjK,QAASA,YAAQ,GACjBmF,gBAAiBpC,EAAMqC,WAAW0C,WAEpC5C,MAAO,CAAEC,gBAAiBpC,EAAMqC,WAAW0C,YAE3C,kBAAC,EAAD,CAAM/B,OAAO,UACX,kBAAC,IAAD,CACE+E,SAAS,MACT5F,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,UACNS,KAAK,OAEP,kBAAC,IAAD,CAAMT,OAAc,OAAPkL,QAAO,IAAPA,OAAA,EAAAA,EAASI,cAAe,KACrC,kBAAC,IAAD,CAAMtL,OAAc,OAAPkL,QAAO,IAAPA,OAAA,EAAAA,EAASrJ,QAAS,KAC/B,kBAAC,IAAD,CAAM7B,MAAOuL,OAAM,OAACL,QAAD,IAACA,OAAD,EAACA,EAASM,gBAAkB,KAC/C,kBAAC,IAAD,CAAMxL,OAAc,OAAPkL,QAAO,IAAPA,OAAA,EAAAA,EAASO,MAAO,KAC7B,kBAAC,IAAD,CAAMxG,QAAM,EAACkF,SAAS,SAASnK,MAAM,MAAMS,KAAK,QAElD,kBAAC,EAAD,CAAM2E,OAAO,UACX,kBAAC,IAAD,CACE+E,SAAS,MACT5F,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,YACNS,KAAK,OAEP,kBAAC,IAAD,CAAMwE,QAAM,EAACkF,SAAS,SAASnK,MAAM,MAAMS,KAAK,QAElD,kBAAC,EAAD,CAAM2E,OAAO,UACX,kBAAC,IAAD,CACE+E,SAAS,MACT5F,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,UACNS,KAAK,OAEP,kBAAC,IAAD,CAAMwE,QAAM,EAACkF,SAAS,SAASnK,MAAM,MAAMS,KAAK,QAElD,kBAAC,EAAD,CAAM2E,OAAO,UACX,kBAAC,IAAD,CACE+E,SAAS,MACT5F,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,WACNS,KAAK,OAEP,kBAAC,IAAD,CAAMwE,QAAM,EAACkF,SAAS,SAASnK,MAAM,MAAMS,KAAK,QAElD,kBAAC,IAAD,CAAQsD,QAASiH,EAAUhL,MAAM,WAChCiL,EAASS,OAAS,kBAAC,IAAD,CAAMtJ,MAAM,WAAWpC,MAAOiL,EAASS,QAC1D,kBAAC,IAAD,CAAQ3H,QAASqH,EAAcpL,MAAM,qBCvEvC2L,EAAe,CAAEC,UAAW,EAAGC,OAAQ,GAChCC,EAAU7J,gBAAK,WAC1B6I,cACA,IAAM1I,EAAQC,cACR0J,EAAgBxJ,iBAAOoJ,GACvBK,EAAiBC,cACvB,EAA8CzJ,mBAAS,GAAvD,mBAAO0J,EAAP,KAAwBC,EAAxB,KACMC,EAAkB/M,YAAQ2M,EAAiB,GAAK,IAChDxD,EAAY0D,EAAkBF,EAAiBI,EAE/ChJ,EAASP,YAAgBwJ,KAC/B,IAAKjJ,EAAQ,MAAM,IAAIJ,MAAM,mBAC7B,IAAMsJ,EAAiBzJ,aACrB,SAACC,GAAD,OAAwD,IAAjDA,EAAE6C,aAAa5D,MAAMqB,GAAQ5C,SAAS6F,UAGzCkG,EAAarJ,uBAAY,cAAiB,IAE1CiC,EAAWjC,uBACf,SAAC+D,GAAD,OAAoC,SAACuF,GACnC,IAAQhN,EAAWgN,EAAMC,YAAYC,OAA7BlN,OACHuM,EAAc1H,QAAQ4C,KAAM8E,EAAc1H,QAAQ4C,GAAOzH,GAC9D,MAA8BuM,EAAc1H,QAApCuH,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACfD,EAAY,GAAKC,EAAS,IAAMK,GAElCC,EADmBP,EAAYC,MAInC,CAACK,IAGGS,EAAgBzJ,uBAAY,cAAiB,IAEnD,OACE,kBAAC,IAAD,CAAQyH,aAAcgC,EAAeC,UAAU,UAAU5M,MAAM,QAC7D,kBAAC,IAAD,CACEwE,gBAAiBpC,EAAMqC,WAAW0C,UAClChC,SAAUA,EAAS,cAEnB,kBAAC,EAAD,CACEsD,OACE,kBAAC,EAAD,CAAMtD,SAAUA,EAAS,WACvB,kBAAC,IAAD,CACEF,QAAM,EACN7C,MAAM,SACNyK,SAAUP,EACVvI,QAASwI,EACTvM,MAAM,cAIZoD,OAAQA,EACRoF,UAAWA,EACXtG,aAAc,Y,QCzDX4K,EAAa7K,gBAAK,WAC7B,IAAMU,EAAWC,cACTmK,EAAWrH,cAAXqH,OACF3K,EAAQC,cAEd,EAAiCQ,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAaqH,OAA/D5J,EAAR,EAAQA,OAAQlB,EAAhB,EAAgBA,aACVmB,EAAOR,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAMqB,GAAU,OACnE,EAAsCZ,oBAAS,GAA/C,mBAAOyK,EAAP,KAAoBC,EAApB,KAEMC,EAAejK,uBAAY,WAC/B,IAAKE,IAAWlB,EACd,MAAM,IAAIc,MAAM,kDAClBL,EAASyK,YAAWhK,IACpBT,EAAS0K,YAAmB,CAAEnL,eAAckB,YAC5C8J,GAAe,GACfH,MACC,CAACpK,EAAUoK,EAAQ3J,EAAQlB,IAExBoL,EAAepK,uBACnB,SAACzC,GAAD,OAAkB,SAAC8M,GACjB5K,EAASkD,YAAW,2BAAKxC,GAAN,kBAAa5C,EAAO8M,MACvC/J,IAASC,aAEX,CAACd,EAAUU,IAGPmK,EAAgBtK,uBAAY,kBAAMgK,GAAe,KAAO,IACxDO,EAAgBvK,uBAAY,kBAAMgK,GAAe,KAAQ,IAE/D,OAAO7J,EACL,oCACE,kBAAC,IAAD,CACEmB,gBAAiBpC,EAAMqC,WAAW0C,UAClC2C,kBAAmBiD,GAEnB,kBAACzI,EAAA,EAAD,KACE,kBAAC,EAAD,CACEpE,YAAamD,EAAKnD,YAClB+C,SAAUqK,EACVnL,YAAY,OACZnC,MAAOqD,EAAKrD,MACZsK,cAAejH,EAAK9C,WAEtB,kBAAC,EAAD,CAAM6E,OAAO,UACX,kBAAC,IAAD,CAAMpF,MAAM,eAEd,kBAAC,EAAD,CAAMoF,OAAO,UACX,kBAAC,IAAD,CAAMpF,MAAM,UAEd,kBAAC,EAAD,CAAMoF,OAAO,UACX,kBAAC,IAAD,CAAMpF,MAAM,cAEd,kBAAC,EAAD,CACEI,UAAWiD,EAAKjD,UAChBK,KAAM4C,EAAK5C,KACXJ,UAAWgD,EAAKhD,UAChBJ,OAAQoD,EAAKpD,SAEdoD,EAAK9C,SACJ,kBAAC+D,EAAA,EAAD,CACEC,MAAO,CACLyB,cAAe,MACfX,KAAM,EACNV,eAAgB,kBAGlB,kBAAC,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CAAQJ,QAAM,EAAClB,QAASgJ,EAAQ/M,MAAM,WAExC,kBAACsE,EAAA,EAAD,CAAMC,MAAO,CAAElF,QAASA,YAAQ,MAChC,kBAAC,EAAD,CAAMgG,MAAI,GACR,kBAAC,IAAD,CACEJ,QAAM,EACN7C,MAAM,WACN2B,QAASyJ,EACTxN,MAAM,aAKZ,kBAAC,EAAD,CAAMqF,MAAI,GACR,kBAAC,IAAD,CAAQJ,QAAM,EAAClB,QAASgJ,EAAQ/M,MAAM,aAK7CiN,EACC,kBAAC,EAAD,CAAarD,SAAU6D,EAAe5D,SAAUsD,IAC9C,MAEJ,QCvFAO,EAAa,CAAE7L,MAAO,GAAI8L,SAAU,IACpChC,EAAe,CAAEiC,KAAK,EAAOC,cAAc,GAEpCC,EAAQ7L,gBAAK,WACxB,IAAMG,EAAQC,cACRM,EAAWC,cACXoB,EAAQ+J,cACRC,EAAOzL,iBAAOmL,GACpB,EAA0BlL,mBAASmJ,GAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EACExI,cADMqH,EAAR,EAAQA,OAAQtH,EAAhB,EAAgBA,SAGV0I,EAAajL,uBAAY,kBAAMuC,EAAS,aAAY,CAACA,IACrD2I,EAAclL,uBAAY,kBAAMuC,EAAS,oBAAmB,CAACA,IAC7D4I,EAAW9L,iBAAiC,MAC5C+L,EAAc/L,iBAAiC,MAC/CgM,EAAUN,EAAML,IAAM,cAAgB,kBAEtCY,EAAQtL,uBAAY,WAAO,IAAD,EAC9BgL,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBiK,KAAMjK,EAAEiK,SACjC,UAAAU,EAAYjK,eAAZ,SAAqBL,UACpB,IAEGf,EAAWC,uBAAY,WAC3B,GAAK+K,EAAMJ,aAAX,CACA,MAAwBlN,IAAhBiB,EAAR,EAAQA,KAAR,EAAcG,MACRhB,KAAI,SAACsC,GAAD,OAAUV,EAASW,YAAWD,OACxCV,EAAS8L,YAAS,2BAAK7M,GAAN,IAAYC,MAAOmM,EAAK3J,QAAQxC,aAChD,CAACc,EAAUsL,EAAMJ,eAEda,EAAexL,uBACnB,SAAC+D,GAAD,OAAkC,SAAC0H,GACjCX,EAAK3J,QAAL,2BAAoB2J,EAAK3J,SAAzB,kBAAmC4C,EAAM0H,IACzC,MAA4BX,EAAK3J,QAAzBxC,EAAR,EAAQA,MAAO8L,EAAf,EAAeA,SACTE,EAAehM,EAAMwE,OAAS,GAAKsH,EAAStH,OAAS,EAC3D6H,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBkK,uBAE3B,IAGI/I,EAAkB5B,uBACtB,SAAC+D,GAAD,OAAkC,WAAO,IAAD,EAC1B,UAARA,IAAiB,UAAAqH,EAAYjK,eAAZ,SAAqBL,SAC9B,aAARiD,GAAoBhE,OAE1B,CAACA,IAYH,OATAmB,qBAAU,WACI,IAAD,EAAPJ,EACF,UAAAqK,EAAShK,eAAT,SAAkBL,SAElBgK,EAAK3J,QAAUqJ,EACfQ,EAASvC,MAEV,CAAC3H,IAEGA,EACL,kBAAC,IAAD,CACEQ,gBAAiBpC,EAAMqC,WAAW0C,UAClC2C,kBAAmBqE,GAEnB,kBAAC,EAAD,CAAaxD,aAAcoC,EAAQ/M,MAAM,WACzC,kBAAC,IAAD,CACE4O,aAAa,EACbhK,cAAc,EACdiK,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACEyL,aAAa,EACbhK,cAAc,EACdd,MAAO,CAAC,CAAEhC,KAAMyM,EAASxK,QAASyK,EAAOxK,OAAO,IAChD8K,aAAcJ,EAAa,YAC3B7J,MAAOyJ,EACPxJ,gBAAiBA,EAAgB,YACjC3C,YAAY,WACZ4C,cAAc,OACdiK,iBAAkBf,EAAML,IACxBrJ,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACE8L,YAAa,CAAE1J,aAAclG,YAAQ,IACrC4F,QAAM,EACN7C,MAAM,SACN8M,WAAS,EACTnL,QAASqK,EACTpO,MAAM,qBAER,kBAAC,IAAD,CACEiF,QAAM,EACN7C,MAAM,SACNyK,UAAWoB,EAAMJ,aACjB1D,SAAS,OACTpG,QAASd,EACTjD,MAAM,YAGR,QC9GA0N,EAAa,CAAE7L,MAAO,IACtB8J,EAAe,CAAEwD,UAAU,GACpBC,EAAgBnN,gBAAK,WAChC,IAAMG,EAAQC,cACR2L,EAAOzL,iBAAOmL,GACpB,EAA0BlL,mBAASmJ,GAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EACExI,cADMqH,EAAR,EAAQA,OAAQtH,EAAhB,EAAgBA,SAEVzB,EAAQ+J,cACRM,EAAW9L,iBAAiC,MAE5CU,EAAWC,uBAAY,WACtB+K,EAAMkB,UACXpC,MACC,CAACA,EAAQkB,EAAMkB,WACZhB,EAAajL,uBAAY,kBAAMuC,EAAS,aAAY,CAACA,IACrDiJ,EAAexL,uBACnB,SAAC+D,GAAD,OAAkC,SAAC0H,GACjCX,EAAK3J,QAAL,2BAAoB2J,EAAK3J,SAAzB,kBAAmC4C,EAAM0H,IACzC,IAAMQ,EAAWR,EAAItI,OAAS,EAC9B6H,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBwL,mBAE3B,IAYF,OATA/K,qBAAU,WACI,IAAD,EAAPJ,EACF,UAAAqK,EAAShK,eAAT,SAAkBL,SAElBgK,EAAK3J,QAAUqJ,EACfQ,EAASvC,MAEV,CAAC3H,IAEGA,EACL,kBAAC,IAAD,CACEQ,gBAAiBpC,EAAMqC,WAAW0C,UAClC2C,kBAAmBqE,GAEnB,kBAAC,EAAD,CAAaxD,aAAcoC,EAAQ/M,MAAM,mBACzC,kBAAC,IAAD,CACEiF,QAAM,EACNV,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,iEAER,kBAAC,IAAD,CACEiF,QAAM,EACNV,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,4FAER,kBAAC,IAAD,CACE4O,aAAa,EACbhK,cAAc,EACdiK,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiB7B,EACjBd,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACE8B,QAAM,EACN7C,MAAM,SACNyK,UAAWoB,EAAMkB,SACjBhF,SAAS,OACTpG,QAASd,EACTjD,MAAM,oBAGR,QCvEOqP,EAAUpN,gBAAK,WAC1B,IAAQ8K,EAAWrH,cAAXqH,OACF3K,EAAQC,cACRiN,EAAczM,YAAgB0M,KAC5B7I,EAAkB7D,aAAgB,SAACC,GAAD,OAAOA,EAAE6C,aAAaqH,OAAxDtG,cACR,IAAKA,EAAe,MAAM,IAAI1D,MAAM,yCACpC,IAAMwM,EAAkB3M,aACtB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAM2E,GAAejG,QAEvCgP,EAAmB5M,aACvB,SAACC,GAAD,OAAOA,EAAE6C,aAAa5D,MAAM2E,GAAe1G,SAE7C,IAAKwP,EACH,MAAM,IAAIxM,MAAM,2CAClB,IAAMuF,EAA0B,GAAd+G,EAClB,EAAkC9M,mBAAS,GAA3C,mBAAOoJ,EAAP,KAAkB8D,EAAlB,KACM1D,EAAiBC,cACjB0D,EAActQ,YAA4B,SAApBmQ,EAA6B,GAAK,GACxDpD,EAAkB/M,YAAQ2M,EAAiB,GAAK,IAChDpD,EACJgD,EAAYI,EAAiBI,EAAkBuD,EAE3CxK,EAAWjC,uBACf,SAACsJ,GACKZ,EAAY,GAChB8D,EAAalD,EAAMC,YAAYC,OAAOlN,UAExC,CAACoM,IAGGgE,EAAU1M,uBAAY,WAC1B6J,MACC,CAACA,IAEEJ,EAAgBzJ,uBAAY,cAAiB,IAEnD,OACE,kBAAC,IAAD,CACEuH,YAAamF,EACbjF,aAAcgC,EACdC,UAAU,UACV5M,MAAOyP,GAEP,kBAAC,IAAD,CACEjL,gBAAiBpC,EAAMqC,WAAW0C,UAClChC,SAAUA,GAEV,kBAAC,EAAD,CACEyD,cAAeA,EACfL,UAAWA,EACX7B,cAAeA,SC7CZmJ,EAAW5N,gBAAK,WAC3B,IAAMG,EAAQC,cACd,EAAoCG,mBAAS,GAA7C,mBAAOsN,EAAP,KAAmBC,EAAnB,KACM/D,EAAiBC,cACjB7I,EAASP,YAAgBmN,KAC/B,IAAK5M,EAAQ,MAAM,IAAIJ,MAAM,mBAC7B,IAAMoJ,EAAkB/M,YAAQ2M,EAAiB,GAAK,IAChDxD,EAAYsH,EAAa9D,EAAiBI,EAE1CjH,EAAWjC,uBACf,SAACsJ,GACKsD,EAAa,GACjBC,EAAcvD,EAAMC,YAAYC,OAAOlN,UAEzC,CAACsQ,IAGGnD,EAAgBzJ,uBAAY,cAAiB,IAEnD,OACE,kBAAC,IAAD,CAAQyH,aAAcgC,EAAeC,UAAU,UAAU5M,MAAM,aAC7D,kBAAC,IAAD,CACEwE,gBAAiBpC,EAAMqC,WAAW0C,UAClChC,SAAUA,GAEV,kBAAC,EAAD,CACE/B,OAAQA,EACR6D,IAAK7D,EACLoF,UAAWA,EACXtG,aAAc,Y,yECzBlB+N,GAAY,SAACC,GAAD,MAAsB,CACtCC,KAAKC,IAAL,MAAAD,KAAI,YAAQD,IACZC,KAAKE,IAAL,MAAAF,KAAI,YAAQD,MAGDI,GAAQ,SAAC,GAIiB,IAHrCxI,EAGoC,EAHpCA,KACAvI,EAEoC,EAFpCA,MACAC,EACoC,EADpCA,OAEM+Q,EAASC,cACZN,OAAOD,GAAUnI,EAAK/G,KAAI,SAAC0P,GAAD,OAAOA,EAAE9Q,UACnC+Q,MAAM,CAAC,EAAGnR,IACPoR,EAASC,cACZV,OAAOD,GAAUnI,EAAK/G,KAAI,SAAC0P,GAAD,OAAOA,EAAEtN,WACnCuN,MAAM,CAAClR,EAhBIqR,MAiBRJ,EAAYK,MAEfC,GAAE,SAACpN,GAAD,OAAO4M,EAAO5M,EAAEhE,SAClBqR,GAAE,SAACrN,GAAD,OAAOgN,EAAOhN,EAAER,UAClB8N,MAAMH,IAJSA,CAIShJ,GAC3B,OACE,gBAACxD,EAAA,EAAD,CAAMC,MAAO,CAAEhF,QAAOC,WACpB,gBAAC,KAAD,CAAK+E,MAAO2M,KAAWC,cACrB,gBAAC,QAAD,KACE,gBAAC,kBAAD,CAAgBrR,GAAG,WAAWsR,GAAG,MAAMC,GAAG,MAAMC,GAAG,KAAKC,GAAG,QACzD,gBAAC,QAAD,CAAMrI,OAAO,KAAKsI,UAAU,YAC5B,gBAAC,QAAD,CAAMtI,OAAO,MAAMsI,UAAU,YAC7B,gBAAC,QAAD,CAAMtI,OAAO,OAAOsI,UAAU,cAGlC,gBAAC,QAAD,CACEf,EAAC,UAAKA,EAAL,aAAWlR,EAAX,YAAoBC,EAApB,gBAAkCA,GACnCiS,KAAK,mBAEP,gBAAC,QAAD,CACEhB,EAAGA,EACHgB,KAAK,cACLC,OAAO,UACPb,YAzCU,OCDdc,GAAQ,SAAC,GAA0B,IAAxB7P,EAAuB,EAAvBA,KACf,OACE,kBAAC,IAAD,CACEqI,SAAS,OACT5F,MAAO,CAAE0F,cAAe9K,EAAeE,SACvCW,MAAO8B,EACPrB,KAAK,QAKLqH,GAAO,CACX,CAAEnI,KAAM,IAAIC,KAAK,KAAM,EAAG,GAAGgS,UAAWzO,MAAO,GAC/C,CAAExD,KAAM,IAAIC,KAAK,KAAM,EAAG,IAAIgS,UAAWzO,MAAO,GAChD,CAAExD,KAAM,IAAIC,KAAK,KAAM,EAAG,IAAIgS,UAAWzO,MAAO,KAChD,CAAExD,KAAM,IAAIC,KAAK,KAAM,GAAI,GAAGgS,UAAWzO,MAAO,KAChD,CAAExD,KAAM,IAAIC,KAAK,KAAM,GAAI,GAAGgS,UAAWzO,MAAO,KAChD,CAAExD,KAAM,IAAIC,KAAK,KAAM,GAAI,GAAGgS,UAAWzO,MAAO,MAGrC0O,GAAU5P,gBAAK,WAC1B6I,cACA,IAAM1I,EAAQC,cAEd,OACE,kBAAC,IAAD,CAAQrC,MAAM,WACZ,kBAAC,IAAD,CACEsJ,sBAAuB,CACrBjK,QAASA,YAAQ,GACjBmF,gBAAiBpC,EAAMqC,WAAW0C,WAEpC5C,MAAO,CAAEC,gBAAiBpC,EAAMqC,WAAW0C,YAE3C,kBAAC,EAAD,CAAM/B,OAAO,UACX,kBAACd,EAAA,EAAD,KACE,kBAAC,GAAD,CAAOxC,KAAK,YACZ,kBAAC,IAAD,CAAM9B,MAAM,oEAGhB,kBAAC,EAAD,CAAMoF,OAAO,UACX,kBAACd,EAAA,EAAD,KACE,kBAAC,GAAD,CAAOxC,KAAK,UACZ,kBAAC,IAAD,CAAM9B,MAAM,UACZ,kBAAC,IAAD,CAAMA,MAAM,eACZ,kBAAC,IAAD,CAAMA,MAAM,UACZ,kBAAC,IAAD,CAAMA,MAAM,iBAGhB,kBAAC,EAAD,CAAMoF,OAAO,UACX,kBAACd,EAAA,EAAD,KACE,kBAAC,GAAD,CAAOxC,KAAK,sBACZ,kBAACwC,EAAA,EAAD,CACEC,MAAO,CACLc,KAAM,EACNV,eAAgB,SAChBsB,WAAY,WAGd,kBAAC,GAAD,CACE6B,KAAMA,GACNtI,OAAQ,IACRD,MACEuS,IAAWC,IAAI,UAAUxS,MAAiC,EAAzBJ,EAAeE,aAM1D,kBAAC,EAAD,KACE,kBAACiF,EAAA,EAAD,KACE,kBAAC,GAAD,CAAOxC,KAAK,sBACZ,kBAAC,IAAD,aC3EN4L,GAAa,CAAE7L,MAAO,GAAI8L,SAAU,IACpChC,GAAe,CAAEiC,KAAK,EAAOC,cAAc,EAAOmE,eAAe,GAE1DC,GAAShQ,gBAAK,WACzB,IAAMG,EAAQC,cACRM,EAAWC,cACXoB,EAAQ+J,cACRC,EAAOzL,iBAAOmL,IACpB,EAA0BlL,mBAASmJ,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EACExI,cADMqH,EAAR,EAAQA,OAAQtH,EAAhB,EAAgBA,SAGV0I,EAAajL,uBAAY,kBAAMuC,EAAS,aAAY,CAACA,IACrD2I,EAAclL,uBAAY,kBAAMuC,EAAS,YAAW,CAACA,IACrD4I,EAAW9L,iBAAiC,MAC5C+L,EAAc/L,iBAAiC,MAC/CgM,EAAUN,EAAML,IAAM,cAAgB,kBAEtCY,EAAQtL,uBAAY,WAAO,IAAD,EAC9BgL,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBiK,KAAMjK,EAAEiK,SACjC,UAAAU,EAAYjK,eAAZ,SAAqBL,UACpB,IAEGf,EAAWC,uBAAY,WAC3B,GAAK+K,EAAMJ,aAAX,CACA,MAAwBlN,IAAhBiB,EAAR,EAAQA,KAAR,EAAcG,MACRhB,KAAI,SAACsC,GAAD,OAAUV,EAASW,YAAWD,OACxCV,EAAS8L,YAAS,2BAAK7M,GAAN,IAAYC,MAAOmM,EAAK3J,QAAQxC,aAChD,CAACc,EAAUsL,EAAMJ,eAEda,EAAexL,uBACnB,SAAC+D,GAAD,OAAkC,SAAC0H,GACjCX,EAAK3J,QAAL,2BAAoB2J,EAAK3J,SAAzB,kBAAmC4C,EAAM0H,IACzC,MAA4BX,EAAK3J,QAAzBxC,EAAR,EAAQA,MAAO8L,EAAf,EAAeA,SACTqE,EAAgBrE,EAAStH,OAAS,IAAc,aAARY,EACxC4G,EAAehM,EAAMwE,OAAS,GAAKsH,EAAStH,QAAU,GAC5D6H,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBkK,eAAcmE,wBAEzC,IAGIlN,EAAkB5B,uBACtB,SAAC+D,GAAD,OAAkC,WAAO,IAAD,EAC1B,UAARA,IAAiB,UAAAqH,EAAYjK,eAAZ,SAAqBL,SAC9B,aAARiD,GAAoBhE,OAE1B,CAACA,IAYH,OATAmB,qBAAU,WACI,IAAD,EAAPJ,EACF,UAAAqK,EAAShK,eAAT,SAAkBL,SAElBgK,EAAK3J,QAAUqJ,GACfQ,EAASvC,OAEV,CAAC3H,IAEGA,EACL,kBAAC,IAAD,CACEQ,gBAAiBpC,EAAMqC,WAAW0C,UAClC2C,kBAAmBqE,GAEnB,kBAAC,EAAD,CAAaxD,aAAcoC,EAAQ/M,MAAM,WACzC,kBAAC,IAAD,CACE4O,aAAa,EACbC,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACEyL,aAAa,EACbhK,cAAc,EACd8G,MAAOuC,EAAM+D,cACblO,MAAO,CAAC,CAAEhC,KAAMyM,EAASxK,QAASyK,EAAOxK,OAAO,IAChD8K,aAAcJ,EAAa,YAC3B7J,MAAOyJ,EACPxJ,gBAAiBA,EAAgB,YACjC3C,YAAY,WACZ4C,cAAc,OACdiK,iBAAkBf,EAAML,IACxBrJ,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACEf,MAAM,WACNwI,WAAYqD,EAAM+D,cAClBhS,MAAM,2BAER,kBAAC,IAAD,CACEiP,YAAa,CAAE1J,aAAclG,YAAQ,IACrC4F,QAAM,EACN7C,MAAM,SACN8M,WAAS,EACTnL,QAASqK,EACTpO,MAAM,6BAER,kBAAC,IAAD,CACEiF,QAAM,EACN7C,MAAM,SACNyK,UAAWoB,EAAMJ,aACjB1D,SAAS,OACTpG,QAASd,EACTjD,MAAM,aAGR,Q,SC3FAkS,GAAejQ,gBAAK,YAKH,IAJrB8B,EAIoB,EAJpBA,QACAoO,EAGoB,EAHpBA,KACAnS,EAEoB,EAFpBA,MACAoF,EACoB,EADpBA,OAEMhD,EAAQC,cACd,OACE,kBAAC,IAAD,CACE0B,QAASA,EACTQ,MAAO,CACL0B,WAAY,SACZtB,eAAgB,SAChBqB,cAAe,MACfoM,YAAahQ,EAAMqC,WAAW0C,UAC9BkL,YAAa,EACbhT,QAASA,YAAQ,GACjBkG,aAAclG,YAAQ+F,EAAS,EAAI,GACnChG,aAAcC,YAAQ,KAGxB,kBAAC,IAAD,CAAMyC,KAAMqQ,IACZ,kBAAC,IAAD,CAAM5N,MAAO,CAAE+N,YAAajT,YAAQ,IAAMW,MAAOA,EAAOS,KAAK,eAsB7DiN,GAAkB,CACtB7L,MAAO,GACP8L,SAAU,GACV4E,MAAO,GACPC,UAAW,IAWP7G,GAAsB,CAC1BiC,KAAK,EACLlC,MAAO,KACPmC,cAAc,EACdmE,eAAe,EACfS,OAAQ,WAGGC,GAAQzQ,gBAAK,YASf,IART6H,EAQQ,EARRA,kBACA6I,EAOQ,EAPRA,aACAC,EAMQ,EANRA,WACAC,EAKQ,EALRA,UACAC,EAIQ,EAJRA,UACAC,EAGQ,EAHRA,UACAC,EAEQ,EAFRA,cACAC,EACQ,EADRA,UAEA,EAUIlI,cATFE,EADF,EACEA,SACAiI,EAFF,EAEEA,QACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,eACAC,EANF,EAMEA,QACAC,EAPF,EAOEA,QACAC,EARF,EAQEA,gBACAC,EATF,EASEA,YAEMhT,EAAsBwK,EAAtBxK,KAAMiL,EAAgBT,EAAhBS,MAAO9J,EAASqJ,EAATrJ,KACf8R,EAAmB,YAATjT,EACVkT,EAAapR,kBAAO,GACpByL,EAAOzL,iBAAYmL,IACzB,EAA0BlL,mBAAgBmJ,IAA1C,mBAAOsC,EAAP,KAAcC,EAAd,KACMG,EAAW9L,iBAAiC,MAC5C+L,EAAc/L,iBAAiC,MAC/CgM,EAAUN,EAAML,IAAM,cAAgB,kBAEtCc,EAAexL,uBACnB,SAAC+D,GAAD,OAAoB,SAAC0H,GACnBX,EAAK3J,QAAL,2BAAoB2J,EAAK3J,SAAzB,kBAAmC4C,EAAM0H,OAE3C,IAGIiF,EAAgB1Q,uBACpB,kBAAMmQ,EAAerF,EAAK3J,QAAQmO,aAClC,CAACa,IAGGQ,EAAc3Q,uBAAY,kBAAMoQ,EAAQtF,EAAK3J,QAAQkO,SAAQ,CAACe,IAC9DQ,EAAc5Q,uBAClB,kBAAMsQ,EAAgBxF,EAAK3J,QAAQxC,SACnC,CAAC2R,IAGGhF,EAAQtL,uBAAY,WAAO,IAAD,EAC9BgL,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgBiK,KAAMjK,EAAEiK,SACjC,UAAAU,EAAYjK,eAAZ,SAAqBL,UACpB,IAEGc,EAAkB5B,uBACtB,SAAC+D,GAAD,OAAkC,WAAO,IAAD,EAC1B,UAARA,IAAiB,UAAAqH,EAAYjK,eAAZ,SAAqBL,SAC9B,aAARiD,GACFsM,EAAQvF,EAAK3J,QAAQxC,MAAOmM,EAAK3J,QAAQsJ,aAE7C,CAAC4F,IAGGQ,EAAiB7Q,uBACrB,SAACuP,GAAD,OAAoB,kBAAMvE,GAAS,SAACvK,GAAD,mBAAC,eAAYA,GAAb,IAAgB8O,iBACnD,IAUF,OAPArO,qBAAU,WACJxC,IAAS+R,EAAWtP,UACtB4O,EAAUrR,GACV+R,EAAWtP,SAAU,KAEtB,CAAC4O,EAAWrR,IAGb,kBAAC,IAAD,CAAOkI,kBAAmBA,EAAmBC,aAAW,GACtD,oCACG2B,GAAS,kBAAC,IAAD,CAAMzG,QAAM,EAAC7C,MAAM,WAAWpC,MAAO0L,IAC7B,YAAjBuC,EAAMwE,QAAiC,gBAAThS,EAC7B,kBAAC,IAAD,MACmB,cAAjBwN,EAAMwE,OACR,oCACE,kBAAC,IAAD,CACEjO,gBAAgB,YAChBqK,aAAa,aACbC,aAAcJ,EAAa,aAC3BvM,YAAY,4BAEd,kBAAC,IAAD,CACEC,MAAM,SACN+H,SAAS,OACTpG,QAAS6P,EACT5T,MAAM,mCAER,kBAAC,IAAD,CAAQ+D,QAASgQ,EAAe,WAAY/T,MAAM,aAEjC,UAAjBiO,EAAMwE,OACR,oCACE,kBAAC,EAAD,CACE9H,aAAcoJ,EAAe,WAC7B/T,MAAM,uBAER,kBAAC,IAAD,CACE4O,aAAa,EACbpK,gBAAgB,YAChBI,cAAc,EACdiK,aAAa,aACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,eACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B8D,MAAM,KAER,kBAAC,IAAD,CACE8B,QAAM,EACN7C,MAAM,SACN+H,SAAS,OACTpG,QAAS8P,EACT7T,MAAM,4BAGS,mBAAjBiO,EAAMwE,OACR,oCACE,kBAAC,EAAD,CACE9H,aAAcoJ,EAAe,SAC7B/T,MAAM,mBAER,kBAAC,IAAD,CACEiF,QAAM,EACNV,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,iEAER,kBAAC,IAAD,CACEiF,QAAM,EACNV,MAAO,CAAE0F,cAAe5K,YAAQ,IAChCW,MAAM,4FAER,kBAAC,IAAD,CACE4O,aAAa,EACbpK,gBAAgB,YAChBI,cAAc,EACdiK,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACE8B,QAAM,EACN7C,MAAM,SACN+H,SAAS,OACTpG,QAAS+P,EACT9T,MAAM,oBAGS,WAAjBiO,EAAMwE,OACR,oCACE,kBAAC,EAAD,CACE9H,aAAcoJ,EAAe,WAC7B/T,MAAM,YAER,kBAAC,IAAD,CACE4O,aAAa,EACbpK,gBAAgB,YAChBI,cAAc,EACdrE,UAAWmT,EACX7E,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACEyL,aAAa,EACbpK,gBAAgB,YAChBI,cAAc,EACdrE,UAAWmT,EACX5P,MAAO,CAAC,CAAEhC,KAAMyM,EAASxK,QAASyK,EAAOxK,OAAO,IAChD8K,aAAcJ,EAAa,YAC3B7J,MAAOyJ,EACPxJ,gBAAiBA,EAAgB,YACjC3C,YAAY,WACZ4C,cAAc,OACdiK,iBAAkBf,EAAML,IACxBrJ,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACE8L,YAAa,CAAE1J,aAAclG,YAAQ,IACrC4F,QAAM,EACN7C,MAAM,SACNyK,SAAU6G,EACVxE,WAAS,EACTnL,QAASgQ,EAAe,SACxB/T,MAAM,6BAER,kBAAC,IAAD,CACEiF,QAAM,EACN7C,MAAM,SACNyK,SAAU6G,EACVvJ,SAAS,OACTpG,QAASe,EAAgB,YACzB9E,MAAM,aAGS,UAAjBiO,EAAMwE,OACR,oCACE,kBAAC,EAAD,CACE9H,aAAcoJ,EAAe,UAC7B/T,MAAM,WAER,kBAAC,IAAD,CACE4O,aAAa,EACbpK,gBAAgB,YAChBI,cAAc,EACdrE,UAAWmT,EACX7E,aAAa,gBACbC,aAAcJ,EAAa,SAC3B7J,MAAOwJ,EACPvJ,gBAAiBA,EAAgB,SACjC3C,YAAY,gBACZ4C,cAAc,OACdR,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACEyL,aAAa,EACbpK,gBAAgB,WAChBI,cAAc,EACdrE,UAAWmT,EACX5P,MAAO,CAAC,CAAEhC,KAAMyM,EAASxK,QAASyK,EAAOxK,OAAO,IAChD8K,aAAcJ,EAAa,YAC3B7J,MAAOyJ,EACPxJ,gBAAiBA,EAAgB,YACjC3C,YAAY,WACZ4C,cAAc,OACdiK,iBAAkBf,EAAML,IACxBrJ,MAAO,CAAEgB,aAAclG,YAAQ,IAC/B0P,gBAAgB,WAChB5L,MAAM,KAER,kBAAC,IAAD,CACE8L,YAAa,CAAE1J,aAAclG,YAAQ,IACrC4F,QAAM,EACN7C,MAAM,SACN8M,WAAS,EACTnL,QAASgQ,EAAe,kBACxB/T,MAAM,qBAER,kBAAC,IAAD,CACEiF,QAAM,EACN7C,MAAM,SACN+H,SAAS,OACTpG,QAASe,EAAgB,YACzB9E,MAAM,YAIV,oCACE,kBAAC,EAAD,CAAa2K,aAAcb,EAAmB9J,MAAM,iBAClC,QAAhBgU,KAASC,IAAgBpB,IACzB,kBAAC,GAAD,CACEV,KAAK,QACL/M,QAAM,EACNrB,QAASmP,EACTlT,MAAM,wBAGT4S,GACC,kBAAC,GAAD,CACET,KAAK,SACL/M,QAAM,EACNrB,QAASoP,EACTnT,MAAM,yBAGT2S,GACC,kBAAC,GAAD,CACER,KAAK,WACL/M,QAAM,EACNrB,QAASqP,EACTpT,MAAM,2BAGT+S,GACC,kBAAC,GAAD,CACEZ,KAAK,QACL/M,QAAM,EACNrB,QAASgQ,EAAe,UACxB/T,MAAM,wBAGT8S,GACC,kBAAC,GAAD,CACEX,KAAK,QACL/M,QAAM,EACNrB,QAASgQ,EAAe,SACxB/T,MAAM,wBAGTgT,GACC,kBAAC,GAAD,CACEb,KAAK,UACLpO,QAAS0P,EACTzT,MAAM,+BCvZhBkU,GAA0B,CAC9B,CACEpU,GAAI,IACJqS,KAAM,iBACNgC,SAAU,CACR,CACEnU,MAAO,wBACPoU,UAAW,KACXC,WAAY,CAAEpK,cAAe5K,YAAQ,KACrCiV,WAAY,CACV,CAAC,CAAEtU,MAAO,oCACV,CACE,CAAEA,MAAO,kCACT,CAAEA,MAAO,eAAgB+D,QAAS,cAClC,CAAE/D,MAAO,mDAMnB,CACEF,GAAI,IACJqS,KAAM,iBACNgC,SAAU,CACR,CACEnU,MAAO,sCACPoU,UAAW,KACXC,WAAY,CAAEpK,cAAe5K,YAAQ,KACrCiV,WAAY,CACV,CACE,CACEtU,MACE,mGAGN,CAAC,CAAEA,MAAO,uBAAwB+D,QAAS,mBAKnD,CACEjE,GAAI,IACJqS,KAAM,iBACNgC,SAAU,CACR,CACEnU,MAAO,qBACPoU,UAAW,KACXC,WAAY,CAAEpK,cAAe5K,YAAQ,KACrCiV,WAAY,CACV,CACE,CACEtU,MACE,mEAOd,CACEF,GAAI,IACJqS,KAAM,iBACNgC,SAAU,CACR,CACEnU,MAAO,gCACPoU,UAAW,KACXC,WAAY,CAAEpK,cAAe5K,YAAQ,KACrCiV,WAAY,CACV,CACE,CACEtU,MACE,+GAOd,CACEF,GAAI,IACJqS,KAAM,iBACNgC,SAAU,CACR,CACEnU,MAAO,qBACPoU,UAAW,KACXC,WAAY,CAAEpK,cAAe5K,YAAQ,KACrCiV,WAAY,CACV,CACE,CACEtU,MACE,6HAEJ,CAAEA,MAAO,eAAgB+D,QAAS,cAClC,CAAE/D,MAAO,WAQRuU,GAAUtS,gBAAK,WAC1B,IAAMU,EAAWC,cACjB,EAAkCJ,oBAAS,GAA3C,mBAAOgS,EAAP,KAAkBC,EAAlB,KACMC,EAAgBxR,uBAAY,kBAAMuR,GAAa,SAAC9Q,GAAD,OAAQA,OAAI,IAC3DgR,EAAiBzR,uBACrB,SAAC0R,GACC,IACEtJ,EAOEsJ,EAPFtJ,YACAzJ,EAME+S,EANF/S,MAOIiG,EAAO,CACXwD,cACAzJ,QACA2J,cAJEoJ,EALFpJ,cAUAqJ,YALED,EAJFC,YAUAC,YANEF,EAHFE,YAUAC,SAPEH,EAFFG,SAUAtJ,IAREmJ,EADFnJ,KAWF9I,EAASqS,YAAMlN,IACf,MAAwBnH,IAAhBiB,EAAR,EAAQA,KAAR,EAAcG,MACRhB,KAAI,SAACsC,GAAD,OAAUV,EAASW,YAAWD,OACxCV,EAAS8L,YAAS,2BAAK7M,GAAN,IAAYC,cAE/B,CAACc,IAGH,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC2B,EAAA,EAAD,CAAMC,MAAO,CAAEc,KAAM,IACnB,kBAAC,IAAD,CAAU4P,SAAU,IAAMf,OAAQA,KAClC,kBAAC5P,EAAA,EAAD,CAAMC,MAAO,CAAElF,QAASF,EAAeE,UACrC,kBAAC,IAAD,CACE4P,YAAa,CAAE1J,aAAclG,YAAQ,IACrC4F,QAAM,EACN7C,MAAM,SACN+H,SAAS,OACTpG,QAAS2Q,EACT1U,MAAM,mBAKbwU,GACC,kBAAC,GAAD,CACE1K,kBAAmB4K,EACnBzB,UAAW0B,EACX3B,eAAa,EACbD,WAAS,EACTJ,cAAY,EACZC,YAAU,EACVE,WAAS,QC9IboC,GAAmC,CAAEC,aAAa,GAElDC,GAAW,CACfC,KAAM,CAAEC,QAAS,sBAAuBC,UAAW,uBACnDC,UAAW,CACTF,QAAS,mCACTC,UAAW,oCAEbE,QAAS,CAAEH,QAAS,UAAWC,UAAW,WAC1CG,QAAS,CAAEJ,QAAS,UAAWC,UAAW,YAGtCI,GAAiBC,cACjBC,GAAY,WAEhB,OADA/K,cAEE,kBAAC6K,GAAeG,UAAhB,CAA0BC,cAAeb,IACvC,kBAACS,GAAeK,OAAhB,CAAuBC,UAAWpG,EAAU/N,KAAK,aACjD,kBAAC6T,GAAeK,OAAhB,CAAuBC,UAAW5G,EAASvN,KAAK,cAKhDoU,GAAWC,cACXC,GAAO,WACX,IAAQC,EAAqBC,cAArBD,iBACR,OACE,kBAACH,GAASJ,UAAV,CAAoBC,cAAeM,EAAiB,CAAEjB,eACpD,kBAACc,GAASF,OAAV,CAAiBC,UAAWnK,EAAShK,KAAK,SAC1C,kBAACoU,GAASF,OAAV,CAAiBC,UAAWJ,GAAW/T,KAAK,cAC5C,kBAACoU,GAASF,OAAV,CAAiBC,UAAWpE,GAAS/P,KAAK,YAC1C,kBAACoU,GAASF,OAAV,CAAiBC,UAAWpL,EAAS/I,KAAK,cAK1CyU,GAAeX,cACRY,GAAU,WACrB,IAAQC,EAAuBH,cAAvBG,mBACR,OACE,kBAACF,GAAaT,UAAd,CAAwBC,cAAeU,GACrC,kBAACF,GAAaP,OAAd,CAAqBC,UAAW1B,GAASzS,KAAK,YAC9C,kBAACyU,GAAaP,OAAd,CAAqBC,UAAWhE,GAAQnQ,KAAK,YAC7C,kBAACyU,GAAaP,OAAd,CAAqBC,UAAWnI,EAAOhM,KAAK,WAC5C,kBAACyU,GAAaP,OAAd,CAAqBC,UAAW7G,EAAetN,KAAK,qBAKpD4U,GAAYd,cACLe,GAAO,WAClB,IAAQF,EAAuBH,cAAvBG,mBACR,OACE,kBAACC,GAAUZ,UAAX,CAAqBC,cAAeU,GAClC,kBAACC,GAAUV,OAAX,CAAkBC,UAAWG,GAAMtU,KAAK,SACxC,kBAAC4U,GAAUV,OAAX,CAAkBC,UAAWnJ,EAAYhL,KAAK,kBC7ErCG,0BAAK,WAClB,IACM2U,EADO/T,aAAgB,SAACC,GAAD,OAAOA,EAAEC,gBACnB4T,GAAOH,GAC1B,OAAO,kBAACI,EAAD","file":"static/js/14.3c22de1e.chunk.js","sourcesContent":["import { padding } from '../../../features';\n\nexport const completeConfig = {\n  borderRadius: padding(2),\n  padding: padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import { v4 } from 'uuid';\nimport { Item, User } from '../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  items: Item[];\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    { ...dItem(u), title: 'Backlog', type: 'list' },\n    { ...dItem(u), title: 'Todo', type: 'list' },\n    { ...dItem(u), title: 'In Progress', type: 'list' },\n    { ...dItem(u), title: 'Done', type: 'list' },\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // User\n  const date = Date.now();\n  const u = v4();\n\n  // Inbox\n  const inboxItems: Item[] = [\n    { ...dItem(u), title: 'do dishes' },\n    { ...dItem(u), title: 'schedule meeting with Jim' },\n    { ...dItem(u), title: 'run 4 miles' },\n    { ...dItem(u), title: 'change oil' },\n    { ...dItem(u), title: 'what is the best mediation' },\n    { ...dItem(u), title: 'record Kelly birthday on Sep 22' },\n    { ...dItem(u), title: 'drink water' },\n    { ...dItem(u), title: 'intensity + focus = deep work' },\n    { ...dItem(u), title: 'put $20 in phone' },\n    { ...dItem(u), title: 'clear emails' },\n  ];\n\n  // Projects\n  const homeTodoItems: Item[] = [\n    { ...dItem(u), title: 'clean desk' },\n    { ...dItem(u), title: 'clean room' },\n    { ...dItem(u), title: 'walk dog' },\n    { ...dItem(u), title: 'brush teeth' },\n    { ...dItem(u), title: 'do laundry' },\n    { ...dItem(u), title: 'fix sink' },\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    { ...dItem(u), title: 'one one one' },\n    { ...dItem(u), title: 'q1 planning' },\n  ];\n  const bookItems: Item[] = [\n    { ...dItem(u), title: 'eat that frog' },\n    { ...dItem(u), title: 'deep work' },\n    { ...dItem(u), title: 'the one thing' },\n  ];\n  const giftItems: Item[] = [\n    { ...dItem(u), title: 'girlfriend' },\n    { ...dItem(u), title: 'sister' },\n    { ...dItem(u), title: 'parents' },\n  ];\n  const checkItems: Item[] = [\n    { ...dItem(u), title: 'after bathroom' },\n    { ...dItem(u), title: 'before car' },\n    { ...dItem(u), title: 'before sleep' },\n  ];\n  const codeItems: Item[] = [\n    { ...dItem(u), title: 'php' },\n    { ...dItem(u), title: 'javascript' },\n    { ...dItem(u), title: 'swift' },\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map((i) => i.id),\n    },\n  ];\n\n  // User\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    email: 'bob@smith.com',\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Keyboard, TextInput as OriginalTextInput, View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Button, TextInput, TextInputIcon } from '../../../components';\nimport { padding, useColor } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { addItemToItem, createItem, Item } from '../models';\nimport { completeConfig } from '../utils';\n\ntype AddItemProps = {\n  width?: number;\n  parentItemId: string;\n  placeholder: string;\n  title: string;\n};\n\nexport const AddItem = memo(function AddItem({\n  width,\n  parentItemId,\n  placeholder,\n  title,\n}: AddItemProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) {\n        Keyboard.dismiss();\n        return;\n      }\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n        type: 'note',\n      };\n      dispatch(createItem(item));\n      dispatch(addItemToItem({ parentItemId, itemId }));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  const onAddItemPress = useCallback(() => setShowInput((p) => !p), []);\n  const onClose = useCallback(() => setShowInput(false), []);\n  const onBlur = useCallback(() => setShowInput(false), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n      clear: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background.primaryA,\n        justifyContent: 'center',\n      }}\n    >\n      {showInput ? (\n        <TextInput\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmitEditing={onSubmit}\n          placeholder={placeholder}\n          returnKeyType=\"done\"\n          submitClear\n        />\n      ) : (\n        <Button center color=\"accent\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, { memo, ReactElement } from 'react';\nimport { LayoutChangeEvent, View } from 'react-native';\nimport { useColor } from '../../../features';\nimport { completeConfig } from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n  flex?: boolean;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background.primaryA,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}\n    >\n      {children}\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { TextInput, TextInputIcon } from '../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { navItemDetails, updateItem } from '../models';\nimport { MainStackRoutes } from '../navigationTypes';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<StackNavigationProp<MainStackRoutes>>();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateItem({ ...item, title }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSave,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'dots-horizontal', onPress: onDetail },\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n    >\n      <TextInput\n        editable={item.editable}\n        icons={icons}\n        onSubmitEditing={onSave}\n        placeholder=\"List title...\"\n        returnKeyType=\"done\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard, TextInput as OriginalTextInput } from 'react-native';\nimport { TextInput, TextInputIcon } from '../../../components';\nimport { TouchableWithoutFeedback } from '../../../conversions';\nimport { useColor } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport { ImplementTabNavigation } from '../navigationTypes';\nimport { completeConfig } from '../utils';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<ImplementTabNavigation>();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({ ...item, title }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({ projectItemId: itemId }));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index - 1 }));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index + 1 }));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onItemTitleClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'chevron-up', onPress: onItemUp, hidden: true },\n    { name: 'chevron-down', onPress: onItemDown, hidden: true },\n    { name: 'dots-horizontal', onPress: onItemDetails },\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: color.background.secondary,\n        flexDirection: 'row',\n      }}\n    >\n      <TextInput\n        backgroundColor=\"secondary\"\n        icons={icons}\n        onRef={textInputRef}\n        onSubmitEditing={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        returnKeyType=\"done\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { FlatList, ListRenderItem } from 'react-native';\nimport { useRootSelector } from '../../../redux';\nimport { ListItem } from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({ item, index }) => (\n      <ListItem\n        index={index}\n        itemId={item}\n        key={item}\n        parentItemId={parentItemId}\n      />\n    ),\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, { memo, ReactElement } from 'react';\nimport { View } from 'react-native';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { Card } from './Card';\nimport { ListHeader } from './ListHeader';\nimport { ListItems } from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  itemId: string;\n  parentItemId: string | null;\n  orientation?: 'vertical' | 'horizontal';\n  footer?: ReactElement;\n  maxHeight: number;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{ padding, maxHeight }}>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport { FlatList } from '../../../conversions';\nimport { useRootSelector } from '../../../redux';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { List } from './List';\n\ntype BoardProps = {\n  projectItemId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item) => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({ length: listSize, offset: listSize * index, index }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({ item }) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{ padding: completeConfig.padding }}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{ height: '100%' }}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Button, Modal, Text } from '../../../components';\nimport { padding } from '../../../features';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{ alignItems: 'center' }}>\n        <Text\n          style={{ paddingBottom: padding(2) }}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"negative\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../components';\nimport { padding } from '../../../features';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{ padding: padding(2) }}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { RelativeDate, Text } from '../../../components';\nimport { padding } from '../../../features';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n  type: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text style={{ padding: padding(2) }} title={type} />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{ padding: padding(2) }} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{ padding: padding(2) }} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{ padding: padding(2) }} />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { TextInput, TextInputIcon } from '../../../components';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype OnSubmit = (text: string) => void;\n\ntype ItemEditProps = {\n  title: string;\n  titleEditable: boolean;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => OnSubmit;\n};\n\n// TODO: need to clear on blur\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  titleEditable,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string): TextInputIcon[] => [\n      { name: 'close', onPress: onClose, focus: true, reset: true },\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: 'accent',\n        focus: true,\n        required: true,\n      },\n    ],\n    [onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInput\n          editable={titleEditable}\n          icons={icons('title')}\n          onSubmitEditing={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          returnKeyType=\"done\"\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInput\n          icons={icons('description')}\n          multiline\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Icon, Text, TouchableOpacity } from '../../../components';\nimport { padding } from '../../../features';\n\ntype Props = {\n  title: string;\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = padding(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: padding(4),\n      }}\n    >\n      <TouchableOpacity onPress={onLeftPress}>\n        <Icon invisible={!onLeftPress} name=\"chevron-left\" size={size} />\n      </TouchableOpacity>\n      <Text center flex title={title} type=\"h4\" />\n      <TouchableOpacity onPress={onRightPress}>\n        <Icon invisible={!onRightPress} name=\"close\" size={size} />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { Button, Screen, Text } from '../../../../components';\nimport { ScrollView } from '../../../../conversions';\nimport {\n  padding,\n  RootNavigation,\n  useAuth,\n  useColor,\n  useTabTap,\n} from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card } from '../../components';\nimport { logout } from '../../models';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  useTabTap();\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<RootNavigation>();\n  const { onLogout, response } = useAuth();\n  const profile = useRootSelector((s) => s.completeAuth);\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  useEffect(() => {\n    if (response.type === 'logout') dispatch(logout());\n  }, [dispatch, response.type]);\n\n  return (\n    <Screen title=\"Account\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: color.background.secondary,\n        }}\n        style={{ backgroundColor: color.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Profile\"\n            type=\"h5\"\n          />\n          <Text title={profile?.displayName || ''} />\n          <Text title={profile?.email || ''} />\n          <Text title={String(profile?.emailVerified) || ''} />\n          <Text title={profile?.uid || ''} />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Reminders\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Payment\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: padding(4) }}\n            title=\"Feedback\"\n            type=\"h5\"\n          />\n          <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n        </Card>\n        <Button onPress={onLogout} title=\"logout\" />\n        {response.error && <Text color=\"negative\" title={response.error} />}\n        <Button onPress={onNavToAdmin} title=\"go to admin\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useRef, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { Button, KeyboardHandler, Screen } from '../../../../components';\nimport {\n  padding,\n  useColor,\n  useKeyboardHeight,\n  useTabTap,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Card, List } from '../../components';\nimport { getInbox } from '../../models';\n\nconst initialState = { container: 0, button: 0 };\nexport const Capture = memo(function Capture() {\n  useTabTap();\n  const color = useColor();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = padding(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const { height } = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const { container, button } = containerRefs.current;\n      if (container > 0 && button > 0 && !containerHeight) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n      }\n    },\n    [containerHeight],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout('container')}\n      >\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"accent\"\n                disabled={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Keyboard, View } from 'react-native';\nimport { Button, Modal, Text } from '../../../../components';\nimport { padding, useColor } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card, DeleteModal, ItemContext, ItemEdit } from '../../components';\nimport { removeItem, removeItemFromItem, updateItem } from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n  const color = useColor();\n\n  const { itemId, parentItemId } = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({ parentItemId, itemId }));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({ ...item, [type]: text }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return item ? (\n    <>\n      <Modal\n        backgroundColor={color.background.secondary}\n        onBackgroundPress={goBack}\n      >\n        <View>\n          <ItemEdit\n            description={item.description}\n            onSubmit={onItemSubmit}\n            placeholder=\"Item\"\n            title={item.title}\n            titleEditable={item.editable}\n          />\n          <Card margin=\"bottom\">\n            <Text title=\"Reminders\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Tags\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Comments\" />\n          </Card>\n          <ItemContext\n            createdAt={item.createdAt}\n            type={item.type}\n            updatedAt={item.updatedAt}\n            userId={item.userId}\n          />\n          {item.editable ? (\n            <View\n              style={{\n                flexDirection: 'row',\n                flex: 1,\n                justifyContent: 'space-between',\n              }}\n            >\n              <Card flex>\n                <Button center onPress={goBack} title=\"close\" />\n              </Card>\n              <View style={{ padding: padding(2) }} />\n              <Card flex>\n                <Button\n                  center\n                  color=\"negative\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            </View>\n          ) : (\n            <Card flex>\n              <Button center onPress={goBack} title=\"close\" />\n            </Card>\n          )}\n        </View>\n      </Modal>\n      {deleteModal ? (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      ) : null}\n    </>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { TextInput as OriginalTextInput } from 'react-native';\nimport { Button, Modal, TextInput } from '../../../../components';\nimport { padding, useColor } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { eye: false, completeForm: false };\n\nexport const LogIn = memo(function LogIn() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('password-reset'), [navigate]);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const completeForm = email.length > 0 && password.length > 0;\n      setState((p) => ({ ...p, completeForm }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: padding(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { TextInput as OriginalTextInput } from 'react-native';\nimport { Button, Modal, Text, TextInput } from '../../../../components';\nimport { padding, useColor } from '../../../../features';\nimport { ModalHeader } from '../../components';\nimport { LandingStackRoutes } from '../../navigationTypes';\n\nconst initialRef = { email: '' };\nconst initialState = { complete: false };\nexport const PasswordReset = memo(function PasswordReset() {\n  const color = useColor();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const focus = useIsFocused();\n  const emailRef = useRef<OriginalTextInput | null>(null);\n\n  const onSubmit = useCallback(() => {\n    if (!state.complete) return;\n    goBack();\n  }, [goBack, state.complete]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const complete = val.length > 0;\n      setState((p) => ({ ...p, complete }));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Password reset\" />\n      <Text\n        center\n        style={{ paddingBottom: padding(4) }}\n        title=\"Please enter the email address associated with your account.\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: padding(4) }}\n        title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Email address\"\n        returnKeyType=\"send\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.complete}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset password\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport { padding, useColor, useKeyboardHeight } from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\nimport { Board } from '../../components';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const { goBack } = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const { projectItemId } = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = padding(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = padding(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      onLeftPress={navBack}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title={projectItemTitle}\n    >\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout}\n      >\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport { padding, useColor, useKeyboardHeight } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { List } from '../../components';\nimport { getProjects } from '../../models';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = padding(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen onRightPress={showSearchBar} rightIcon=\"magnify\" title=\"Implement\">\n      <KeyboardHandler\n        backgroundColor={color.background.secondary}\n        onLayout={onLayout}\n      >\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { scaleLinear, scaleTime } from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Svg, { Defs, LinearGradient, Path, Stop } from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d: string = shape\n    .line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{ width, height }}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path\n          d={d}\n          fill=\"transparent\"\n          stroke=\"#3977e3\"\n          strokeWidth={strokeWidth}\n        />\n      </Svg>\n    </View>\n  );\n};\n","import React, { memo } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { Calendar, Screen, Text } from '../../../../components';\nimport { ScrollView } from '../../../../conversions';\nimport { padding, useColor, useTabTap } from '../../../../features';\nimport { Card } from '../../components';\nimport { completeConfig } from '../../utils';\nimport { Graph } from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = { name: string };\n\nconst Title = ({ name }: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{ paddingBottom: completeConfig.padding }}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  { date: new Date(2018, 9, 1).getTime(), value: 0 },\n  { date: new Date(2018, 9, 16).getTime(), value: 0 },\n  { date: new Date(2018, 9, 17).getTime(), value: 200 },\n  { date: new Date(2018, 10, 1).getTime(), value: 200 },\n  { date: new Date(2018, 10, 2).getTime(), value: 300 },\n  { date: new Date(2018, 10, 5).getTime(), value: 300 },\n];\n\nexport const Reflect = memo(function Reflect() {\n  useTabTap();\n  const color = useColor();\n\n  return (\n    <Screen title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: color.background.secondary,\n        }}\n        style={{ backgroundColor: color.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { TextInput as OriginalTextInput } from 'react-native';\nimport { Button, Modal, Text, TextInput } from '../../../../components';\nimport { padding, useColor } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { eye: false, completeForm: false, passwordError: false };\n\nexport const SignUp = memo(function SignUp() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const passwordError = password.length < 10 && key === 'password';\n      const completeForm = email.length > 0 && password.length >= 10;\n      setState((p) => ({ ...p, completeForm, passwordError }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={color.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader onRightPress={goBack} title=\"Log in\" />\n      <TextInput\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: padding(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCorrect={false}\n        blurOnSubmit={false}\n        error={state.passwordError}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: padding(2) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Text\n        color=\"negative\"\n        invisible={!state.passwordError}\n        title=\"Password is too short.\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: padding(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign Up\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { FirebaseAuthTypes } from '@react-native-firebase/auth';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform, TextInput as OriginalTextInput } from 'react-native';\nimport {\n  ActivityIndicator,\n  Button,\n  Icon,\n  Modal,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from '../../../../components';\nimport { padding, useAuth, useColor } from '../../../../features';\nimport { ModalHeader } from '../../components';\n\ntype Props = {\n  onBackgroundPress: () => void;\n  showFacebook?: boolean;\n  showGoogle?: boolean;\n  showApple?: boolean;\n  showEmail?: boolean;\n  showPhone?: boolean;\n  showAnonymous?: boolean;\n  onSuccess: (user: FirebaseAuthTypes.User | null) => void;\n};\n\n// TODO: relocate to somewhere\ninterface SignInButtonProps {\n  onPress: () => void;\n  icon: string;\n  title: string;\n  margin?: boolean;\n}\n\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n  margin,\n}: SignInButtonProps) {\n  const color = useColor();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: color.background.secondary,\n        borderWidth: 1,\n        padding: padding(2),\n        marginBottom: padding(margin ? 4 : 0),\n        borderRadius: padding(2),\n      }}\n    >\n      <Icon name={icon} />\n      <Text style={{ paddingLeft: padding(2) }} title={title} type=\"button\" />\n    </TouchableOpacity>\n  );\n});\n\ntype Screen =\n  | 'loading'\n  | 'landing'\n  | 'signUp'\n  | 'logIn'\n  | 'forgotPassword'\n  | 'phone'\n  | 'phoneCode'\n  | 'anonymous';\n\ntype Ref = {\n  email: string;\n  password: string;\n  phone: string;\n  phoneCode: string;\n};\n\nconst initialRef: Ref = {\n  email: '',\n  password: '',\n  phone: '',\n  phoneCode: '',\n};\n\ntype State = {\n  eye: boolean;\n  completeForm: boolean;\n  passwordError: boolean;\n  screen: Screen;\n  error: string | null;\n};\n\nconst initialState: State = {\n  eye: false,\n  error: null,\n  completeForm: false,\n  passwordError: false,\n  screen: 'landing',\n};\n\nexport const Login = memo(function Login({\n  onBackgroundPress,\n  showFacebook,\n  showGoogle,\n  showApple,\n  showPhone,\n  showEmail,\n  showAnonymous,\n  onSuccess,\n}: Props) {\n  const {\n    response,\n    onApple,\n    onGoogle,\n    onFacebook,\n    onPhoneConfirm,\n    onPhone,\n    onEmail,\n    onPasswordReset,\n    onAnonymous,\n  } = useAuth();\n  const { type, error, user } = response;\n  const loading = type === 'loading';\n  const successful = useRef(false);\n  const form = useRef<Ref>(initialRef);\n  const [state, setState] = useState<State>(initialState);\n  const emailRef = useRef<OriginalTextInput | null>(null);\n  const passwordRef = useRef<OriginalTextInput | null>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onFormChange = useCallback(\n    (key: keyof Ref) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n    },\n    [],\n  );\n\n  const handleConfirm = useCallback(\n    () => onPhoneConfirm(form.current.phoneCode),\n    [onPhoneConfirm],\n  );\n\n  const handlePhone = useCallback(() => onPhone(form.current.phone), [onPhone]);\n  const handleReset = useCallback(\n    () => onPasswordReset(form.current.email),\n    [onPasswordReset],\n  );\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password')\n        onEmail(form.current.email, form.current.password);\n    },\n    [onEmail],\n  );\n\n  const onScreenChange = useCallback(\n    (screen: Screen) => () => setState((p) => ({ ...p, screen })),\n    [],\n  );\n\n  useEffect(() => {\n    if (user && !successful.current) {\n      onSuccess(user);\n      successful.current = true;\n    }\n  }, [onSuccess, user]);\n\n  return (\n    <Modal onBackgroundPress={onBackgroundPress} showOverlay>\n      <>\n        {error && <Text center color=\"negative\" title={error} />}\n        {state.screen === 'loading' || type === 'initalizing' ? (\n          <ActivityIndicator />\n        ) : state.screen === 'phoneCode' ? (\n          <>\n            <TextInput\n              backgroundColor=\"secondary\"\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phoneCode')}\n              placeholder=\"phone confirmation code\"\n            />\n            <Button\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleConfirm}\n              title=\"verify phone confirmation code\"\n            />\n            <Button onPress={onScreenChange('landing')} title=\"go back\" />\n          </>\n        ) : state.screen === 'phone' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Phone Confirmation\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phone')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('phone')}\n              placeholder=\"Phone number\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: padding(4) }}\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handlePhone}\n              title=\"send confirmation code\"\n            />\n          </>\n        ) : state.screen === 'forgotPassword' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('logIn')}\n              title=\"Reset password\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: padding(4) }}\n              title=\"Please enter the email address associated with your account.\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: padding(4) }}\n              title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleReset}\n              title=\"Reset password\"\n            />\n          </>\n        ) : state.screen === 'signUp' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Sign up\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: padding(4) }}\n              center\n              color=\"accent\"\n              disabled={loading}\n              lowercase\n              onPress={onScreenChange('logIn')}\n              title=\"Already have an account?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              disabled={loading}\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Sign up\"\n            />\n          </>\n        ) : state.screen === 'logIn' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('signUp')}\n              title=\"Log in\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCorrect={false}\n              backgroundColor=\"primaryA\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: padding(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: padding(4) }}\n              center\n              color=\"accent\"\n              lowercase\n              onPress={onScreenChange('forgotPassword')}\n              title=\"Forgot password?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Log in\"\n            />\n          </>\n        ) : (\n          <>\n            <ModalHeader onRightPress={onBackgroundPress} title=\"Get Started\" />\n            {(Platform.OS === 'ios' || showApple) && (\n              <SignInButton\n                icon=\"apple\"\n                margin\n                onPress={onApple}\n                title=\"Continue with Apple\"\n              />\n            )}\n            {showGoogle && (\n              <SignInButton\n                icon=\"google\"\n                margin\n                onPress={onGoogle}\n                title=\"Continue with Google\"\n              />\n            )}\n            {showFacebook && (\n              <SignInButton\n                icon=\"facebook\"\n                margin\n                onPress={onFacebook}\n                title=\"Continue with Facebook\"\n              />\n            )}\n            {showEmail && (\n              <SignInButton\n                icon=\"email\"\n                margin\n                onPress={onScreenChange('signUp')}\n                title=\"Continue with Email\"\n              />\n            )}\n            {showPhone && (\n              <SignInButton\n                icon=\"phone\"\n                margin\n                onPress={onScreenChange('phone')}\n                title=\"Continue with Phone\"\n              />\n            )}\n            {showAnonymous && (\n              <SignInButton\n                icon=\"account\"\n                onPress={onAnonymous}\n                title=\"Continue Anonymously\"\n              />\n            )}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { View } from 'react-native';\nimport { Button, Carousel, Screen } from '../../../../components';\nimport { CarouselSlide } from '../../../../components/Carousel/types';\nimport { padding } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { createItem, loadUser, login } from '../../models';\nimport { completeConfig, getDefaultUserTemplate } from '../../utils';\nimport { Login } from './Login';\n\nconst slides: CarouselSlide[] = [\n  {\n    id: '1',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Welcome to Accomplish',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [{ title: 'Start investing commission-free' }],\n          [\n            { title: 'Other fees may apply. View our' },\n            { title: 'fee schedule', onPress: () => undefined },\n            { title: 'to learn more. All investments have risks.' },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Enjoy commission-free stock trading',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{ title: 'View fee disclosures', onPress: () => undefined }],\n        ],\n      },\n    ],\n  },\n  {\n    id: '3',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'No account minimum',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Everything at your fingertips',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '5',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Account protection',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: padding(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            { title: 'www.sipc.org', onPress: () => undefined },\n            { title: '.' },\n          ],\n        ],\n      },\n    ],\n  },\n];\n\nexport const Welcome = memo(function Welcome() {\n  const dispatch = useRootDispatch();\n  const [showLogin, setShowLogin] = useState(false);\n  const onToggleLogin = useCallback(() => setShowLogin((p) => !p), []);\n  const onLoginSuccess = useCallback(\n    (auth) => {\n      const {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      } = auth;\n      const data = {\n        displayName,\n        email,\n        emailVerified,\n        isAnonymous,\n        phoneNumber,\n        photoURL,\n        uid,\n      };\n      dispatch(login(data));\n      const { user, items } = getDefaultUserTemplate();\n      items.map((item) => dispatch(createItem(item)));\n      dispatch(loadUser({ ...user, email }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Screen>\n        <View style={{ flex: 1 }}>\n          <Carousel duration={6000} slides={slides} />\n          <View style={{ padding: completeConfig.padding }}>\n            <Button\n              buttonStyle={{ marginBottom: padding(2) }}\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onToggleLogin}\n              title=\"Get Started\"\n            />\n          </View>\n        </View>\n      </Screen>\n      {showLogin && (\n        <Login\n          onBackgroundPress={onToggleLogin}\n          onSuccess={onLoginSuccess}\n          showAnonymous\n          showEmail\n          showFacebook\n          showGoogle\n          showPhone\n        />\n      )}\n    </>\n  );\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, { ReactElement } from 'react';\nimport { useNavScreenOptions, useTabTap } from '../../features';\nimport {\n  HomeStackRoutes,\n  ImplementStackRoutes,\n  LandingStackRoutes,\n  MainStackRoutes,\n} from './navigationTypes';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  PasswordReset,\n  Project,\n  Projects,\n  Reflect,\n  SignUp,\n  Welcome,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = { headerShown: false };\n\nconst tabIcons = {\n  plan: { focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline' },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: { focused: 'finance', unFocused: 'finance' },\n  account: { focused: 'account', unFocused: 'account' },\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackRoutes>();\nconst Implement = () => {\n  useTabTap();\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen component={Projects} name=\"projects\" />\n      <ImplementStack.Screen component={Project} name=\"project\" />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst TabStack = createBottomTabNavigator<HomeStackRoutes>();\nconst Home = () => {\n  const { tabScreenOptions } = useNavScreenOptions();\n  return (\n    <TabStack.Navigator screenOptions={tabScreenOptions({ tabIcons })}>\n      <TabStack.Screen component={Capture} name=\"plan\" />\n      <TabStack.Screen component={Implement} name=\"implement\" />\n      <TabStack.Screen component={Reflect} name=\"reflect\" />\n      <TabStack.Screen component={Account} name=\"account\" />\n    </TabStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackRoutes>();\nexport const Landing = (): ReactElement => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <LandingStack.Navigator screenOptions={modalScreenOptions}>\n      <LandingStack.Screen component={Welcome} name=\"welcome\" />\n      <LandingStack.Screen component={SignUp} name=\"sign-up\" />\n      <LandingStack.Screen component={LogIn} name=\"log-in\" />\n      <LandingStack.Screen component={PasswordReset} name=\"password-reset\" />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackRoutes>();\nexport const Main = (): ReactElement => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <MainStack.Navigator screenOptions={modalScreenOptions}>\n      <MainStack.Screen component={Home} name=\"home\" />\n      <MainStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </MainStack.Navigator>\n  );\n};\n","import React, { memo } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { Landing, Main } from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}