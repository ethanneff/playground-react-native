{"version":3,"file":"static/js/552.fdb58b96.chunk.js","mappings":"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","sources":["apps/Playground/Components/Colors/ButtonGroup.tsx","apps/Playground/Components/Colors/FontGroup.tsx","apps/Playground/Components/Colors/TagGroup.tsx","apps/Playground/Components/Colors/ThemeGroup.tsx","apps/Playground/Components/Colors/Title.tsx","apps/Playground/Components/Colors/index.tsx","apps/Playground/Components/Fonts/index.tsx","apps/Playground/Components/Inputs/index.tsx","apps/Playground/Components/Modals/Reminders/Item.tsx","apps/Playground/Components/Modals/Reminders/Location.tsx","apps/Playground/Components/Modals/Reminders/OneTime.tsx","apps/Playground/Components/Modals/Reminders/Radio.tsx","apps/Playground/Components/Modals/Reminders/Repeat.tsx","apps/Playground/Components/Modals/Reminders/Create.tsx","apps/Playground/Components/Modals/Reminders/index.tsx","apps/Playground/Components/Modals/index.tsx","apps/Playground/Components/Paragraphs/data.ts","apps/Playground/Components/Paragraphs/index.tsx","apps/Playground/Components/Themes/index.tsx","apps/Playground/Creations/AppleFit/index.web.tsx","apps/Playground/Creations/AppleMask/index.tsx","../node_modules/@babel/runtime/helpers/esm/toArray.js","apps/Playground/Creations/AppleStopwatch/ButtonRound.tsx","apps/Playground/Creations/AppleStopwatch/ButtonsRow.tsx","apps/Playground/Creations/AppleStopwatch/Timer.tsx","apps/Playground/Creations/AppleStopwatch/Lap.tsx","apps/Playground/Creations/AppleStopwatch/LapsTable.tsx","apps/Playground/Creations/AppleStopwatch/index.tsx","apps/Playground/Creations/Ball/index.tsx","apps/Playground/Creations/Drag/index.tsx","apps/Playground/Creations/OKRs/index.tsx","apps/Playground/Creations/Questionnaire/screens/Questionnaires.tsx","apps/Playground/Creations/Questionnaire/index.tsx","apps/Playground/Creations/Startup/Section.tsx","apps/Playground/Creations/Startup/index.tsx","apps/Playground/Creations/Tinder/index.tsx","apps/Playground/Features/BouncingBalls/utils.tsx","apps/Playground/Features/BouncingBalls/Balls.tsx","apps/Playground/Features/BouncingBalls/index.tsx","apps/Playground/Features/Chat/Item.tsx","apps/Playground/Features/Chat/Items.tsx","apps/Playground/Features/Chat/TextField.tsx","apps/Playground/Features/Chat/index.tsx","apps/Playground/Features/ImageCollection/index.tsx","apps/Playground/Features/KeyboardScroll/index.tsx","apps/Playground/Features/PinchSpread/logic.tsx","apps/Playground/Features/PinchSpread/index.tsx","apps/Playground/Features/SearchBar/index.tsx","apps/Playground/Features/SkeletonLoader/LoadingProfile.tsx","apps/Playground/Features/SkeletonLoader/LoadingSection.tsx","apps/Playground/Features/SkeletonLoader/index.tsx","apps/Playground/Features/SwipeFeed/utils.ts","apps/Playground/Features/SwipeFeed/index.tsx","apps/Playground/Games/Archero/index.tsx","apps/Playground/Games/Bejeweled/index.tsx","apps/Playground/Games/Crash/index.tsx","apps/Playground/Games/Drift/index.web.tsx","apps/Playground/Games/FlappyBird/index.tsx","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","apps/Playground/Games/FortuneWheel/utils.tsx","apps/Playground/Games/FortuneWheel/Wheel.tsx","../node_modules/d3-shape/src/pie.js","apps/Playground/Games/FortuneWheel/index.tsx","apps/Playground/Games/GameOfLife/Buttons.tsx","apps/Playground/Games/GameOfLife/Cell.tsx","apps/Playground/Games/GameOfLife/GameBoard.tsx","apps/Playground/Games/GameOfLife/useLoop.ts","apps/Playground/Games/GameOfLife/Header.tsx","apps/Playground/Games/GameOfLife/index.tsx","apps/Playground/Games/PapiJump/Game.tsx","apps/Playground/Games/PapiJump/index.tsx","apps/Playground/Games/SlotMachine/index.web.tsx","apps/Playground/Games/Snake/index.web.tsx","apps/Playground/Games/TicTacToe/utils.ts","apps/Playground/Games/TicTacToe/index.tsx","apps/Playground/navParams.ts","apps/Playground/Landing/Row.tsx","apps/Playground/Landing/Title.tsx","apps/Playground/Landing/index.tsx","apps/Playground/index.tsx","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/constant.js"],"sourcesContent":["import React, { memo, useCallback } from 'react';\nimport { v4 } from 'uuid';\nimport { Button, Text, View } from '../../../../components';\nimport {\n  FontEmphasis,\n  MonoMultiColor,\n  spacing,\n  useColors,\n} from '../../../../features';\n\ntype ButtonGroupProps = {\n  emphasis: FontEmphasis;\n};\n\nexport const ButtonGroup = memo(function ButtonGroup({\n  emphasis,\n}: ButtonGroupProps) {\n  const colors = useColors();\n  const keys = Object.keys(colors.text) as (keyof MonoMultiColor)[];\n  const handlePress = useCallback(() => null, []);\n  return (\n    <View flex>\n      <Text\n        center\n        style={{ paddingBottom: spacing(5) }}\n        title={emphasis}\n        type=\"h5\"\n      />\n      {keys.map((c) => (\n        <Button\n          buttonStyle={{ margin: 4 }}\n          center\n          color={c}\n          disabled={c === 'disabled'}\n          emphasis={emphasis}\n          key={v4()}\n          onPress={handlePress}\n          title={c}\n        />\n      ))}\n      {keys.map((c) => (\n        <Button\n          buttonStyle={{ margin: 4 }}\n          center\n          color={c}\n          disabled={c === 'disabled'}\n          dropShadow\n          emphasis={emphasis}\n          key={v4()}\n          onPress={handlePress}\n          title={c}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text, View } from '../../../../components';\nimport {\n  FontEmphasis,\n  fontSizes,\n  FontType,\n  spacing,\n} from '../../../../features';\n\ntype FontGroupProps = {\n  emphasis: FontEmphasis;\n};\n\nexport const FontGroup = memo(function FontGroup({ emphasis }: FontGroupProps) {\n  const sizes = Object.keys(fontSizes) as FontType[];\n  return (\n    <View style={{ alignItems: 'center', flex: 1 }}>\n      <Text\n        bold\n        center\n        style={{ paddingBottom: spacing(10) }}\n        title={emphasis}\n        type=\"h6\"\n      />\n      {sizes.map((c) => (\n        <Text\n          center\n          emphasis={emphasis}\n          key={c}\n          title={c}\n          type={c}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { v4 } from 'uuid';\nimport { Tag, View } from '../../../../components';\nimport { spacing, TagColor, useColors } from '../../../../features';\n\nexport const TagGroup = memo(function TagGroup() {\n  const colors = useColors();\n  const onPress = useCallback(() => undefined, []);\n  const keys = Object.keys(colors.tag) as (keyof TagColor)[];\n  return (\n    <>\n      {keys.map((c) => (\n        <View\n          key={v4()}\n          style={{ margin: spacing(1) }}\n        >\n          <Tag\n            color={c}\n            onPress={onPress}\n            title={c}\n          />\n        </View>\n      ))}\n    </>\n  );\n});\n","import React, { memo } from 'react';\nimport { Button, View } from '../../../../components';\nimport {\n  changeTheme,\n  Theme,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\n\nexport const ThemeGroup = memo(function ThemeGroup() {\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentTheme);\n  const themes = useRootSelector((state) => state.theme.themes);\n  const themePress = (theme: Theme) => () => dispatch(changeTheme(theme));\n  return (\n    <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n      {Object.keys(themes).map((key) => (\n        <Button\n          center\n          color={currentTheme === key ? 'positive' : 'primaryA'}\n          emphasis=\"high\"\n          key={key}\n          onPress={themePress(key as Theme)}\n          title={key}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../../components';\nimport { spacing } from '../../../../features';\n\ntype Props = {\n  title: string;\n};\n\nexport const Title = memo(function Title({ title }: Props) {\n  return (\n    <Text\n      center\n      style={{ padding: spacing(8) }}\n      title={title}\n      type=\"h4\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen, ScrollView, View } from '../../../../components';\nimport { ButtonGroup } from './ButtonGroup';\nimport { FontGroup } from './FontGroup';\nimport { TagGroup } from './TagGroup';\nimport { ThemeGroup } from './ThemeGroup';\nimport { Title } from './Title';\n\nexport const Colors = memo(function DebugColors() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Colors\"\n    >\n      <ScrollView>\n        <Title title=\"Theme\" />\n        <ThemeGroup />\n        <Title title=\"Buttons\" />\n        <View row>\n          <ButtonGroup emphasis=\"high\" />\n          <ButtonGroup emphasis=\"medium\" />\n          <ButtonGroup emphasis=\"low\" />\n        </View>\n        <Title title=\"Tags\" />\n        <TagGroup />\n        <Title title=\"Fonts\" />\n        <View row>\n          <FontGroup emphasis=\"default\" />\n          <FontGroup emphasis=\"high\" />\n          <FontGroup emphasis=\"medium\" />\n          <FontGroup emphasis=\"low\" />\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen, ScrollView, Text } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\n\nexport const Fonts = memo(function PlaygroundFonts() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Fonts\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: spacing(4) }}\n        style={{\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Text\n          title=\"H1: The quick brown fox jumps over the lazy dog.\"\n          type=\"h1\"\n        />\n        <Text\n          title=\"h2 The quick brown fox jumps over the lazy dog.\"\n          type=\"h2\"\n        />\n        <Text\n          title=\"H3: The quick brown fox jumps over the lazy dog.\"\n          type=\"h3\"\n        />\n        <Text\n          title=\"H4: The quick brown fox jumps over the lazy dog.\"\n          type=\"h4\"\n        />\n        <Text\n          title=\"H5: The quick brown fox jumps over the lazy dog.\"\n          type=\"h5\"\n        />\n        <Text\n          title=\"H6: The quick brown fox jumps over the lazy dog.\"\n          type=\"h6\"\n        />\n        <Text\n          title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          type=\"subtitle1\"\n        />\n        <Text\n          title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          type=\"subtitle2\"\n        />\n        <Text\n          title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          type=\"body1\"\n        />\n        <Text\n          title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          type=\"body2\"\n        />\n        <Text\n          title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          type=\"overline\"\n        />\n        <Text\n          title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          type=\"caption\"\n        />\n        <Text\n          title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          type=\"button\"\n        />\n        <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Keyboard } from 'react-native';\nimport {\n  Button,\n  Card,\n  Input,\n  KeyboardAwareScrollView,\n  Screen,\n  Spacing,\n  Text,\n  TextInput,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\n\nexport const Inputs = memo(function Inputs() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  const [form, setForm] = useState({\n    email: '',\n    error: '',\n    loading: false,\n    name: '',\n    password: '',\n  });\n\n  const handleChange = useCallback(\n    (key: string) => (val: string) => {\n      setForm((prev) => ({ ...prev, [key]: val }));\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(() => {\n    setForm((prev) => ({ ...prev, error: 'Invalid Email' }));\n  }, []);\n\n  const handleOnSubmit = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Inputs\"\n    >\n      <KeyboardAwareScrollView\n        contentContainerStyle={{\n          paddingHorizontal: spacing(4),\n          paddingVertical: spacing(2),\n        }}\n        keyboardShouldPersistTaps=\"handled\"\n        style={{\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Card>\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"border\"\n            type=\"h4\"\n          />\n          <Input\n            containerStyle={{ paddingBottom: spacing(2) }}\n            error={form.error}\n            onChangeText={handleChange('name')}\n            optional\n            placeholder=\"jane doe\"\n            title=\"Name\"\n            value={form.name}\n          />\n          <Input\n            containerStyle={{ paddingBottom: spacing(2) }}\n            error={form.error}\n            keyboardType=\"email-address\"\n            onChangeText={handleChange('email')}\n            placeholder=\"example@gmail.com\"\n            textContentType=\"username\"\n            title=\"Email\"\n            value={form.email}\n          />\n          <Input\n            containerStyle={{ paddingBottom: spacing(2) }}\n            onChangeText={handleChange('password')}\n            placeholder=\"•••••••\"\n            secureTextEntry\n            textContentType=\"password\"\n            title=\"Password\"\n            value={form.password}\n          />\n          <Button\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            onPress={handleSubmit}\n            title=\"complete form\"\n          />\n        </Card>\n        <Card>\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"non border\"\n            type=\"h4\"\n          />\n          <Spacing padding={2} />\n          <TextInput\n            autoCapitalize=\"words\"\n            autoComplete=\"name\"\n            autoCorrect\n            blurOnSubmit\n            editable={!form.loading}\n            keyboardType=\"default\"\n            onChangeText={handleChange('name')}\n            onSubmitEditing={handleOnSubmit}\n            placeholder=\"jane doe\"\n            returnKeyType=\"next\"\n            textContentType=\"none\"\n            value={form.name}\n          />\n          <Spacing padding={2} />\n          <TextInput\n            autoCapitalize=\"none\"\n            autoComplete=\"username\"\n            autoCorrect={false}\n            blurOnSubmit\n            editable={!form.loading}\n            keyboardType=\"email-address\"\n            onChangeText={handleChange('email')}\n            onSubmitEditing={handleOnSubmit}\n            placeholder=\"example@gmail.com\"\n            returnKeyType=\"next\"\n            textContentType=\"username\"\n            value={form.email}\n          />\n          <Spacing padding={2} />\n          <TextInput\n            autoCapitalize=\"none\"\n            autoComplete=\"password\"\n            autoCorrect={false}\n            blurOnSubmit\n            editable={!form.loading}\n            keyboardType=\"default\"\n            onChangeText={handleChange('password')}\n            onSubmitEditing={handleOnSubmit}\n            placeholder=\"•••••••\"\n            returnKeyType=\"next\"\n            secureTextEntry\n            textContentType=\"password\"\n            value={form.password}\n          />\n          <Spacing padding={2} />\n          <Button\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            onPress={handleSubmit}\n            title=\"complete form\"\n          />\n        </Card>\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport {\n  Icon,\n  IconName,\n  Text,\n  TouchableOpacity,\n  View,\n} from '../../../../../components';\nimport { spacing, useColors } from '../../../../../features';\n\ntype Props = {\n  active?: boolean;\n  description?: string;\n  hidden?: boolean;\n  icon?: IconName;\n  marginBottom?: boolean;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  title: string;\n};\nexport const Item = memo(function ReminderItem({\n  title,\n  description = '',\n  onPress,\n  icon,\n  style,\n  hidden,\n  active,\n  marginBottom,\n}: Props) {\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    button: {\n      borderColor: colors.border.primaryA,\n      borderRadius: spacing(1),\n      borderWidth: 1,\n      flexDirection: 'row',\n      height: spacing(13),\n      justifyContent: 'space-between',\n      marginBottom: marginBottom ? spacing(2) : 0,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingHorizontal: spacing(2),\n    },\n    icon: {\n      justifyContent: 'center',\n    },\n    subtitle: {\n      paddingLeft: 1,\n      paddingTop: spacing(1),\n    },\n    textContainer: {\n      flex: 1,\n      justifyContent: 'center',\n    },\n    title: {\n      color: active ? colors.text.accent : colors.text.primaryA,\n    },\n  });\n\n  return hidden ? null : (\n    <TouchableOpacity\n      key={title}\n      onPress={onPress}\n      style={[styles.button, style]}\n    >\n      <View style={styles.container}>\n        <View style={styles.textContainer}>\n          <Text\n            style={styles.title}\n            title={title}\n            type=\"body1\"\n          />\n          {description.length > 0 && (\n            <Text\n              style={styles.subtitle}\n              title={description}\n              type=\"caption\"\n            />\n          )}\n        </View>\n        {icon ? (\n          <Icon\n            name={icon}\n            size={spacing(5)}\n            style={styles.icon}\n          />\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { v4 } from 'uuid';\nimport { Item } from './Item';\n\ntype LocationItem = {\n  id: string;\n  subtitle?: string;\n  title: string;\n};\n\ntype Props = {\n  onPress: (value: string) => () => void;\n};\n\nexport const Location = memo(function Location({ onPress }: Props) {\n  const subtitle = 'Tap to add';\n  const locations: LocationItem[] = [\n    {\n      id: v4(),\n      subtitle,\n      title: 'Home',\n    },\n    {\n      id: v4(),\n      subtitle,\n      title: 'Work',\n    },\n    {\n      id: v4(),\n      subtitle,\n      title: 'Gym',\n    },\n    {\n      id: v4(),\n      title: 'Add a new location',\n    },\n  ];\n\n  const onItemPress = useCallback((index: string) => onPress(index), [onPress]);\n\n  return (\n    <>\n      {locations.map((location, index) => (\n        <Item\n          description={location.subtitle}\n          key={location.id}\n          marginBottom={index !== locations.length - 1}\n          onPress={onItemPress(location.id)}\n          title={location.title}\n        />\n      ))}\n    </>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\nimport React, { memo } from 'react';\nimport { Item } from './Item';\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst generateButtons = () => {\n  const laterToday = dayjs().add(3, 'hour').add(30, 'minute').set('minute', 0);\n\n  const evening = dayjs().set('hour', 18).set('minute', 0);\n\n  const tomorrow = dayjs().add(1, 'day').set('hour', 6).set('minute', 0);\n\n  const nextWeek = dayjs()\n    .add(1, 'week')\n    .set('hour', 6)\n    .set('minute', 0)\n    .set('day', 1);\n\n  const nextMonth = dayjs().add(2, 'month').set('hour', 6).set('minute', 0);\n\n  const yesterday = dayjs().subtract(1, 'day');\n\n  return [\n    {\n      description: laterToday.format('hh:mm A'),\n      title: 'Later today',\n      value: laterToday,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      description: evening.format('hh:mm A'),\n      title: 'This Evening',\n      value: evening,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        'hh:mm A',\n      )}`,\n      title: 'Tomorrow',\n      value: tomorrow,\n    },\n    {\n      description: `${nextWeek.format('MMM DD, hh:mm A')}`,\n      title: 'Next Week',\n      value: nextWeek,\n    },\n    {\n      description: '',\n      title: 'Someday',\n      value: nextMonth,\n    },\n    {\n      description: '',\n      title: 'Custom',\n      value: yesterday,\n    },\n  ];\n};\n\ntype Props = {\n  onPress: (value: Dayjs) => () => void;\n};\n\nexport const OneTime = memo(function OneTime({ onPress }: Props) {\n  const buttons = generateButtons();\n  return (\n    <>\n      {buttons.map((button, index) => {\n        const hidden =\n          button.visible && dayjs().valueOf() > button.visible.valueOf();\n        return (\n          <Item\n            description={button.description}\n            hidden={hidden}\n            icon=\"alarm\"\n            key={button.title}\n            marginBottom={index !== buttons.length - 1}\n            onPress={onPress(button.value)}\n            title={button.title}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from '../../../../../components';\nimport { Item } from './Item';\nimport { ReminderType } from './types';\n\ntype Props = {\n  buttons: ReminderType[];\n  horizontal?: boolean;\n  onChange: (id: ReminderType) => () => void;\n  value: ReminderType;\n};\n\nexport const Radio = memo(function Radio({\n  buttons,\n  value,\n  onChange,\n  horizontal,\n}: Props) {\n  return (\n    <View\n      style={{\n        flexDirection: horizontal ? 'row' : 'column',\n        justifyContent: 'center',\n      }}\n    >\n      {buttons.map((button, index) => (\n        <Item\n          active={button === value}\n          key={button}\n          marginBottom={index !== buttons.length - 1}\n          onPress={onChange(button)}\n          title={button}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo, useState } from 'react';\nimport { Item } from './Item';\n\ntype RepeatType = 'Daily' | 'Weekly' | 'Monthly' | 'Yearly';\n\nexport const Repeat = memo(function Repeat() {\n  const [active, setActive] = useState<RepeatType>('Daily');\n  const onPress = (type: RepeatType) => () => setActive(type);\n\n  const items: RepeatType[] = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\n  return (\n    <>\n      {items.map((item, index) => {\n        return (\n          <Item\n            active={item === active}\n            key={item}\n            marginBottom={index !== items.length - 1}\n            onPress={onPress(item)}\n            title={item}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import { Dayjs } from 'dayjs';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Alert, StyleSheet } from 'react-native';\nimport { Button, Modal, Text } from '../../../../../components';\nimport { spacing } from '../../../../../features';\nimport { Location } from './Location';\nimport { OneTime } from './OneTime';\nimport { Radio } from './Radio';\nimport { Repeat } from './Repeat';\nimport { ReminderType } from './types';\n\nconst reminderTypes: ReminderType[] = ['one time', 'repeat', 'location'];\n\ntype Props = {\n  onBackgroundPress: () => void;\n  onLocationPress: (id: string) => () => void;\n  onOneTimePress: (date: Dayjs) => () => void;\n};\n\nexport const Create = memo(function Create({\n  onBackgroundPress,\n  onOneTimePress,\n  onLocationPress,\n}: Props) {\n  const [state, setState] = useState<ReminderType>('one time');\n  const styles = StyleSheet.create({\n    section: {\n      paddingBottom: spacing(2),\n      paddingTop: spacing(6),\n    },\n    submit: {\n      marginTop: spacing(6),\n    },\n  });\n\n  const handleReminderTypePress = useCallback(\n    (type: ReminderType) => () => setState(type),\n    [],\n  );\n\n  const handlePress = useCallback(() => Alert.alert('here'), []);\n\n  return (\n    <Modal\n      onBackgroundPress={onBackgroundPress}\n      showOverlay\n    >\n      <Text\n        title=\"Create Reminder\"\n        type=\"h4\"\n      />\n      <Text\n        style={styles.section}\n        title=\"Reminder type\"\n        type=\"overline\"\n      />\n      <Radio\n        buttons={reminderTypes}\n        onChange={handleReminderTypePress}\n        value={state}\n      />\n      <Text\n        style={styles.section}\n        title=\"Reminder time\"\n        type=\"overline\"\n      />\n      {state === 'one time' ? (\n        <OneTime onPress={onOneTimePress} />\n      ) : state === 'repeat' ? (\n        <Repeat />\n      ) : (\n        <Location onPress={onLocationPress} />\n      )}\n      <Button\n        buttonStyle={styles.submit}\n        color=\"accent\"\n        disabled\n        emphasis=\"high\"\n        onPress={handlePress}\n        title=\"submit\"\n      />\n    </Modal>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\nimport React, { useCallback, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { Modal, Text } from '../../../../../components';\nimport { Create } from './Create';\nimport { Reminder, ReminderType } from './types';\n\ntype State = {\n  modals: {\n    createReminder: boolean;\n    customDate: boolean;\n    location: boolean;\n  };\n  reminders: Reminder[];\n  selected: {\n    location: string | undefined;\n  };\n  type: ReminderType;\n};\n\ntype Props = {\n  onComplete: () => void;\n};\n\nexport const Reminders = ({ onComplete }: Props) => {\n  const [form, setForm] = useState<State>({\n    modals: {\n      createReminder: true,\n      customDate: false,\n      location: false,\n    },\n    reminders: [],\n    selected: {\n      location: undefined,\n    },\n    type: 'one time',\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm((prev) => ({\n          ...prev,\n          modals: { ...prev.modals, customDate: true },\n        }));\n        return;\n      }\n      setForm((prev) => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false,\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            date: date.valueOf(),\n            format: date.format('MMM DD, YYYY hh:mm A'),\n            id: v4(),\n          },\n        ],\n      }));\n      onComplete();\n    },\n    [onComplete],\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, customDate: false },\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: false },\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm((prev) => ({\n        ...prev,\n        modals: { ...prev.modals, location: true },\n        selected: { location: id },\n      }));\n    },\n    [],\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, location: false },\n    }));\n  }, []);\n\n  return (\n    <>\n      {form.modals.createReminder ? (\n        <Create\n          onBackgroundPress={handleCreateReminderClose}\n          onLocationPress={handleLocation}\n          onOneTimePress={handleOneTimeReminder}\n        />\n      ) : null}\n      {form.modals.customDate ? (\n        <Modal\n          onBackgroundPress={handleCustomDateClose}\n          showOverlay\n        >\n          <Text title=\"hello\" />\n        </Modal>\n      ) : null}\n      {form.modals.location ? (\n        <Modal\n          onBackgroundPress={handleLocationClose}\n          showOverlay\n        >\n          <Text title=\"location\" />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  Input,\n  Loading,\n  Modal,\n  Notification,\n  Screen,\n  ScrollView,\n  Text,\n} from '../../../../components';\nimport { RateApp, spacing, useColors } from '../../../../features';\nimport { Reminders } from './Reminders';\n\ntype Modal =\n  | 'alert'\n  | 'modal-large'\n  | 'modal-small'\n  | 'modal-keyboard'\n  | 'reminder'\n  | 'action-sheet'\n  | 'notification'\n  | 'loading'\n  | 'login'\n  | 'rate-app'\n  | null;\n\ntype ModalManagerProps = {\n  modal: Modal;\n  onClose: (modal: Modal) => () => void;\n};\n\nconst ModalManager = memo(function ModalManager({\n  modal,\n  onClose,\n}: ModalManagerProps) {\n  const handleClose = useCallback(() => {\n    onClose(null)();\n  }, [onClose]);\n  const [value, setValue] = useState<string>('');\n  const handleTextChange = useCallback((v: string) => setValue(v), []);\n\n  switch (modal) {\n    case 'rate-app':\n      return <RateApp onComplete={handleClose} />;\n    case 'reminder':\n      return <Reminders onComplete={handleClose} />;\n    case 'alert':\n      return (\n        <Alert\n          description=\"do not do this\"\n          onBackgroundPress={handleClose}\n          onCancelPress={handleClose}\n          onConfirmPress={handleClose}\n          title=\"warning\"\n        />\n      );\n    case 'modal-small':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text title=\"Hello\" />\n        </Modal>\n      );\n    case 'modal-large':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text\n            title=\"Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello\"\n            type=\"h1\"\n          />\n        </Modal>\n      );\n    case 'modal-keyboard':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text\n            title=\"hello hello hello hello\"\n            type=\"h1\"\n          />\n\n          <Input\n            onChangeText={handleTextChange}\n            title=\"hello\"\n            value={value}\n          />\n        </Modal>\n      );\n    case 'loading':\n      return <Loading onBackgroundPress={handleClose} />;\n    case 'notification':\n      return (\n        <Notification\n          onCancel={handleClose}\n          title=\"bob\"\n        />\n      );\n    default:\n      return null;\n  }\n});\n\nexport const Modals = memo(function Modals() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [modal, setModal] = useState<Modal>(null);\n  const handleModalChange = useCallback(\n    (nextModal: Modal) => () => setModal(nextModal),\n    [],\n  );\n\n  return (\n    <>\n      <Screen\n        dropShadow\n        onLeftPress={goBack}\n        title=\"Reminder\"\n      >\n        <ScrollView\n          contentContainerStyle={{ padding: spacing(4) }}\n          style={{ backgroundColor: colors.background.secondary }}\n        >\n          <Text\n            emphasis=\"low\"\n            title=\"Components\"\n            type=\"h4\"\n          />\n          <Button\n            onPress={handleModalChange('loading')}\n            title=\"loading\"\n          />\n          <Button\n            onPress={handleModalChange('action-sheet')}\n            title=\"action sheet ❌ need to build\"\n          />\n          <Button\n            onPress={handleModalChange('notification')}\n            title=\"notification ❌ missing background\"\n          />\n          <Button\n            onPress={handleModalChange('alert')}\n            title=\"alert\"\n          />\n          <Button\n            onPress={handleModalChange('modal-large')}\n            title=\"Modal large\"\n          />\n          <Button\n            onPress={handleModalChange('modal-small')}\n            title=\"Modal small\"\n          />\n          <Button\n            onPress={handleModalChange('modal-keyboard')}\n            title=\"Modal keyboard\"\n          />\n          <Text\n            emphasis=\"low\"\n            title=\"Features\"\n            type=\"h4\"\n          />\n          <Button\n            onPress={handleModalChange('reminder')}\n            title=\"Reminder ❌ incomplete\"\n          />\n          <Button\n            onPress={handleModalChange('rate-app')}\n            title=\"Rate app ✅\"\n          />\n          <Button\n            onPress={handleModalChange('login')}\n            title=\"login ❌ incomplete\"\n          />\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"Reminders\"\n            type=\"h4\"\n          />\n          {/* {form.reminders.map((reminder, index) => (\n            <Text\n              key={reminder.id}\n              title={reminder.format}\n              type={index === form.reminders.length - 1 ? 'button' : undefined}\n            />\n          ))} */}\n        </ScrollView>\n      </Screen>\n      <ModalManager\n        modal={modal}\n        onClose={handleModalChange}\n      />\n      {/* {showRate && <RateApp onComplete={handleRate(false)} />}\n      {form.modals.createReminder && (\n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onLocationPress={handleLocation}\n          onOneTimePress={handleOneTimeReminder}\n        />\n      )}\n      {form.modals.customDate && (\n        <Modal onBackgroundPress={handleCustomDateClose} showOverlay>\n          <Text title=\"hello\" />\n        </Modal>\n      )}\n      {form.modals.location && (\n        <Modal onBackgroundPress={handleLocationClose} showOverlay>\n          <Text title=\"location\" />\n        </Modal>\n      )} */}\n    </>\n  );\n});\n","import { ContentSections } from '../../../../components';\n\nconst onPress = (): void => undefined;\n\nexport const data: ContentSections = [\n  {\n    paragraphs: [[{ title: 'best way to get your life together' }]],\n    title: 'h1 title',\n    titleType: 'h1',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph1' },\n        { onPress, title: 'nav here' },\n        { title: 'blah asd blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph1' },\n        { onPress, title: 'nav here' },\n        {\n          title:\n            'blah blah da donas odinasod nasn asd. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h2 title',\n    titleType: 'h2',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph2' },\n        { onPress, title: 'nav here' },\n        { title: 'blah bldah blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph2' },\n        { onPress, title: 'nav here' },\n        {\n          title:\n            'blah blah da donas s nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n      [\n        { title: 'third paragraph2' },\n        { onPress, title: 'nav here' },\n        {\n          title:\n            'blah blah da donas sa nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h3 title',\n    titleType: 'h3',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph3' },\n        { onPress, title: 'nav here' },\n        { title: 'blah bldah blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph3' },\n        { onPress, title: 'nav here' },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n      [\n        { title: 'third paragraph3' },\n        { onPress, title: 'nav here' },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h4 title',\n    titleType: 'h4',\n  },\n];\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Card, Content, Screen, ScrollView } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { data } from './data';\n\nexport const Paragraphs = memo(function Paragraphs() {\n  const { goBack } = useNavigation();\n\n  const colors = useColors();\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Paragraphs\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          paddingHorizontal: spacing(4),\n          paddingVertical: spacing(2),\n        }}\n        keyboardShouldPersistTaps=\"handled\"\n        showsVerticalScrollIndicator={false}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card>\n          <Content sections={data} />\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","// TODO: slider on web\nimport { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Image, ImageSourcePropType, ListRenderItem } from 'react-native';\nimport {\n  Button,\n  Card,\n  Masonry,\n  Screen,\n  ScrollView,\n  Slider,\n  Text,\n  View,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport {\n  changeTheme,\n  getLandscapeOrientation,\n  Theme,\n  themes,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\n\ntype CardItem = {\n  button?: string;\n  chart?: ImageSourcePropType;\n  target?: string;\n  title: string;\n  value: string;\n};\n\nconst image =\n  require('../../../../assets/placeholder.png') as ImageSourcePropType;\nconst cards: CardItem[] = [\n  {\n    title: 'Marketing',\n    value: '12.4 M',\n  },\n  {\n    target: '+22% of target',\n    title: 'Conversion',\n    value: '537',\n  },\n  {\n    chart: image,\n    target: '+12.3 of target',\n    title: 'Conversion',\n    value: '42.1 M',\n  },\n  {\n    chart: image,\n    target: '11% of target',\n    title: 'Sales',\n    value: '35.8 M',\n  },\n  {\n    button: 'view',\n    title: 'Users',\n    value: '45.5 M',\n  },\n  {\n    target: '+56.6% of target',\n    title: 'Avg session',\n    value: '4:53 H',\n  },\n  {\n    title: 'Sessions',\n    value: '23.242',\n  },\n  {\n    title: 'Bounce rate',\n    value: '12%',\n  },\n  {\n    button: 'view',\n    target: '+45.1 of target',\n    title: 'Churn',\n    value: '8%',\n  },\n  {\n    title: 'Spend',\n    value: '18.4 M',\n  },\n];\n\nexport const Themes = memo(function Themes() {\n  const dispatch = useRootDispatch();\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const currentTheme = useRootSelector((state) => state.theme.currentTheme);\n  const themePress = (theme: Theme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(2);\n  const handleSlider = useCallback((value: number) => setElevation(value), []);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const columns = landscape ? 5 : 2;\n  const onPress = useCallback(() => undefined, []);\n\n  const renderItem = useCallback<ListRenderItem<CardItem>>(\n    ({ item, index }) => (\n      <Card\n        elevation={elevation}\n        key={index}\n        onPress={onPress}\n      >\n        <Text\n          title={item.title}\n          type=\"overline\"\n        />\n        <Text\n          style={{ marginTop: spacing(2) }}\n          title={item.value}\n          type=\"h4\"\n        />\n        {item.target ? (\n          <Text\n            style={{ marginTop: spacing(2) }}\n            title={item.target}\n            type=\"body2\"\n          />\n        ) : null}\n        {item.chart ? (\n          <Image\n            source={item.chart}\n            style={{\n              height: 100,\n              marginTop: spacing(2),\n              resizeMode: 'cover',\n              width: '100%',\n            }}\n          />\n        ) : null}\n        {item.button ? (\n          <Button\n            buttonStyle={{ marginTop: spacing(2) }}\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            onPress={onPress}\n            title={item.button}\n          />\n        ) : null}\n      </Card>\n    ),\n    [elevation, onPress],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Dark mode\"\n    >\n      <ScrollView style={{ backgroundColor: colors.background.primaryA }}>\n        <View style={{ padding: spacing(4) }}>\n          <View\n            style={{\n              alignItems: 'center',\n              flexDirection: 'row',\n            }}\n          >\n            <Text title=\"theme: \" />\n            {themes.map((item) => (\n              <Button\n                color={currentTheme === item ? 'positive' : 'primaryA'}\n                emphasis=\"low\"\n                key={item}\n                onPress={themePress(item)}\n                title={item}\n              />\n            ))}\n          </View>\n          <Text title={`elevation: ${elevation}`} />\n          <Slider\n            maximumValue={10}\n            minimumTrackTintColor={colors.background.accent}\n            minimumValue={0}\n            onValueChange={handleSlider}\n            step={1}\n            value={elevation}\n          />\n        </View>\n        <Text\n          center\n          title=\"Weekly Stats\"\n          type=\"h2\"\n        />\n        <Masonry\n          data={cards}\n          numColumns={columns}\n          renderItem={renderItem}\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const AppleFit = memo(function PlaygroundAppleFit() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Apple Fit\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Image, ImageSourcePropType } from 'react-native';\nimport { Screen, ScrollView, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { getWidth, useRootSelector } from '../../../../redux';\n\n// https://support.apple.com/en-us/HT211028\n\ntype SectionProps = {\n  description?: string;\n  image?: ImageSourcePropType;\n  imageRatio?: number;\n  index: number;\n  paddingHorizontal: number;\n  title: string;\n};\n\nconst Section = ({\n  index,\n  title,\n  description,\n  image,\n  paddingHorizontal,\n  imageRatio = 0,\n}: SectionProps) => {\n  const colors = useColors();\n  const width = useRootSelector(getWidth);\n  const leftWidth = spacing(12);\n  const imageWidth = width - leftWidth - 2 * paddingHorizontal;\n  return (\n    <View\n      style={{\n        borderBottomColor: colors.border.tertiary,\n        borderBottomWidth: 2,\n        paddingVertical: spacing(8),\n      }}\n    >\n      <View row>\n        <Text\n          color=\"accent\"\n          style={{ width: leftWidth }}\n          title={String(index)}\n          type=\"h2\"\n        />\n        <View flex>\n          <Text\n            style={{ marginBottom: spacing(4) }}\n            title={title}\n            type=\"h5\"\n          />\n          <Text\n            style={{ marginBottom: spacing(4) }}\n            title={description}\n            type=\"subtitle1\"\n          />\n          {image ? (\n            <Image\n              source={image}\n              style={{\n                flex: 1,\n                height: imageWidth / imageRatio,\n                width: imageWidth,\n              }}\n            />\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const AppleMask = memo(function AppleMask() {\n  const { goBack } = useNavigation();\n\n  const sections = [\n    {\n      description: 'Either side of the face shield can act as the front.',\n      image: require('./one.png'),\n      imageRatio: 1560 / 750,\n      title: 'Align your preferred slots on the face shield and forehead band',\n    },\n    {\n      image: require('./two.gif'),\n      imageRatio: 1560 / 1750,\n      title:\n        'Remove thin protective films from the face shield and forehead band by peeling from either edge',\n    },\n    {\n      image: require('./three.gif'),\n      imageRatio: 1560 / 950,\n      title: 'Thread the strap through the slots and pull to adjust',\n    },\n    { title: 'Repeat on other side' },\n    {\n      image: require('./four.gif'),\n      imageRatio: 1560 / 950,\n      title: 'Adjust your face shield',\n    },\n    {\n      title:\n        'Wear the face shield in addition to other personal protective equipment',\n    },\n  ];\n\n  const colors = useColors();\n  const paddingHorizontal = spacing(4);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Apple Mask\"\n    >\n      <ScrollView\n        style={{\n          backgroundColor: colors.background.secondary,\n          paddingHorizontal: spacing(4),\n        }}\n      >\n        <Text\n          title=\"Assemble and adjust your Face Shield\"\n          type=\"h2\"\n        />\n        <Text\n          style={{ paddingTop: spacing(4) }}\n          title=\"To assemble your face shield, follow these steps.\"\n          type=\"subtitle1\"\n        />\n        {sections.map(({ title, description, image, imageRatio }, index) => (\n          <Section\n            description={description}\n            image={image}\n            imageRatio={imageRatio}\n            index={index + 1}\n            key={title}\n            paddingHorizontal={paddingHorizontal}\n            title={title}\n          />\n        ))}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React, { memo, useCallback } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text, TouchableOpacity, View } from '../../../../components';\nimport { MonoMultiColor, useColors } from '../../../../features';\n\ntype RoundButtonProps = {\n  background: string;\n  color: keyof MonoMultiColor;\n  disabled?: boolean;\n  onPress(): void;\n  title: string;\n};\n\nexport const ButtonRound = memo(function ButtonRound({\n  title,\n  color,\n  background,\n  onPress,\n  disabled = false,\n}: RoundButtonProps) {\n  const colorScheme = useColors();\n  const styles = StyleSheet.create({\n    button: {\n      alignItems: 'center',\n      backgroundColor: background,\n      borderRadius: 40,\n      height: 80,\n      justifyContent: 'center',\n      width: 80,\n    },\n    buttonBorder: {\n      alignItems: 'center',\n      borderColor: colorScheme.background.primaryB,\n      borderRadius: 38,\n      borderWidth: 1,\n      height: 76,\n      justifyContent: 'center',\n      width: 76,\n    },\n    buttonTitle: {\n      fontSize: 18,\n    },\n  });\n\n  const handlePress = useCallback(\n    () => !disabled && onPress(),\n    [onPress, disabled],\n  );\n\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      onPress={handlePress}\n      style={styles.button}\n    >\n      <View style={styles.buttonBorder}>\n        <Text\n          color={color}\n          style={styles.buttonTitle}\n          title={title}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { View } from '../../../../components';\n\ntype ButtonRowProps = {\n  children: ReactNode | ReactNode[];\n};\n\nexport const ButtonsRow = memo(function ButtonsRow({\n  children,\n}: ButtonRowProps) {\n  const styles = StyleSheet.create({\n    buttonsRow: {\n      alignSelf: 'stretch',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      marginTop: 80,\n    },\n  });\n  return <View style={styles.buttonsRow}>{children}</View>;\n});\n","import React, { memo } from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\nimport { Text, View } from '../../../../components';\n\ntype TimerProps = {\n  interval: number;\n  style: StyleProp<TextStyle>;\n};\n\nexport const Timer = memo(function Timer({ interval, style }: TimerProps) {\n  const pad = (n: number): string =>\n    (n < 10 ? `0${n.toString()}` : n).toString();\n  const minutes = Math.floor(interval / 60000);\n  const seconds = Math.floor((interval % 60000) / 1000);\n  const milliseconds = Math.floor((interval % 60000) % 1000);\n  const styles = StyleSheet.create({\n    timerContainer: {\n      flexDirection: 'row',\n    },\n  });\n  return (\n    <View style={styles.timerContainer}>\n      <Text\n        style={style}\n        title={`${pad(minutes)}:`}\n      />\n      <Text\n        style={style}\n        title={`${pad(seconds)}.`}\n      />\n      <Text\n        style={style}\n        title={pad(milliseconds).substr(0, 2)}\n      />\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text, View } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { Timer } from './Timer';\n\ntype LapProps = {\n  fastest: boolean;\n  interval: number;\n  num: number;\n  slowest: boolean;\n};\n\nexport const Lap = memo(function Lap({\n  num,\n  interval,\n  fastest,\n  slowest,\n}: LapProps) {\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    fastest: {\n      color: colors.text.positive,\n    },\n    lap: {\n      borderColor: colors.border.secondary,\n      borderTopWidth: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingVertical: 10,\n    },\n    lapText: {\n      color: colors.text.primaryB,\n      fontFamily: 'Courier',\n      fontSize: 18,\n    },\n    slowest: {\n      color: colors.text.negative,\n    },\n  });\n  const lapStyle = [\n    styles.lapText,\n    fastest ? styles.fastest : undefined,\n    slowest ? styles.slowest : undefined,\n  ];\n\n  return (\n    <View style={styles.lap}>\n      <Text\n        style={lapStyle}\n        title={`Lap ${num}`}\n      />\n      <Timer\n        interval={interval}\n        style={lapStyle}\n      />\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { v4 } from 'uuid';\nimport { ScrollView } from '../../../../components';\nimport { Lap } from './Lap';\n\ntype LapTableProps = {\n  laps: number[];\n  timer: number;\n};\n\nexport const LapsTable = memo(function LapsTable({\n  laps,\n  timer,\n}: LapTableProps) {\n  const finishedLaps = laps.slice(1);\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  if (finishedLaps.length >= 2)\n    finishedLaps.forEach((lap) => {\n      if (lap < min) min = lap;\n\n      if (lap > max) max = lap;\n    });\n\n  const styles = StyleSheet.create({\n    scrollView: {\n      alignSelf: 'stretch',\n    },\n  });\n  return (\n    <ScrollView style={styles.scrollView}>\n      {laps.map((lap, index) => (\n        <Lap\n          fastest={lap === min}\n          interval={index === 0 ? timer + lap : lap}\n          key={v4()}\n          num={laps.length - index}\n          slowest={lap === max}\n        />\n      ))}\n    </ScrollView>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { ButtonRound } from './ButtonRound';\nimport { ButtonsRow } from './ButtonsRow';\nimport { LapsTable } from './LapsTable';\nimport { Timer } from './Timer';\n\ntype State = {\n  laps: number[];\n  now: number;\n  start: number;\n};\n\nexport const AppleStopWatch = memo(function AppleStopWatch() {\n  const { goBack } = useNavigation();\n  const [state, setState] = useState<State>({\n    laps: [],\n    now: 0,\n    start: 0,\n  });\n  const timer = useRef<ReturnType<typeof setInterval> | null>(null);\n  const elapsed = state.now - state.start;\n  const interval =\n    state.laps.reduce((total, curr) => total + curr, 0) + elapsed;\n  const colors = useColors();\n\n  const styles = StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      backgroundColor: colors.background.primaryB,\n      flex: 1,\n      paddingHorizontal: 20,\n      paddingTop: 130,\n    },\n    timer: {\n      color: colors.text.primaryB,\n      fontFamily: 'Courier',\n      fontSize: 54,\n      fontWeight: '200',\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      if (timer.current) clearTimeout(timer.current);\n    };\n  }, [timer]);\n\n  const lap = useCallback(() => {\n    const timestamp = new Date().getTime();\n    const { laps, now, start } = state;\n    const [firstLap, ...other] = laps;\n    setState({\n      laps: [0, firstLap + now - start, ...other],\n      now: timestamp,\n      start: timestamp,\n    });\n  }, [state]);\n\n  const stop = useCallback(() => {\n    if (timer.current) clearInterval(timer.current);\n\n    const { laps, now, start } = state;\n    const [firstLap, ...other] = laps;\n    setState({ laps: [firstLap + now - start, ...other], now: 0, start: 0 });\n  }, [timer, state]);\n\n  const reset = useCallback(() => {\n    setState({ laps: [], now: 0, start: 0 });\n  }, []);\n\n  const run = useCallback(() => {\n    timer.current = setInterval(() => {\n      setState((prev) => ({ ...prev, now: new Date().getTime() }));\n    }, 100);\n  }, []);\n\n  const start = useCallback(() => {\n    const now = new Date().getTime();\n    setState({ laps: [0], now, start: now });\n    run();\n  }, [run]);\n\n  const resume = useCallback(() => {\n    const now = new Date().getTime();\n    setState((prev) => ({\n      ...prev,\n      now,\n      start: now,\n    }));\n    run();\n  }, [run]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Stop Watch\"\n    >\n      <View style={styles.container}>\n        <Timer\n          interval={interval}\n          style={styles.timer}\n        />\n        {state.laps.length === 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.disabled}\n              color=\"disabled\"\n              disabled\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background={colors.background.positive}\n              color=\"primaryA\"\n              onPress={start}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        )}\n        {state.start > 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.disabled}\n              color=\"primaryA\"\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background={colors.background.negative}\n              color=\"primaryA\"\n              onPress={stop}\n              title=\"Stop\"\n            />\n          </ButtonsRow>\n        )}\n        {state.laps.length > 0 && state.start === 0 ? (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.negative}\n              color=\"primaryA\"\n              onPress={reset}\n              title=\"Reset\"\n            />\n            <ButtonRound\n              background={colors.background.positive}\n              color=\"primaryA\"\n              onPress={resume}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        ) : null}\n        <LapsTable\n          laps={state.laps}\n          timer={elapsed}\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { Button, Screen, View } from '../../../../components';\nimport { spacing, useColors, useDriver } from '../../../../features';\nimport { getHeight, getWidth, useRootSelector } from '../../../../redux';\n\nexport const Ball = memo(function PlaygroundBall() {\n  const height = useRootSelector(getHeight);\n  const width = useRootSelector(getWidth);\n  const { goBack } = useNavigation();\n  const ballPosition = useRef(\n    new Animated.ValueXY({ x: width / 2, y: height / 2 }),\n  ).current;\n  const useNativeDriver = useDriver();\n  const colors = useColors();\n  const size = spacing(8);\n  const styles = StyleSheet.create({\n    ball: {\n      borderRadius: size,\n      borderWidth: size,\n      height: size * 2,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size * 2,\n    },\n    buttons: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n    },\n  });\n  const animate = useCallback(\n    (dx: number, dy: number) => {\n      Animated.spring(ballPosition, {\n        toValue: { x: width * dx, y: height * dy },\n        useNativeDriver,\n      }).start();\n    },\n    [ballPosition, height, useNativeDriver, width],\n  );\n  const onInitialPress = useCallback(() => animate(0.5, 0.5), [animate]);\n  const onRandomPress = useCallback(\n    () => animate(Math.random(), Math.random()),\n    [animate],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      style={{ backgroundColor: colors.background.secondary }}\n      testID=\"ballScreen\"\n      title=\"Ball\"\n    >\n      <Animated.View\n        style={[ballPosition.getLayout(), styles.ball]}\n        testID=\"ball\"\n      />\n      <View style={styles.buttons}>\n        <Button\n          onPress={onInitialPress}\n          testID=\"initialButton\"\n          title=\"initial\"\n        />\n        <Button\n          onPress={onRandomPress}\n          testID=\"randomButton\"\n          title=\"random\"\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n} from 'react-native';\nimport { Screen, Text, View } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useDriver,\n  useDropShadow,\n} from '../../../../features';\n\nconst getPosition = (\n  gestureState: PanResponderGestureState,\n  initialPosition: { x: number; y: number },\n  size: number,\n) => {\n  const maxY = gestureState.dy - initialPosition.y + size;\n  const minY = gestureState.dy + initialPosition.y - size;\n  const maxX = gestureState.dx - initialPosition.x + size;\n  const minX = gestureState.dx + initialPosition.x - size;\n  const y =\n    minY <= 0\n      ? size\n      : maxY >= 0\n      ? initialPosition.y * 2 - size\n      : initialPosition.y + gestureState.dy;\n  const x =\n    minX <= 0\n      ? size\n      : maxX >= 0\n      ? initialPosition.x * 2 - size\n      : initialPosition.x + gestureState.dx;\n  return { x, y };\n};\n\nexport const Drag = memo(function PlaygroundDrag() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const dropShadow = useDropShadow();\n  const useNativeDriver = useDriver();\n  const [canvas, setCanvas] = useState({ height: 0, width: 0, x: 0, y: 0 });\n  const initialPosition = { x: canvas.width / 2, y: canvas.height / 2 };\n  const size = 30;\n  const styles = StyleSheet.create({\n    ball: {\n      borderRadius: size,\n      borderWidth: size,\n      height: size,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size,\n      ...dropShadow(5),\n    },\n    canvas: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n  const ballPosition: Animated.ValueXY = new Animated.ValueXY(initialPosition);\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderEnd: () => {\n      Animated.spring(ballPosition, {\n        toValue: initialPosition,\n        useNativeDriver,\n      }).start();\n    },\n    onPanResponderMove: (_, gestureState) => {\n      const toValue = getPosition(gestureState, initialPosition, size);\n      Animated.spring(ballPosition, {\n        toValue,\n        useNativeDriver,\n      }).start();\n    },\n  });\n\n  const handleCanvas = useCallback((event: LayoutChangeEvent) => {\n    const { x, y, height, width } = event.nativeEvent.layout;\n    setCanvas({ height, width, x, y });\n  }, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Drag\"\n    >\n      <View\n        onLayout={handleCanvas}\n        style={styles.canvas}\n      >\n        <Text\n          center\n          style={{\n            left: 0,\n            padding: spacing(2),\n            position: 'absolute',\n            right: 0,\n            top: 0,\n          }}\n          title=\"drag the circle\"\n          type=\"overline\"\n        />\n        <Animated.View\n          style={[ballPosition.getLayout(), styles.ball]}\n          {...panGesture.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Card, Screen, ScrollView, Text } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\n\nexport type ItemType =\n  | 'Mission'\n  | 'Vision'\n  | 'Values'\n  | 'KPI'\n  | 'Objective'\n  | 'Key Result'\n  | 'Problem'\n  | 'Idea'\n  | 'Learning';\n\nexport const OKRs = memo(function PlaygroundOKRs() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"OKRs\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: spacing(4) }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card>\n          <Text\n            title=\"Company\"\n            type=\"h6\"\n          />\n          <Card>\n            <Text\n              title=\"Mission\"\n              type=\"h6\"\n            />\n            <Text\n              title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n            />\n          </Card>\n          <Card>\n            <Text\n              title=\"Vision\"\n              type=\"h6\"\n            />\n            <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n          </Card>\n          <Card>\n            <Text\n              title=\"Values\"\n              type=\"h6\"\n            />\n            <Text title=\"Customer Obsession\" />\n            <Text title=\"Ownership\" />\n            <Text title=\"Invent and Simplify\" />\n            <Text title=\"Are Right a Lot\" />\n            <Text title=\"Learn and Be Curious\" />\n            <Text title=\"Hire and Develop the Best\" />\n            <Text title=\"Insist on the Highest Standards\" />\n            <Text title=\"Think Big\" />\n            <Text title=\"Bias for Action\" />\n            <Text title=\"Frugality\" />\n            <Text title=\"Earn Trust\" />\n            <Text title=\"Dive Deep\" />\n            <Text title=\"Have Backbone; Disagree and Commit\" />\n            <Text title=\"Deliver Results\" />\n          </Card>\n        </Card>\n        <Card>\n          <Text\n            title=\"Product\"\n            type=\"h6\"\n          />\n          <Card>\n            <Text\n              title=\"Vision\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n          </Card>\n\n          <Card>\n            <Text\n              title=\"KPIs\"\n              type=\"h6\"\n            />\n            <Text title=\"Customer Lifetime Value\" />\n            <Text title=\"Average Revenue Per user\" />\n            <Text title=\"Customer Aquisition Cost\" />\n            <Text title=\"Monthly Recurring Revenue\" />\n            <Text title=\"Churn\" />\n            <Text title=\"Cost of Sales\" />\n            <Text title=\"Contributing Margins\" />\n          </Card>\n          <Card>\n            <Text\n              title=\"Team\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n            <Text title=\"Bob, designer\" />\n            <Text title=\"Steve, engineer\" />\n            <Text title=\"Greg, engineer\" />\n          </Card>\n\n          <Card>\n            <Text\n              title=\"Objective\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text\n              title=\"Objective\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n          </Card>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { useCallback, useState } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport {\n  Card,\n  FlatList,\n  Icon,\n  Modal,\n  Text,\n  TouchableOpacity,\n  View,\n} from '../../../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../../../redux';\nimport {\n  createQuestionnaire,\n  getQuestionnaireArray,\n  Questionnaire,\n  removeQuestionnaire,\n  selectQuestionnaire,\n} from '../models';\n\nexport const Questionnaires = (): JSX.Element => {\n  const questionnaires = useRootSelector(getQuestionnaireArray);\n  const selected = useRootSelector((state) => state.questionnaires.selected);\n  const [actionSheet, setActionSheet] = useState(false);\n  const dispatch = useRootDispatch();\n  const handleLongPress = useCallback(\n    (id: string) => () => dispatch(removeQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleItemPress = useCallback(\n    (id: string) => () => dispatch(selectQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleActionSheetClose = useCallback(() => setActionSheet(false), []);\n  const handleCreate = useCallback(\n    () => dispatch(createQuestionnaire(String(Date.now()))),\n    [dispatch],\n  );\n  const handleItemMenu = useCallback(() => {\n    setActionSheet((state) => !state);\n  }, []);\n  const renderItem = useCallback<ListRenderItem<Questionnaire>>(\n    ({ item }) => {\n      const { length } = item.questions;\n      const subtitle = `${length} question${length === 1 ? '' : 's'}`;\n      return (\n        <Card\n          onLongPress={handleLongPress(item.id)}\n          onPress={handleItemPress(item.id)}\n          selected={selected === item.id}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}\n          >\n            <View style={{ flex: 0.9 }}>\n              <Text\n                title={item.title}\n                type=\"h3\"\n              />\n              <Text\n                title={subtitle}\n                type=\"caption\"\n              />\n            </View>\n            <TouchableOpacity onPress={handleItemMenu}>\n              <Icon name=\"dots-horizontal\" />\n            </TouchableOpacity>\n          </View>\n        </Card>\n      );\n    },\n    [handleItemMenu, handleItemPress, handleLongPress, selected],\n  );\n\n  const keyExtractor = useCallback((item: Questionnaire) => item.id, []);\n\n  return (\n    <>\n      <FlatList\n        data={questionnaires}\n        extraData={selected}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"handled\"\n        renderItem={renderItem}\n      />\n      <TouchableOpacity onPress={handleCreate}>\n        <Icon\n          color=\"primaryA\"\n          fab\n          name=\"plus\"\n          style={{\n            bottom: 0,\n            margin: 10,\n            position: 'absolute',\n            right: 0,\n          }}\n        />\n      </TouchableOpacity>\n      {actionSheet ? (\n        <Modal onBackgroundPress={handleActionSheetClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport { Dimensions, ListRenderItem, ViewToken } from 'react-native';\nimport {\n  Button,\n  FlatList,\n  FlatListRef,\n  Screen,\n  Text,\n  View,\n} from '../../../../components';\nimport { Questionnaires } from './screens/Questionnaires';\n\ntype Choice = {\n  key: string;\n  selected: boolean;\n  title: string;\n};\ntype Data = {\n  choices?: Choice[];\n  key: string;\n  next?: string;\n  title: string;\n  type: 'radio' | 'button';\n};\n\nconst data: Data[] = [\n  {\n    choices: [\n      {\n        key: '1',\n        selected: false,\n        title: 'individual',\n      },\n      {\n        key: '2',\n        selected: false,\n        title: 'couple',\n      },\n      {\n        key: '3',\n        selected: false,\n        title: 'teen',\n      },\n    ],\n    key: '1',\n    next: '2',\n    title: 'What type of counseling are you looking for',\n    type: 'radio',\n  },\n  { key: '2', title: '2', type: 'button' },\n  { key: '3', title: '3', type: 'button' },\n  { key: '4', title: '4', type: 'button' },\n  { key: '5', title: '5', type: 'button' },\n];\nconst { width } = Dimensions.get('window');\nconst viewabilityConfig = { itemVisiblePercentThreshold: 50 };\n\nexport const Questionnaire = memo(function Questionnaire() {\n  const [output, setOutput] = useState({});\n  const currentIndex = useRef(0);\n  const { goBack } = useNavigation();\n  const tableViewRef = useRef<FlatListRef>(null);\n  const handleViewableItemsChanged = useCallback(\n    ({ viewableItems }: { viewableItems: ViewToken[] }) => {\n      currentIndex.current = viewableItems[0]?.index ?? 0;\n    },\n    [],\n  );\n\n  const onFinish = () => undefined;\n\n  const onProgress = useCallback(\n    (direction = 1) => {\n      const index = currentIndex.current + direction;\n      if (index < 0 || !tableViewRef.current) return;\n\n      if (index >= data.length) {\n        onFinish();\n        return;\n      }\n      tableViewRef.current.scrollToIndex({\n        animated: true,\n        index,\n      });\n    },\n    [currentIndex],\n  );\n\n  const onSelection = useCallback(\n    (item: Data, choice: Choice) => {\n      setOutput({\n        ...output,\n        [item.key]: {\n          [choice.key]: true,\n        },\n      });\n      onProgress();\n    },\n    [onProgress, output],\n  );\n\n  const updateSelection = useCallback(\n    (item: Data, choice: Choice) => () => onSelection(item, choice),\n    [onSelection],\n  );\n\n  const updateProgress = useCallback(\n    (value: number) => () => onProgress(value),\n    [onProgress],\n  );\n\n  const renderItem = useCallback<ListRenderItem<Data>>(\n    ({ item }) => {\n      let items = <View flex />;\n\n      if (item.choices)\n        items = (\n          <View flex>\n            {item.choices.map((choice) => {\n              return (\n                <Button\n                  key={choice.title}\n                  onPress={updateSelection(item, choice)}\n                  title={choice.title}\n                />\n              );\n            })}\n          </View>\n        );\n\n      return (\n        <View style={{ width }}>\n          <Text title={item.title} />\n          {items}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n            }}\n          >\n            <Button\n              onPress={updateProgress(-1)}\n              title=\"prev\"\n            />\n            <Button\n              onPress={updateProgress(1)}\n              title=\"next\"\n            />\n            <Button\n              onPress={updateProgress(2)}\n              title=\"next2\"\n            />\n          </View>\n        </View>\n      );\n    },\n    [updateProgress, updateSelection],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Questionnaire\"\n    >\n      <FlatList\n        data={data}\n        horizontal\n        keyboardShouldPersistTaps=\"handled\"\n        onRef={tableViewRef}\n        onViewableItemsChanged={handleViewableItemsChanged}\n        pagingEnabled\n        removeClippedSubviews\n        renderItem={renderItem}\n        scrollEnabled={false}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        viewabilityConfig={viewabilityConfig}\n      />\n      <Questionnaires />\n    </Screen>\n  );\n});\n","import React, { ReactNode } from 'react';\nimport { Card, Spacing, Text } from '../../../../components';\n\ntype Props = {\n  children: ReactNode;\n  title: string;\n};\n\nexport const Section = ({ title, children }: Props): JSX.Element => {\n  return (\n    <Card>\n      <Text\n        emphasis=\"low\"\n        title={title}\n        type=\"h4\"\n      />\n      <Spacing padding={2} />\n      {children}\n    </Card>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport dayjs from 'dayjs';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Button,\n  Input,\n  KeyboardAwareScrollView,\n  Screen,\n  Spacing,\n  Switch,\n  Text,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { Section } from './Section';\n\n// https://www.startupschool.org/updates/250717/edit\n\ntype Form = {\n  biggestObstacle: string;\n  launchWeeks: string;\n  launched: boolean;\n  morale: string;\n  primaryMetric: string;\n  targetCustomer: string;\n  topGoals: string;\n  usersLearnedFrom: string;\n  usersTalkedTo: string;\n};\n\nconst initialState: Form = {\n  biggestObstacle: '',\n  launchWeeks: '',\n  launched: false,\n  morale: '',\n  primaryMetric: '',\n  targetCustomer: '',\n  topGoals: '',\n  usersLearnedFrom: '',\n  usersTalkedTo: '',\n};\n\nexport const Startup = memo(function PlaygroundStartup() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const [form, setForm] = useState<Form>(initialState);\n  const launchWeeks = parseInt(form.launchWeeks, 10);\n  const launchSubText =\n    launchWeeks >= 5\n      ? \"That's a long way out! Think hard: is there an MVP you could launch earlier?\"\n      : 'Almost there, looking forward to your launch!';\n\n  const updateForm = useCallback(\n    (key: keyof Form, value: string | boolean) =>\n      setForm((state) => ({ ...state, [key]: value })),\n    [],\n  );\n  const handleLaunchChange = useCallback(\n    (value?: boolean) => updateForm('launched', Boolean(value)),\n    [updateForm],\n  );\n  const handleUserChange = useCallback(\n    (value: string) => updateForm('usersTalkedTo', value),\n    [updateForm],\n  );\n  const handleMoraleChange = useCallback(\n    (value: string) => updateForm('morale', value),\n    [updateForm],\n  );\n  const handleObstacleChange = useCallback(\n    (value: string) => updateForm('biggestObstacle', value),\n    [updateForm],\n  );\n  const handleLearnChange = useCallback(\n    (value: string) => updateForm('usersLearnedFrom', value),\n    [updateForm],\n  );\n  const handleMetricChange = useCallback(\n    (value: string) => updateForm('primaryMetric', value),\n    [updateForm],\n  );\n  const handleGoalChange = useCallback(\n    (value: string) => updateForm('topGoals', value),\n    [updateForm],\n  );\n  const handleWeeksToLaunchChange = useCallback(\n    (value: string) => updateForm('launchWeeks', value),\n    [updateForm],\n  );\n\n  const handleSubmit = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Weekly Update\"\n    >\n      <KeyboardAwareScrollView\n        contentContainerStyle={{ padding: spacing(4) }}\n        keyboardShouldPersistTaps=\"handled\"\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Text\n          center\n          title={dayjs().format('MMM DD, YYYY')}\n          type=\"h4\"\n        />\n        <Section title=\"Launch\">\n          <Text title=\"Are you launched?\" />\n          <Switch\n            onValueChange={handleLaunchChange}\n            value={form.launched}\n          />\n          <Spacing padding={2} />\n          <Input\n            keyboardType=\"numeric\"\n            onChangeText={handleWeeksToLaunchChange}\n            title=\"Weeks to launch?\"\n            value={form.launchWeeks}\n          />\n          <Text\n            hidden={launchSubText.length === 0}\n            title={launchSubText}\n          />\n        </Section>\n        <Section title=\"Users\">\n          <Input\n            onChangeText={handleUserChange}\n            title=\"Users/prospective users talked to this week?\"\n            value={form.usersTalkedTo}\n          />\n          <Input\n            onChangeText={handleLearnChange}\n            title=\"What have you learned from them?\"\n            value={form.usersLearnedFrom}\n          />\n        </Section>\n        <Section title=\"Goals\">\n          <Input\n            onChangeText={handleGoalChange}\n            title=\"What are your top 1-3 goals for the next week?\"\n            value={form.topGoals}\n          />\n          <Input\n            onChangeText={handleMetricChange}\n            title=\"What most improved your primary metric?\"\n            value={form.primaryMetric}\n          />\n          <Input\n            onChangeText={handleObstacleChange}\n            title=\"Biggest obstacle?\"\n            value={form.biggestObstacle}\n          />\n        </Section>\n\n        <Section title=\"Morale\">\n          <Input\n            keyboardType=\"numeric\"\n            onChangeText={handleMoraleChange}\n            title=\"On a scale of 1-10, what is your morale?\"\n            value={form.morale} // 1 (we are totally burned out) to 10 (we couldn't be more excited and optimistic!)\n          />\n        </Section>\n        <Spacing padding={2} />\n        <Button\n          center\n          color=\"accent\"\n          emphasis=\"high\"\n          onPress={handleSubmit}\n          title=\"submit\"\n        />\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { useColors } from '../../../../features';\n\nexport const Tinder = memo(function PlaygroundTinder() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.primaryA,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Tinder\"\n    >\n      <View style={styles.container} />\n    </Screen>\n  );\n});\n","import { Animated } from 'react-native';\nimport { LayoutDimensions } from '../../../../features';\n\nexport type Item = {\n  dx: number;\n  dy: number;\n  index: number;\n  mass: number;\n  position: Animated.ValueXY;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst getRandomNumber = (min: number, max: number): number =>\n  Math.random() * (max - min) + min;\n\nconst rotate = (dx: number, dy: number, angle: number) => {\n  return {\n    x: dx * Math.cos(angle) - dy * Math.sin(angle),\n    y: dx * Math.sin(angle) + dy * Math.cos(angle),\n  };\n};\n\nexport const getNextDraw = (item: Item, layout: LayoutDimensions): Item => {\n  const next = { ...item };\n\n  next.x += next.dx;\n  next.y += next.dy;\n\n  const top = next.x - layout.x;\n  if (top <= 0) {\n    next.dx = -next.dx;\n    next.x = 0;\n  }\n  const right = layout.width - layout.x - next.x - next.radius * 2;\n  if (right <= 0) {\n    next.dx = -next.dx;\n    next.x = layout.x + layout.width - next.radius * 2;\n  }\n  const left = next.y - layout.y;\n  if (left <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y;\n  }\n  const bottom = layout.height - layout.y - next.y - next.radius * 2;\n  if (bottom <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y + layout.height - next.radius * 2;\n  }\n\n  return next;\n};\n\ntype GetInitialItemsProps = {\n  count: number;\n  layout: LayoutDimensions;\n  radius: number;\n  speed: number;\n};\n\nexport const getInitialItems = ({\n  count,\n  speed,\n  layout,\n  radius,\n}: GetInitialItemsProps): Item[] => {\n  const items: Item[] = [];\n\n  for (let i = 0; i < count; i++) {\n    const coordinate = {\n      x: getRandomNumber(layout.x, layout.x + layout.width - radius),\n      y: getRandomNumber(layout.y, layout.y + layout.height - radius),\n    };\n    items.push({\n      index: i,\n      ...coordinate,\n      dx: getRandomNumber(-speed, speed),\n      dy: getRandomNumber(-speed, speed),\n      mass: radius,\n      position: new Animated.ValueXY(coordinate),\n      radius,\n    });\n  }\n\n  return items;\n};\n\nexport const getItemOverlap = (a: Item, b: Item): boolean => {\n  const ac = { x: a.x + a.radius, y: a.y + a.radius };\n  const bc = { x: b.x + b.radius, y: b.y + b.radius };\n  const distSq = (ac.x - bc.x) * (ac.x - bc.x) + (ac.y - bc.y) * (ac.y - bc.y);\n  const radSq = (a.radius + b.radius) * (a.radius + b.radius);\n  return distSq <= radSq;\n};\n\n// TODO: make better without velocity change\nexport const getItemCollision = (a: Item, b: Item, maxSpeed: number): void => {\n  const xVelocityDiff = a.dx - b.dx;\n  const yVelocityDiff = a.dy - b.dy;\n\n  const xDist = b.x - a.x;\n  const yDist = b.y - a.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n    // Grab angle between the two colliding particles\n    const angle = -Math.atan2(b.y - a.y, b.x - a.x);\n\n    // Store mass in var for better readability in collision equation\n    const m1 = a.mass;\n    const m2 = b.mass;\n\n    // Velocity before equation\n    const u1 = rotate(a.dx, a.dy, angle);\n    const u2 = rotate(b.dx, b.dy, angle);\n\n    // Velocity after 1d collision equation\n    const v1 = {\n      dx: (u1.x * (m1 - m2)) / (m1 + m2) + (u2.x * 2 * m2) / (m1 + m2),\n      dy: u1.y,\n    };\n    const v2 = {\n      dx: (u2.x * (m1 - m2)) / (m1 + m2) + (u1.x * 2 * m1) / (m1 + m2),\n      dy: u2.y,\n    };\n\n    // Final velocity after rotating axis back to original location\n    const vFinal1 = rotate(v1.dx, v1.dy, -angle);\n    const vFinal2 = rotate(v2.dx, v2.dy, -angle);\n\n    // Swap particle velocities for realistic bounce effect\n    a.dx = Math.min(vFinal1.x, maxSpeed);\n    a.dy = Math.min(vFinal1.y, maxSpeed);\n\n    b.dx = Math.min(vFinal2.x, maxSpeed);\n    b.dy = Math.min(vFinal2.y, maxSpeed);\n  }\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Animated } from 'react-native';\nimport { Text, TouchableOpacity } from '../../../../components';\nimport { LayoutDimensions, useColors, useDriver } from '../../../../features';\nimport {\n  getInitialItems,\n  getItemCollision,\n  getItemOverlap,\n  getNextDraw,\n} from './utils';\n\ntype Props = {\n  collision?: boolean;\n  count: number;\n  difficulty?: number;\n  layout: LayoutDimensions;\n  radius: number;\n  speed?: number;\n};\n\nexport const Balls = memo(function Balls({\n  radius,\n  count,\n  layout,\n  speed = 5,\n  difficulty = 0.8,\n  collision,\n}: Props) {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const items = useRef(getInitialItems({ count, layout, radius, speed }));\n  const [score, setScore] = useState(0);\n\n  const draw = useCallback(() => {\n    Animated.parallel(\n      items.current.map((item) =>\n        Animated.timing(item.position, {\n          duration: 50,\n          toValue: { x: item.x, y: item.y },\n          useNativeDriver,\n        }),\n      ),\n    ).start(({ finished }) => {\n      if (!finished) return;\n      // TODO: method\n      // next step\n      items.current = items.current.map((item) => getNextDraw(item, layout));\n\n      // item collision\n      if (collision) {\n        for (let i = 0; i < items.current.length; i++) {\n          const a = items.current[i];\n          for (let j = i + 1; j < items.current.length; j++) {\n            const b = items.current[j];\n            const overlap = getItemOverlap(a, b);\n            if (overlap) getItemCollision(a, b, speed);\n          }\n        }\n      }\n\n      draw();\n    });\n  }, [collision, layout, speed, useNativeDriver]);\n\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  const handlePress = useCallback(\n    (index: number) => () => {\n      const active = items.current[index];\n      const multiplier = 1.5 + difficulty;\n\n      // TODO updateCurrentItem()\n      items.current[index] = {\n        ...active,\n        dx: active.dx * multiplier,\n        dy: -active.dy * multiplier,\n        radius: active.radius * difficulty,\n      };\n\n      // TODO addNewItem()\n      const coordinates = { x: active.x, y: active.y };\n      items.current.push({\n        ...coordinates,\n        dx: -active.dx * multiplier,\n        dy: active.dy * multiplier,\n        index: items.current.length,\n        mass: 10,\n        position: new Animated.ValueXY(coordinates),\n        radius: active.radius * difficulty,\n      });\n\n      setScore((prev) => prev + 1);\n    },\n    [difficulty],\n  );\n\n  return (\n    <>\n      <Text\n        center\n        title={String(score)}\n        type=\"h2\"\n      />\n      {items.current.map((item) => (\n        <Animated.View\n          key={item.index}\n          style={{\n            ...item.position.getLayout(),\n            position: 'absolute',\n          }}\n        >\n          <TouchableOpacity\n            onPress={handlePress(item.index)}\n            style={{\n              borderColor: colors.border.accent,\n              borderRadius: item.radius,\n              borderWidth: 1,\n              height: item.radius * 2,\n              justifyContent: 'center',\n              width: item.radius * 2,\n            }}\n          >\n            <Text\n              adjustsFontSizeToFit\n              center\n              title={String(item.index)}\n              type=\"h4\"\n            />\n          </TouchableOpacity>\n        </Animated.View>\n      ))}\n    </>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { useColors, useLayout } from '../../../../features';\nimport { Balls } from './Balls';\n\nexport const BouncingBalls = memo(function BouncingBalls() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const { layout, onLayout } = useLayout();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Bouncing Balls\"\n    >\n      <View\n        onLayout={onLayout}\n        style={styles.container}\n      >\n        {layout ? (\n          <Balls\n            collision\n            count={2}\n            layout={layout}\n            radius={80}\n          />\n        ) : null}\n      </View>\n    </Screen>\n  );\n});\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React, { memo } from 'react';\nimport { Image, ImageSourcePropType } from 'react-native';\nimport { RelativeDate, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { Message } from './Messages';\ndayjs.extend(relativeTime);\n\ntype Props = {\n  item: Message;\n  marginBottom: boolean;\n};\n\nexport const Item = memo(function ChatMessage({ item, marginBottom }: Props) {\n  const colors = useColors();\n  const image =\n    require('../../../../assets/line-chart.png') as ImageSourcePropType;\n\n  return (\n    <View\n      key={item.id}\n      style={{\n        backgroundColor: colors.background.primaryA,\n        borderRadius: spacing(4),\n        flexDirection: 'row',\n        marginBottom: marginBottom ? spacing(4) : 0,\n        padding: spacing(2),\n      }}\n    >\n      <View style={{ width: 40 }}>\n        <Image\n          source={image}\n          style={{\n            alignSelf: 'center',\n            height: 20,\n            paddingTop: spacing(4),\n            resizeMode: 'contain',\n            width: 20,\n          }}\n        />\n      </View>\n      <View flex>\n        <View row>\n          <Text\n            bold\n            style={{ paddingRight: spacing(2) }}\n            title={item.userId}\n          />\n          <RelativeDate date={item.createdAt} />\n        </View>\n        <Text\n          style={{ paddingTop: spacing(1) }}\n          title={item.message}\n          type=\"body1\"\n        />\n      </View>\n    </View>\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, FlatListRef } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Item } from './Item';\nimport { getActiveChatMessagesOrderByCreatedAt, Message } from './Messages';\n\nexport const Items = memo(function ChatMessageItems() {\n  const itemsRef = useRef<FlatListRef>(null);\n  const colors = useColors();\n  const messages = useRootSelector(getActiveChatMessagesOrderByCreatedAt);\n  const renderItem = useCallback<ListRenderItem<Message>>(\n    ({ item }) => (\n      <Item\n        item={item}\n        marginBottom={item.id !== messages[0].id}\n      />\n    ),\n    [messages],\n  );\n  const keyExtractor = useCallback((item: Message) => item.id, []);\n\n  useEffect(() => {\n    itemsRef.current?.scrollToItem({ item: messages[0] });\n  }, [messages]);\n\n  return (\n    <FlatList\n      contentContainerStyle={{ padding: spacing(4) }}\n      data={messages}\n      initialNumToRender={0}\n      inverted\n      keyExtractor={keyExtractor}\n      onRef={itemsRef}\n      renderItem={renderItem}\n      style={{ backgroundColor: colors.background.secondary }}\n    />\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { v4 } from 'uuid';\nimport {\n  Icon,\n  Input,\n  TextInputRef,\n  TouchableOpacity,\n  View,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport {\n  createChatMessage,\n  getChatSubmittable,\n  Message,\n  typeChatMessage,\n} from './Messages';\n\nexport const TextField = memo(function TextField() {\n  const dispatch = useRootDispatch();\n  const textFieldRef = useRef<TextInputRef>(null);\n  const textField = useRootSelector((state) => state.chatMessage.textField);\n  const submittable = useRootSelector(getChatSubmittable);\n  const onMessageChange = useCallback(\n    (message: string) => dispatch(typeChatMessage(message)),\n    [dispatch],\n  );\n  const colors = useColors();\n\n  const onSubmit = useCallback(() => {\n    if (textField.trim().length === 0) return;\n    const date = Date.now();\n    const message: Message = {\n      active: true,\n      conversationId: '1',\n      createdAt: date,\n      id: v4(),\n      message: textField.trim(),\n      updatedAt: date,\n      userId: 'User bob',\n    };\n    dispatch(createChatMessage(message));\n  }, [dispatch, textField]);\n\n  useEffect(() => {\n    textFieldRef.current?.focus();\n  }, []);\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        backgroundColor: colors.background.primaryA,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: spacing(4),\n      }}\n    >\n      <Input\n        flex\n        onChangeText={onMessageChange}\n        onRef={textFieldRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Write something...\"\n        removeError\n        value={textField}\n      />\n      <TouchableOpacity\n        disabled={!submittable}\n        onPress={onSubmit}\n      >\n        <Icon\n          color={submittable ? 'accent' : 'primaryA'}\n          disabled={!submittable}\n          name=\"send\"\n          style={{\n            justifyContent: 'center',\n            paddingLeft: spacing(2),\n          }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen, View } from '../../../../components';\nimport { useLayout } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Items } from './Items';\nimport { TextField } from './TextField';\n\nexport const Chat = memo(function PlaygroundChat() {\n  const { goBack } = useNavigation();\n  const { layout, onLayout, insets } = useLayout();\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  const bottomInset = keyboardHeight > 0 ? insets.bottom : 0;\n  const height = (layout?.height ?? 0) - keyboardHeight + bottomInset;\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Chat\"\n    >\n      <View\n        flex\n        onLayout={onLayout}\n      >\n        <View style={{ height }}>\n          <Items />\n          <TextField />\n        </View>\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { Dimensions, ListRenderItem } from 'react-native';\nimport { FlatList, Image, Screen } from '../../../../components';\nimport { useColors } from '../../../../features';\n\nconst numColumns = 3;\nconst handleInfiniteScrollThreshold = 0.3;\nconst batch = 50;\nconst columnWidth = Dimensions.get('window').width / numColumns;\nconst imageUrl = `https://source.unsplash.com/random`;\nconst data: number[] = Array(batch)\n  .fill(0)\n  .map((_, x) => Date.now() + x);\n\nexport const ImageCollection = memo(function ImageCollection() {\n  const { goBack } = useNavigation();\n  const keyExtractor = useCallback((d: number) => d.toString(), []);\n  const handleFetchMore = useCallback(() => {\n    for (let i = 0; i < batch; i++) data.push(Date.now() + i);\n  }, []);\n  const colors = useColors();\n\n  const renderImage = useCallback<ListRenderItem<number>>(\n    ({ item }) => (\n      <Image\n        height={columnWidth}\n        uri={`${imageUrl}/${item}`}\n        width={columnWidth}\n      />\n    ),\n    [],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Images\"\n    >\n      <FlatList\n        contentContainerStyle={{ backgroundColor: colors.background.secondary }}\n        data={data}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"handled\"\n        numColumns={numColumns}\n        onEndReached={handleFetchMore}\n        onEndReachedThreshold={handleInfiniteScrollThreshold}\n        renderItem={renderImage}\n      />\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport { Dimensions } from 'react-native';\nimport {\n  Button,\n  KeyboardAwareScrollView,\n  RecyclerFlatList,\n  RecyclerFlatListRef,\n  Screen,\n  Text,\n  TextInput,\n  View,\n} from '../../../../components';\nimport {\n  ColorTheme,\n  colorWithOpacity,\n  spacing,\n  useColors,\n} from '../../../../features';\n\nconst lorem =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean mollis pulvinar massa, a aliquet libero pellentesque id. Maecenas ut euismod ligula. Maecenas in odio id ex porttitor tempor sit amet tincidunt elit. Duis eu imperdiet augue. Suspendisse dignissim tempor nisi vitae lobortis. Morbi nec tempus massa, et vestibulum enim. Quisque tempus euismod leo, vel semper leo pellentesque vitae. Praesent semper rhoncus enim mattis auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sit amet metus maximus, pharetra ligula ut, luctus tortor. Etiam ut congue tellus. Praesent turpis justo, egestas vitae arcu ut, condimentum eleifend sem. Suspendisse sit amet augue sed enim maximus sollicitudin ac vel risus. Maecenas eu dui euismod, aliquam nibh non, mattis diam. Donec accumsan id lorem eget porttitor. Pellentesque non placerat dolor. Pellentesque tincidunt, neque sed suscipit varius, odio augue lobortis eros, ac aliquet erat mauris sed dolor. Curabitur massa nulla, dapibus pharetra turpis sed, viverra lobortis risus. Nulla rhoncus ipsum eu tellus semper lacinia. Pellentesque sed odio sed tellus ultricies tincidunt sed sed ipsum. Nam sed tincidunt eros. Praesent fermentum metus nec risus finibus placerat. Vestibulum est leo, accumsan sit amet enim a, tempor pharetra neque. Etiam id diam nulla. Curabitur sit amet lacus cursus lacus finibus rutrum. Maecenas commodo mauris non dignissim efficitur. In dictum elit vitae neque cursus pharetra at non nisl. Donec luctus ornare purus, eget pellentesque tellus imperdiet id. Suspendisse mollis gravida arcu a volutpat. Aliquam laoreet varius arcu, non tempor elit ultricies vel. Integer commodo ante et nisi condimentum, in ullamcorper sapien mollis. Integer nec ipsum nunc. Integer posuere, erat ut gravida accumsan, mauris lacus varius erat, eget fermentum est ex id risus. Curabitur lectus diam, egestas ac nibh at, sagittis interdum justo. Praesent vel purus et felis ullamcorper porta eget sit amet nisi. Aliquam erat volutpat. Nam id justo ligula. Integer maximus convallis enim eget consequat. Duis eget nunc at augue convallis fermentum non nec massa. Etiam aliquet lorem non nibh finibus laoreet. Fusce dictum tincidunt augue id fermentum. Phasellus varius arcu leo, non euismod ex varius id. Integer et orci nunc. Nulla facilisi. Aliquam nec lectus nunc. Vestibulum sit amet convallis risus. Vestibulum laoreet, odio non cursus mattis, tortor mauris auctor ex, ac semper eros nunc in neque. Integer non sodales felis.';\n\ntype Data = {\n  color: string;\n  id: string;\n  name: string;\n};\n\ntype GenerateItems = {\n  colors: ColorTheme;\n  length: number;\n  max?: number;\n  min?: number;\n};\nconst generateItems = ({\n  colors,\n  length,\n  min = 0.4,\n  max = 0.6,\n}: GenerateItems): Data[] => {\n  const output = [];\n  for (let i = 0; i < length; i++) {\n    const random = Math.random() * (max - min) + min;\n    output.push({\n      color: colorWithOpacity(colors.text.accent, random),\n      id: String(i),\n      name: String(i),\n    });\n  }\n  return output;\n};\nexport const KeyboardScroll = memo(function KeyboardScroll() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [message, setMessage] = useState('');\n\n  const { width } = Dimensions.get('window');\n  const [loading, setLoading] = useState(false);\n  const onEndReached = useCallback(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefetch = useCallback(() => {\n    setRefreshing(true);\n    const timeout = setTimeout(() => {\n      setRefreshing(false);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const onRowRender = useCallback((item: Data) => {\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          backgroundColor: item.color,\n          flex: 1,\n          justifyContent: 'space-around',\n          marginBottom: spacing(2),\n        }}\n      >\n        <Text title={item.name} />\n      </View>\n    );\n  }, []);\n\n  const [data, setData] = useState<Data[]>(() =>\n    generateItems({ colors, length: 200000 }),\n  );\n\n  const onChangeText = useCallback((v: string) => {\n    setMessage(v);\n  }, []);\n\n  const listRef = useRef<RecyclerFlatListRef>(null);\n\n  const onSubmit = useCallback(() => {\n    const date = Date.now().toString();\n    setData((p) => [...p, { color: colors.text.accent, id: date, name: date }]);\n    listRef.current?.scrollToEnd(true);\n  }, [colors.text.accent]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Keyboard\"\n    >\n      <KeyboardAwareScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        showsVerticalScrollIndicator={false}\n      >\n        <Text title={lorem} />\n        <Text\n          title=\"Header\"\n          type=\"h3\"\n        />\n        <View\n          style={{\n            backgroundColor: colors.background.secondary,\n            height: 200,\n            padding: spacing(2),\n          }}\n        >\n          <RecyclerFlatList\n            data={data}\n            itemHeight={40}\n            itemWidth={width}\n            loading={loading}\n            onEndReached={onEndReached}\n            onRef={listRef}\n            onRefetch={onRefetch}\n            onRowRender={onRowRender}\n            refreshing={refreshing}\n          />\n        </View>\n        <TextInput\n          autoCapitalize=\"none\"\n          autoComplete=\"username\"\n          autoCorrect={false}\n          blurOnSubmit={false}\n          editable={!loading}\n          keyboardType=\"default\"\n          onChangeText={onChangeText}\n          onSubmitEditing={onSubmit}\n          placeholder=\"Username\"\n          returnKeyType=\"done\"\n          textContentType=\"username\"\n          value={message}\n        />\n        <Button\n          onPress={onSubmit}\n          title=\"Submit\"\n        />\n        <Text title={lorem} />\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import {\n  GestureResponderEvent,\n  NativeTouchEvent,\n  PointPropType,\n} from 'react-native';\n\ntype Touches = Record<string, PointPropType>;\n\ntype Outcome = {\n  pinch: boolean;\n  spread: boolean;\n};\n\nexport class GestureHandler {\n  minTouches: number;\n\n  finish: Touches = {};\n\n  start: Touches = {};\n\n  constructor({ minTouches = 2 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  onPanResponderMove(event: GestureResponderEvent): void {\n    const { touches } = event.nativeEvent;\n    touches.forEach((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  recordStart(touch: NativeTouchEvent): void {\n    if (touch.identifier in this.start) return;\n    this.start[touch.identifier] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  recordFinish(touch: NativeTouchEvent): void {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  isSpread(touch: number): boolean {\n    const center = this.determineCenter();\n    const startXDistance = Math.abs(this.start[touch].x - center.x);\n    const startYDistance = Math.abs(this.start[touch].y - center.y);\n    const finishXDistance = Math.abs(this.finish[touch].x - center.x);\n    const finishYDistance = Math.abs(this.finish[touch].y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  determineCenter(): { x: number; y: number } {\n    const numRecordedTouched = Object.keys(this.start).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = this.start[i];\n      x += point.x;\n      y += point.x;\n    }\n\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false,\n    };\n    if (numRecordedTouched < this.minTouches) return outcome;\n    let spread = false;\n    let pinch = false;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const isSpread = this.isSpread(i);\n      const isPinch = !this.isSpread(i);\n      if (isPinch && isSpread) return outcome;\n      if (!isPinch && !isSpread) return outcome;\n      if (isPinch && spread) return outcome;\n      if (isSpread && pinch) return outcome;\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { pinch, spread };\n  }\n}\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useState } from 'react';\nimport { Animated, PanResponder, StyleSheet } from 'react-native';\nimport { Screen, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { GestureHandler } from './logic';\n\nconst minTouches = 2;\nconst title = `pinch or spread the screen with ${minTouches} fingers minimum`;\n\nexport const PinchSpread = memo(function PinchSpread() {\n  const [state, setState] = useState({ pinchCount: 0, spreadCount: 0 });\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const styles = StyleSheet.create({\n    container: { backgroundColor: colors.background.secondary, flex: 1 },\n  });\n  const gestureHandler = new GestureHandler({ minTouches });\n  const panGesture = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (event) => gestureHandler.onPanResponderMove(event),\n    onPanResponderRelease: () => {\n      const outcome = gestureHandler.onPanResponderRelease();\n      if (outcome.spread)\n        setState((prev) => ({ ...prev, spreadCount: prev.spreadCount++ }));\n\n      if (outcome.pinch)\n        setState((prev) => ({ ...prev, pinchCount: prev.pinchCount++ }));\n    },\n  });\n\n  /* eslint-disable react/jsx-props-no-spreading */\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Pinch Spread\"\n    >\n      <Animated.View\n        style={styles.container}\n        {...panGesture.panHandlers}\n      />\n      <View style={{ padding: spacing(2) }}>\n        <Text\n          center\n          title={title}\n        />\n        <Text\n          center\n          title={`spread: ${state.spreadCount}`}\n        />\n        <Text\n          center\n          title={`pinch: ${state.pinchCount}`}\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { Animated, ListRenderItem, StyleSheet } from 'react-native';\nimport {\n  FlatList,\n  Icon,\n  IconName,\n  Input,\n  Screen,\n  Text,\n  View,\n} from '../../../../components';\nimport {\n  colorWithOpacity,\n  spacing,\n  useColors,\n  useDriver,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\n\ntype Data = {\n  id: number;\n  name: string;\n};\n\nconst data: Data[] = [\n  { id: 1, name: '1' },\n  { id: 2, name: '2' },\n  { id: 3, name: '3' },\n  { id: 4, name: '4' },\n  { id: 5, name: '5' },\n  { id: 6, name: '6' },\n  { id: 7, name: '7' },\n  { id: 8, name: '8' },\n  { id: 9, name: '9' },\n  { id: 10, name: '10' },\n  { id: 11, name: '11' },\n  { id: 12, name: '12' },\n  { id: 13, name: '13' },\n  { id: 14, name: '14' },\n  { id: 15, name: '15' },\n  { id: 16, name: '16' },\n  { id: 17, name: '17' },\n  { id: 18, name: '18' },\n  { id: 19, name: '19' },\n];\n\ntype State = {\n  animation: Animated.Value;\n  iconName: IconName;\n  input: string;\n};\n\nconst iconSearch = 'magnify';\nconst iconBack = 'arrow-left';\nconst textInputPlaceHolder = 'Search';\nconst animationDuration = 400;\n\nexport const SearchBar = memo(function PlaygroundSearchbar() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [state, setState] = useState<State>({\n    animation: new Animated.Value(0),\n    iconName: iconSearch,\n    input: '',\n  });\n  const keyboardVisible = useRootSelector((s) => s.device.keyboardVisible);\n  const useNativeDriver = useDriver();\n  const translateIcon = state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1],\n  });\n  const fadeContainer = state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      colors.background.primaryA,\n      colorWithOpacity(colors.background.secondary),\n    ],\n  });\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      backgroundColor: colors.background.secondary,\n      height: spacing(20),\n      justifyContent: 'center',\n      padding: spacing(2),\n    },\n    item: {\n      borderBottomColor: colors.background.secondary,\n      borderWidth: 0.2,\n      padding: spacing(6),\n    },\n    textContainer: {\n      alignItems: 'center',\n      backgroundColor: colors.background.primaryA,\n      flexDirection: 'row',\n      height: '100%',\n      padding: spacing(2),\n    },\n    textInput: {\n      flex: 1,\n      marginLeft: spacing(2),\n    },\n  });\n\n  const animate = useCallback(\n    (value: number) => {\n      Animated.timing(state.animation, {\n        duration: animationDuration,\n        toValue: value,\n        useNativeDriver,\n      }).start();\n    },\n    [state.animation, useNativeDriver],\n  );\n\n  const changeIcon = useCallback(\n    (iconName: IconName) => {\n      const iconChangeTimeout = setTimeout(() => {\n        clearTimeout(iconChangeTimeout);\n        setState({ ...state, iconName });\n      }, animationDuration / 2);\n    },\n    [state],\n  );\n\n  const onSearchBarFocus = useCallback(() => {\n    animate(1);\n    changeIcon(iconBack);\n  }, [animate, changeIcon]);\n\n  const onSearchBarUnFocus = useCallback(() => {\n    animate(0);\n    changeIcon(iconSearch);\n  }, [animate, changeIcon]);\n\n  useEffect(() => {\n    if (keyboardVisible) onSearchBarFocus();\n    else onSearchBarUnFocus();\n  });\n\n  const renderItem = useCallback<ListRenderItem<Data>>(\n    ({ item }) => (\n      <Text\n        style={styles.item}\n        title={item.name}\n        type=\"subtitle2\"\n      />\n    ),\n    [styles.item],\n  );\n\n  const keyExtractor = useCallback((item: Data) => item.id.toString(), []);\n\n  const onChangeText = useCallback(\n    (value: string) => setState((prev) => ({ ...prev, input: value })),\n    [],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Search Bar\"\n    >\n      <View style={styles.header}>\n        <View style={styles.textContainer}>\n          <Animated.View\n            style={{\n              transform: [{ translateX: translateIcon }],\n            }}\n          >\n            <Icon name={state.iconName} />\n          </Animated.View>\n          <Input\n            containerStyle={styles.textInput}\n            onChangeText={onChangeText}\n            placeholder={textInputPlaceHolder}\n            removeError\n            value={state.input}\n          />\n        </View>\n      </View>\n      <Animated.View style={{ backgroundColor: fadeContainer, flex: 1 }}>\n        <FlatList\n          data={data}\n          keyExtractor={keyExtractor}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderItem}\n        />\n      </Animated.View>\n    </Screen>\n  );\n});\n","import React from 'react';\nimport { Card, SkeletonLoader, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\n\nexport const LoadingProfile = (): JSX.Element => {\n  const colors = useColors();\n  const banner = spacing(24);\n\n  return (\n    <Card\n      noPadding\n      style={{\n        marginBottom: spacing(4),\n        paddingBottom: spacing(20),\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: colors.background.tertiary,\n          borderTopLeftRadius: spacing(2),\n          borderTopRightRadius: spacing(2),\n          flex: 1,\n          height: banner,\n        }}\n      />\n      <View\n        style={{\n          alignItems: 'center',\n          left: 0,\n          position: 'absolute',\n          top: banner * 0.5,\n          width: '100%',\n          zIndex: 1,\n        }}\n      >\n        <SkeletonLoader\n          borderRadius={banner}\n          height={banner}\n          width={banner}\n        />\n      </View>\n      <View style={{ alignItems: 'center', marginTop: banner * 0.5 }}>\n        <View style={{ paddingVertical: spacing(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={spacing(6)}\n            width={spacing(16) * 4}\n          />\n        </View>\n        <SkeletonLoader\n          borderRadius={0}\n          height={spacing(6)}\n          width={spacing(16) * 3}\n        />\n      </View>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Card, SkeletonLoader, View } from '../../../../components';\nimport { spacing } from '../../../../features';\n\nexport const LoadingSection = (): JSX.Element => {\n  return (\n    <Card style={{ marginBottom: spacing(4) }}>\n      <View>\n        <View row>\n          <SkeletonLoader\n            borderRadius={spacing(24)}\n            height={spacing(24)}\n            width={spacing(24)}\n          />\n          <View\n            style={{\n              justifyContent: 'space-between',\n              padding: spacing(4),\n            }}\n          >\n            <SkeletonLoader\n              borderRadius={0}\n              height={spacing(6)}\n              width={spacing(20)}\n            />\n            <SkeletonLoader\n              borderRadius={0}\n              height={spacing(6)}\n              width={spacing(20) * 2}\n            />\n          </View>\n        </View>\n        <View style={{ paddingVertical: spacing(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={spacing(6)}\n            width={spacing(19) * 4}\n          />\n        </View>\n        <View style={{ paddingBottom: spacing(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={spacing(6)}\n            width={spacing(20) * 4}\n          />\n        </View>\n        <SkeletonLoader\n          borderRadius={0}\n          height={spacing(6)}\n          width={spacing(18) * 4}\n        />\n      </View>\n    </Card>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Screen, ScrollView, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { LoadingProfile } from './LoadingProfile';\nimport { LoadingSection } from './LoadingSection';\n\nexport const SkeletonLoading = memo(function PlaygroundTemplate() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const mounted = useRef(true);\n  const [loading, setLoading] = useState(true);\n\n  const load = useCallback(() => {\n    const timeout = setTimeout(() => {\n      if (!mounted.current) return;\n      setLoading(false);\n    }, 5000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const onRetry = useCallback(() => {\n    setLoading(true);\n    load();\n  }, [load]);\n\n  useEffect(() => {\n    load();\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [load]);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Skeleton Loader\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: spacing(4) }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        {loading ? (\n          <View>\n            <LoadingProfile />\n            <LoadingSection />\n            <LoadingSection />\n            <LoadingSection />\n            <LoadingSection />\n          </View>\n        ) : (\n          <View>\n            <Text\n              center\n              title=\"loaded\"\n            />\n            <Button\n              center\n              onPress={onRetry}\n              title=\"retry\"\n            />\n          </View>\n        )}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\n\nexport const formatRelativeDate = (date: Dayjs): string => {\n  const now = dayjs();\n  const years = now.diff(date, 'year');\n  const weeks = now.diff(date, 'week');\n  const days = now.diff(date, 'day');\n  const hours = now.diff(date, 'hour');\n  const minutes = now.diff(date, 'minute');\n  return years\n    ? `${years}y`\n    : weeks\n    ? `${weeks}w`\n    : days\n    ? `${days}d`\n    : hours\n    ? `${hours}h`\n    : minutes\n    ? `${minutes}m`\n    : '';\n};\n","import { useNavigation } from '@react-navigation/native';\nimport dayjs, { Dayjs } from 'dayjs';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport {\n  Animated,\n  Image,\n  ImageSourcePropType,\n  LayoutChangeEvent,\n  PanResponder,\n} from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Card,\n  Icon,\n  IconName,\n  Screen,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useDriver,\n  useDropShadow,\n} from '../../../../features';\nimport { getWidth, useRootSelector } from '../../../../redux';\nimport { formatRelativeDate } from './utils';\n\ntype SwipeItem = {\n  body: string;\n  button: string;\n  date: Dayjs;\n  icon: IconName;\n  id: string;\n  image: ImageSourcePropType | null;\n  onPress(): void;\n  title: string;\n};\ntype SwipeCardProps = {\n  height: number;\n  index: number;\n  item: SwipeItem;\n  onSwipeComplete(): void;\n  onSwipePercentChange(percent: number): void;\n};\n\nconst SwipeCard = memo(function SwipeCard({\n  item,\n  height,\n  onSwipeComplete,\n  onSwipePercentChange,\n}: SwipeCardProps) {\n  const { icon, title, date, body, button, image } = item;\n  const cardWidth = useRef(0);\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const width = useRootSelector(getWidth);\n  const dropShadow = useDropShadow();\n  const imageHeight = height / 1.5;\n  const swipeThreshold = width / 3;\n  const touchThreshold = 50;\n  const position = new Animated.ValueXY();\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      cardWidth.current = event.nativeEvent.layout.width;\n    },\n    [cardWidth],\n  );\n\n  const setCardWidth = useCallback(\n    (dx: number) => {\n      onSwipePercentChange(1 - dx / cardWidth.current);\n    },\n    [cardWidth, onSwipePercentChange],\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: (_, gesture) =>\n      Math.abs(gesture.dx) > touchThreshold ||\n      Math.abs(gesture.dy) > touchThreshold,\n    onPanResponderMove: (_, gesture) => {\n      setCardWidth(gesture.dx);\n      position.setValue({ x: gesture.dx, y: gesture.dy });\n    },\n    onPanResponderRelease: (_, gesture) => {\n      const x =\n        gesture.dx > swipeThreshold\n          ? width\n          : gesture.dx < -swipeThreshold\n          ? -width\n          : 0;\n      Animated.spring(position, {\n        toValue: { x, y: 0 },\n        useNativeDriver,\n      }).start();\n    },\n    onStartShouldSetPanResponder: () => true,\n  });\n\n  return (\n    <Animated.View\n      onLayout={onLayout}\n      {...panResponder.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n      style={{\n        backgroundColor: colors.background.primaryA,\n        borderColor: colors.border.accent,\n        borderRadius: spacing(1),\n        height,\n        left: position.x,\n        position: 'absolute',\n        width: '100%',\n        ...dropShadow(4),\n      }}\n    >\n      <TouchableOpacity\n        flex\n        onPress={onSwipeComplete}\n      >\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          {image ? (\n            <Image\n              source={image}\n              style={{\n                alignSelf: 'center',\n                height: imageHeight,\n                width: imageHeight,\n              }}\n            />\n          ) : null}\n          <View style={{ flex: 1, padding: spacing(2) }}>\n            <View\n              style={{\n                alignItems: 'center',\n                flexDirection: 'row',\n              }}\n            >\n              <Icon\n                name={icon}\n                size={15}\n              />\n              <Text\n                bold\n                style={{ paddingHorizontal: spacing(1) }}\n                title={title}\n                type=\"overline\"\n              />\n              <Text title={formatRelativeDate(date)} />\n            </View>\n            <Text\n              ellipsizeMode=\"tail\"\n              numberOfLines={2}\n              style={{ flex: 1, paddingTop: spacing(2) }}\n              title={body}\n            />\n            <Text\n              color=\"positive\"\n              title={button.toUpperCase()}\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n});\n\nconst initialItems: SwipeItem[] = [\n  {\n    body: 'BABA is down 4.41% to $204.433.',\n    button: 'View BABA',\n    date: dayjs().subtract(5, 'minute'),\n    icon: 'arrow-bottom-right',\n    id: v4(),\n    image: null,\n    onPress: () => undefined,\n    title: 'Price Movement',\n  },\n  {\n    body: 'Disney heiress Abigail Disney and other superrich American demand the 1% pay higher taxes than other Americans.',\n    button: 'View Article',\n    date: dayjs().subtract(11, 'hour'),\n    icon: 'file-document-edit-outline',\n    id: v4(),\n    image: null,\n    onPress: () => undefined,\n    title: 'Marketwatch',\n  },\n  {\n    body: \"Amazon files motion to halt Microsoft's work on Pentagon's JEDI contract\",\n    button: 'View Article',\n    date: dayjs().subtract(1, 'day'),\n    icon: 'book',\n    id: v4(),\n    image: null,\n    onPress: () => undefined,\n    title: 'Reuters',\n  },\n  {\n    body: \"You're invited! Start trading Bitcoin & Ethereum\",\n    button: 'Get Started',\n    date: dayjs(),\n    icon: 'star-outline',\n    id: v4(),\n    image: require('./placeholder.png'),\n    onPress: () => undefined,\n    title: 'Congratulations',\n  },\n  {\n    body: \"Invite your friends! When they sign up, you'll both get a free stock\",\n    button: 'Invite friends',\n    date: dayjs(),\n    icon: 'star-outline',\n    id: v4(),\n    image: require('./placeholder.png'),\n    onPress: () => undefined,\n    title: 'Enjoying robinhood?',\n  },\n  {\n    body: 'Swipe through cards to see your personalized notifications and news stories.',\n    button: 'Swipe to dismiss',\n    date: dayjs(),\n    icon: 'lightbulb-outline',\n    id: v4(),\n    image: null,\n    onPress: () => undefined,\n    title: 'Introducing cards',\n  },\n];\n\ntype BadgeProps = {\n  count: number;\n  percent: number;\n};\n\nconst Badge = memo(function Badge({ count, percent }: BadgeProps) {\n  const size = spacing(6);\n  const badgeSize = size * percent;\n  const colors = useColors();\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        height: size,\n        justifyContent: 'center',\n        margin: spacing(1),\n        position: 'absolute',\n        right: 0,\n        width: size,\n        zIndex: count * 10,\n      }}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          backgroundColor: colors.background.negative,\n          borderRadius: size,\n          height: badgeSize,\n          justifyContent: 'center',\n          width: badgeSize,\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          color=\"primaryB\"\n          title={`${count}`}\n        />\n      </View>\n    </View>\n  );\n});\n\ntype SwipeCardsProps = {\n  height?: number;\n  items: SwipeItem[];\n};\n\nconst SwipeCards = memo(function SwipeCardList({\n  height = 100,\n  items,\n}: SwipeCardsProps) {\n  const [feed, setFeed] = useState({\n    items,\n    percent: 1,\n  });\n\n  const onSwipeComplete = useCallback(() => {\n    setFeed((state) => ({\n      ...state,\n      items: state.items.filter((_, i) => i !== state.items.length - 1),\n      percent: 1,\n    }));\n  }, []);\n\n  const onSwipePercentChange = useCallback((percent: number) => {\n    setFeed((state) => ({\n      ...state,\n      percent,\n    }));\n  }, []);\n\n  return feed.items.length ? (\n    <View style={{ height }}>\n      {feed.items.map((item, index) => (\n        <SwipeCard\n          height={height}\n          index={index}\n          item={item}\n          key={item.id}\n          onSwipeComplete={onSwipeComplete}\n          onSwipePercentChange={onSwipePercentChange}\n        />\n      ))}\n      <Badge\n        count={feed.items.length}\n        percent={feed.percent}\n      />\n    </View>\n  ) : null;\n});\n\nconst ImagePlaceholder = memo(function ImagePlaceholder() {\n  return (\n    <Card noPadding>\n      <Image\n        source={require('./placeholder.png')}\n        style={{ borderRadius: 4, height: 100, width: '100%' }}\n      />\n    </Card>\n  );\n});\n\nexport const SwipeFeed = memo(function SwipeFeed() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Swipe Feed\"\n    >\n      <ScrollView\n        style={{\n          backgroundColor: colors.background.secondary,\n          padding: spacing(4),\n        }}\n      >\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <SwipeCards items={initialItems} />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderInstance,\n} from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { colorWithOpacity, useColors, useDriver } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\n\nconst charSize = 50;\nconst charSpeed = 40;\nconst fps = 1000 / 60;\n\nconst getLimit = (value: number, limit: number) =>\n  value > limit ? limit : value < -limit ? -limit : value;\nconst getBounds = (value: number, limit: number, size: number) =>\n  value > limit - size ? limit - size : value < 0 ? 0 : value;\n\nexport const Archero = memo(function Archero() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const useNativeDriver = useDriver();\n  const timer = useRef(false);\n  const interval = useRef<ReturnType<typeof setInterval> | null>(null);\n  const gesture = useRef({ dx: 0, dy: 0, x0: 0, y0: 0 });\n  const window = useRootSelector((state) => state.dimension.window);\n  const [dimensions, setDimensions] = useState({ height: 1000, width: 1000 });\n  const { width, height } = dimensions;\n  const smallest = width > height ? height : width;\n  const joystickSize = smallest / 3;\n  const joystickCenter = joystickSize / 2;\n  const thumbSize = joystickSize / 3;\n  const initialJoystickLoc = {\n    x: width / 2 - joystickCenter,\n    y: height - joystickSize - 75,\n  };\n  const initialCharLoc = {\n    x: width / 2 - charSize / 2,\n    y: height / 2 - charSize / 2,\n  };\n  const initialThumbLoc = { x: 0, y: 0 };\n  let characterValueXY = initialCharLoc;\n  const joystick: Animated.ValueXY = new Animated.ValueXY(initialJoystickLoc);\n  const thumb: Animated.ValueXY = new Animated.ValueXY(initialThumbLoc);\n  const character: Animated.ValueXY = new Animated.ValueXY(initialCharLoc);\n  character.addListener(({ x, y }) => {\n    characterValueXY = { x, y };\n  });\n\n  const moveCharacter = () => {\n    const { dx, dy } = gesture.current;\n    const vx = getLimit(dx, charSpeed);\n    const vy = getLimit(dy, charSpeed);\n    const x = getBounds(characterValueXY.x + vx, width, charSize);\n    const y = getBounds(characterValueXY.y + vy, height, charSize);\n    Animated.spring(character, {\n      toValue: { x, y },\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveThumb = () => {\n    const { dx, dy } = gesture.current;\n    const angle = Math.atan2(dx, dy);\n    const dz = Math.sqrt(dx ** 2 + dy ** 2);\n    const z = getLimit(dz, thumbSize);\n    const x = z * Math.sin(angle);\n    const y = z * Math.cos(angle);\n    Animated.spring(thumb, {\n      toValue: { x, y },\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveJoystick = () => {\n    const { x0, y0 } = gesture.current;\n    const offset = window.height - dimensions.height;\n    const offset2 = window.width - dimensions.width;\n    const toValue = {\n      x: x0 - joystickCenter - offset2 / 2,\n      y: y0 - joystickCenter - offset / 2 - joystickSize / 1.5,\n    };\n    Animated.spring(joystick, { toValue, useNativeDriver }).start();\n  };\n\n  const resetJoystick = () => {\n    Animated.spring(joystick, {\n      toValue: initialJoystickLoc,\n      useNativeDriver,\n    }).start();\n    Animated.spring(thumb, {\n      toValue: initialThumbLoc,\n      useNativeDriver,\n    }).start();\n  };\n\n  const onUpdate = () => {\n    interval.current = setInterval(() => {\n      if (!timer.current) {\n        if (interval.current) clearInterval(interval.current);\n\n        resetJoystick();\n        return;\n      }\n      moveJoystick();\n      moveCharacter();\n      moveThumb();\n    }, fps);\n  };\n\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (_, g) => {\n      gesture.current = { dx: g.dx, dy: g.dy, x0: g.x0, y0: g.y0 };\n    },\n    onPanResponderRelease: () => {\n      timer.current = false;\n    },\n    onPanResponderStart: (_, g) => {\n      timer.current = true;\n      gesture.current = { dx: g.dx, dy: g.dy, x0: g.x0, y0: g.y0 };\n      onUpdate();\n    },\n    onStartShouldSetPanResponder: () => true,\n  });\n\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\n    const { layout } = event.nativeEvent;\n    setDimensions({ height: layout.height, width: layout.width });\n  }, []);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Archero\"\n    >\n      <View\n        onLayout={onLayout}\n        style={{ backgroundColor: colors.background.tertiary, flex: 1 }}\n        {...panGesture.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n      >\n        <Animated.View\n          style={[\n            character.getLayout(),\n            {\n              backgroundColor: colors.background.accent,\n              height: charSize,\n              width: charSize,\n            },\n          ]}\n        />\n        <Animated.View\n          style={[\n            joystick.getLayout(),\n            {\n              alignItems: 'center',\n              backgroundColor: colors.overlay.light,\n              borderRadius: 500,\n              height: joystickSize,\n              justifyContent: 'center',\n              width: joystickSize,\n            },\n          ]}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              backgroundColor: colors.overlay.light,\n              borderRadius: 500,\n              height: thumbSize,\n              justifyContent: 'center',\n              width: thumbSize,\n            }}\n          >\n            <Animated.View\n              style={[\n                thumb.getLayout(),\n                {\n                  backgroundColor: colorWithOpacity(\n                    colors.background.accent,\n                    0.8,\n                  ),\n                  borderRadius: 500,\n                  height: thumbSize,\n                  width: thumbSize,\n                },\n              ]}\n            />\n          </View>\n        </Animated.View>\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Screen, TouchableOpacity, View } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\n\ntype Vector = {\n  x: number;\n  y: number;\n};\ntype Gem = {\n  color: string;\n  key: string;\n};\ntype Board = Gem[][];\ntype Matches = Record<string, Vector>;\n\nconst getRandom = (max: number) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst getInitialState = (rows: number, cols: number, gems: Gem[]): Board => {\n  const col = [];\n  for (let i = 0; i < cols; i++) {\n    const row = [];\n    for (let j = 0; j < rows; j++) row.push(gems[getRandom(gems.length)]);\n\n    col.push(row);\n  }\n  return col;\n};\n\nconst getMatches = (board: Board): Matches => {\n  const matches: Matches = {};\n  for (let i = 0; i < board.length; i++)\n    for (let j = 0; j < board[i].length; j++) {\n      const mid = board[i][j];\n      const left = i - 1 < 0 ? undefined : board[i - 1][j];\n      const right = i + 1 >= board.length ? undefined : board[i + 1][j];\n      const up = j - 1 < 0 ? undefined : board[i][j - 1];\n      const down = j + 1 >= board[i].length ? undefined : board[i][j + 1];\n      const vertical = up?.key === mid.key && down?.key === mid.key;\n      const horizontal = left?.key === mid.key && right?.key === mid.key;\n      if (vertical) {\n        matches[`${i}${j - 1}`] = { x: i, y: j - 1 };\n        matches[`${i}${j}`] = { x: i, y: j };\n        matches[`${i}${j + 1}`] = { x: i, y: j + 1 };\n      }\n      if (horizontal) {\n        matches[`${i - 1}${j}`] = { x: i - 1, y: j };\n        matches[`${i}${j}`] = { x: i, y: j };\n        matches[`${i + 1}${j}`] = { x: i + 1, y: j };\n      }\n    }\n\n  return matches;\n};\n\nexport type States = 'idle' | 'swap' | 'validate' | 'swap back' | 'fill gems';\n\nconst initialSelected = { x: -10, y: -10 };\nexport const Bejeweled = memo(function PlaygroundBejeweled() {\n  const { goBack } = useNavigation();\n  const dimension = useRootSelector(getSmallestDimension);\n\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    container: { backgroundColor: colors.background.secondary },\n  });\n\n  const width = 6;\n  const height = 6;\n  const size = dimension / width;\n  const gems: Gem[] = [\n    { color: colors.background.primaryA, key: 'primary' },\n    { color: colors.background.primaryB, key: 'brand' },\n    { color: colors.background.positive, key: 'success' },\n    { color: colors.background.accent, key: 'info' },\n    { color: colors.background.warning, key: 'warning' },\n    { color: colors.background.negative, key: 'danger' },\n  ];\n\n  const [board, setBoard] = useState<Board>(() =>\n    getInitialState(width, height, gems),\n  );\n  getMatches(board);\n  const [selected, setSelected] = useState(initialSelected);\n\n  const onPress = (x: number, y: number) => () => {\n    const sum = Math.abs(x - selected.x) + Math.abs(y - selected.y);\n    if (sum === 0) {\n      setSelected(initialSelected);\n    } else if (sum === 1) {\n      setBoard((prev) => {\n        const temp = prev[x][y];\n        prev[x][y] = prev[selected.x][selected.y];\n        prev[selected.x][selected.y] = temp;\n        return [...prev];\n      });\n      setSelected(initialSelected);\n    } else {\n      setSelected({ x, y });\n    }\n  };\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Bejeweled\"\n    >\n      <View style={styles.container}>\n        {board.map((col, x) => (\n          <View\n            key={v4()}\n            row\n          >\n            {col.map((gem, y) => (\n              <View\n                key={v4()}\n                style={{\n                  height: size,\n                  width: size,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={onPress(x, y)}\n                  style={{\n                    backgroundColor: gem.color,\n                    borderColor:\n                      selected.x === x && selected.y === y\n                        ? colors.border.primaryB\n                        : colors.border.primaryA,\n                    borderWidth: 4,\n                    flex: 1,\n                  }}\n                />\n              </View>\n            ))}\n          </View>\n        ))}\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Input,\n  Screen,\n  ScrollView,\n  Spacing,\n  Text,\n  View,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\n\n// type GameHistory = {\n//   callout: number;\n//   payout: number;\n//   players: string[];\n// };\n\n// type Game = {\n//   history: GameHistory[];\n//   id: string;\n//   name: string;\n// };\n\n// type PlayerHistory = {\n//   autoCallout: number;\n//   bid: number;\n//   callout: number;\n//   date: number;\n//   id: string;\n//   payout: number;\n// };\n\n// type Player = {\n//   cash: number;\n//   history: PlayerHistory[];\n//   id: string;\n//   name: string;\n// };\n\ntype Tab = 'manual' | 'auto';\ntype PlayerGame = {\n  activeTab: Tab;\n  autoCashOut: number;\n  bidAmount: number;\n  status: 'idle' | 'bid';\n};\n\ntype Game = {\n  endTime: number;\n  history: number[];\n  maxPayout: number;\n  payout: number;\n  startTime: number;\n  status: 'start' | 'finish' | 'run';\n};\n\n// https://www.youtube.com/watch?v=sRq1_B8raPg\nexport const Crash = memo(function CrashMemo() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  const [playerGame, setPlayerGame] = useState<PlayerGame>({\n    activeTab: 'manual',\n    autoCashOut: 4,\n    bidAmount: 2,\n    status: 'idle',\n  });\n\n  const [game, setGame] = useState<Game>({\n    endTime: 0,\n    history: [],\n    maxPayout: 0,\n    payout: 0,\n    startTime: 0,\n    status: 'start',\n  });\n  const gameSeconds = game.endTime - game.startTime;\n\n  const handleTabPress = useCallback(\n    (activeTab: Tab) => () => setPlayerGame((p) => ({ ...p, activeTab })),\n    [],\n  );\n\n  const handleAmountInputChange = useCallback(\n    (amount: string) =>\n      setPlayerGame((p) => ({ ...p, bidAmount: Number(amount) })),\n    [],\n  );\n\n  const handleAutoCashOutChange = useCallback(\n    (amount: string) =>\n      setPlayerGame((p) => ({ ...p, autoCashOut: Number(amount) })),\n    [],\n  );\n\n  const handleAmountPress = useCallback(\n    (amount: number) => () =>\n      setPlayerGame((p) => ({ ...p, bidAmount: p.bidAmount * amount })),\n    [],\n  );\n\n  const handleButtonPress = useCallback(() => {\n    setPlayerGame((p) => ({\n      ...p,\n      status: p.status === 'bid' ? 'idle' : 'bid',\n    }));\n  }, []);\n\n  const loop = useCallback(() => {\n    setTimeout(() => {\n      setGame((p) => ({ ...p }));\n      loop();\n    }, 30);\n  }, []);\n\n  useEffect(() => {\n    loop();\n  }, [loop]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Roobet Crash\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          paddingHorizontal: spacing(4),\n          paddingVertical: spacing(2),\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <View />\n\n        <Card>\n          <View\n            style={{ flexDirection: 'row', justifyContent: 'space-between' }}\n          >\n            <Text title=\"name\" />\n            <Text\n              emphasis=\"medium\"\n              title=\"cash\"\n            />\n          </View>\n        </Card>\n\n        <Card>\n          <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n            <Button\n              color={playerGame.activeTab === 'manual' ? 'accent' : 'primaryA'}\n              emphasis=\"medium\"\n              onPress={handleTabPress('manual')}\n              title=\"manual\"\n            />\n            <Spacing padding={2} />\n            <Button\n              color={playerGame.activeTab === 'auto' ? 'accent' : 'primaryA'}\n              emphasis=\"medium\"\n              onPress={handleTabPress('auto')}\n              title=\"auto\"\n            />\n          </View>\n          <Spacing padding={2} />\n          <View\n            style={{\n              alignItems: 'center',\n              flexDirection: 'row',\n            }}\n          >\n            <Input\n              flex\n              onChangeText={handleAmountInputChange}\n              title=\"bet amount\"\n              value={String(playerGame.bidAmount)}\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(0.5)}\n              title=\"1/2\"\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(2)}\n              title=\"2x\"\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(100)}\n              title=\"max\"\n            />\n          </View>\n          <Input\n            onChangeText={handleAutoCashOutChange}\n            title=\"auto cashout\"\n            value={String(playerGame.autoCashOut)}\n          />\n          <Button\n            buttonStyle={{ padding: spacing(3) }}\n            center\n            color=\"positive\"\n            emphasis=\"high\"\n            onPress={handleButtonPress}\n            title={playerGame.status === 'bid' ? 'cash out' : 'place bet'}\n          />\n        </Card>\n\n        <Card>\n          <View>\n            {game.status === 'start' ? (\n              <View>\n                <Text title=\"Preparing Round\" />\n                <Text title={`Staring in ${gameSeconds}s`} />\n              </View>\n            ) : game.status === 'finish' ? (\n              <View>\n                <Text title={`${game.payout}`} />\n                <Text title=\"Round Over\" />\n              </View>\n            ) : (\n              <View>\n                <Text title={`${game.payout}`} />\n                <Text title=\"Current Payout\" />\n                <Text title={`${game.payout * playerGame.bidAmount}`} />\n              </View>\n            )}\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const Drift = memo(function Drift() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Drift\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { Animated } from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { useColors, useDriver } from '../../../../features';\n\nconst Bird = () => {\n  const colors = useColors();\n  return (\n    <Animated.View\n      style={{\n        backgroundColor: colors.background.negative,\n        height: 50,\n        width: 50,\n      }}\n    />\n  );\n};\n\nconst Pillar = () => {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const location = useRef(new Animated.ValueXY({ x: 0, y: 0 }));\n  const state = useRef({ direction: 1, x: 0, y: 0 });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const { y, direction } = state.current;\n      state.current.y = y + Number(direction);\n      Animated.spring(location.current, {\n        toValue: state.current,\n        useNativeDriver,\n      }).start();\n    }, 20);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [useNativeDriver, location]);\n\n  const onPress = useCallback(() => {\n    state.current.direction = -1;\n  }, []);\n\n  return (\n    <Animated.View\n      onTouchStart={onPress}\n      style={[\n        location.current.getLayout(),\n        {\n          backgroundColor: colors.background.positive,\n          height: 50,\n          width: 50,\n        },\n      ]}\n    />\n  );\n};\n\nexport const FlappyBird = memo(function FlappyBird() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Flappy Bird\"\n    >\n      <View style={{ backgroundColor: colors.background.secondary, flex: 1 }}>\n        <Bird />\n        <Pillar />\n      </View>\n    </Screen>\n  );\n});\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","type GetRandomRange = {\n  max: number;\n  min: number;\n};\n\nconst getRandomRange = ({ min, max }: GetRandomRange) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\ntype GetNewLocation = {\n  location: number;\n  maxSpin: number;\n  minSpin: number;\n  numOfSegments: number;\n};\n\nexport const getNewLocation = ({\n  minSpin,\n  maxSpin,\n  numOfSegments,\n  location,\n}: GetNewLocation): number => {\n  const spins = getRandomRange({ max: maxSpin, min: minSpin }) * 360;\n  const winner = Math.floor(Math.random() * numOfSegments);\n  const winnerSection = (winner * 360) / numOfSegments;\n  return location + spins + winnerSection;\n};\n\ntype GetWinnerIndex = {\n  angleOfSegment: number;\n  location: number;\n  numOfSegments: number;\n};\n\nexport const getWinnerIndex = ({\n  location,\n  numOfSegments,\n  angleOfSegment,\n}: GetWinnerIndex): number => {\n  const deg = 360 - Math.floor(location % 360);\n  const index = Math.floor(deg / angleOfSegment);\n  return index >= numOfSegments ? 0 : index;\n};\n","import { arc as d3Arc, pie } from 'd3-shape';\nimport React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { Animated, Dimensions, Easing } from 'react-native';\nimport Svg, { G, Path, Polygon, Text } from 'react-native-svg';\nimport { v4 } from 'uuid';\nimport { TouchableOpacity } from '../../../../components';\nimport { useColors, useDriver, useDropShadow } from '../../../../features';\nimport { SuperAny } from '../../../../types/types';\nimport { Segment } from './types';\nimport { getNewLocation, getWinnerIndex } from './utils';\n\ntype Props = {\n  backgroundColor?: string;\n  bounceSpeed?: number;\n  fontSize?: number;\n  innerRadius?: number;\n  maxSpin?: number;\n  minSpin?: number;\n  noBounce?: boolean;\n  onComplete: (segment: Segment) => void;\n  padAngle?: number;\n  segments: Segment[];\n  size?: number;\n  spinSpeed?: number;\n  textColor?: string;\n};\n\nexport const Wheel = memo(function WheelMemo({\n  size = Dimensions.get('screen').width,\n  backgroundColor,\n  textColor,\n  fontSize = 24,\n  segments,\n  noBounce,\n  padAngle = 0.02,\n  innerRadius = 60,\n  spinSpeed = 1000,\n  bounceSpeed = 5000,\n  minSpin = 3,\n  maxSpin = 7,\n  onComplete,\n}: Props) {\n  const colors = useColors();\n  const dropShadow = useDropShadow();\n  const useNativeDriver = useDriver();\n  const background = backgroundColor ?? colors.background.primaryA;\n  const text = textColor ?? colors.text.primaryA;\n  const radius = size / 2;\n  const knobSize = size / 8;\n  const knobOffset = knobSize * 0.6;\n  const numOfSegments = segments.length;\n  const angleOfSegment = 360 / numOfSegments;\n  const angleOffset = angleOfSegment / 2;\n  const spinning = useRef(false);\n  const location = useRef(0);\n  const angle = useRef(new Animated.Value(0)).current;\n  const yPosition = useRef(new Animated.Value(-1)).current;\n  const arcs = pie()(segments.map(() => 1)).map((arc: SuperAny, index) => {\n    const instance = d3Arc()\n      .padAngle(padAngle)\n      .outerRadius(radius)\n      .innerRadius(innerRadius);\n    return {\n      centroid: instance.centroid(arc),\n      path: instance(arc),\n      segment: segments[index],\n    };\n  });\n\n  const onSpinComplete = useCallback(() => {\n    spinning.current = false;\n    const winnerIndex = getWinnerIndex({\n      angleOfSegment,\n      location: location.current,\n      numOfSegments,\n    });\n    onComplete(segments[winnerIndex]);\n  }, [angleOfSegment, numOfSegments, onComplete, segments]);\n\n  const spin = useCallback(() => {\n    const newLocation = getNewLocation({\n      location: location.current,\n      maxSpin,\n      minSpin,\n      numOfSegments,\n    });\n    location.current = newLocation;\n    spinning.current = true;\n    Animated.timing(angle, {\n      duration: spinSpeed,\n      easing: Easing.inOut(Easing.sin),\n      toValue: newLocation,\n      useNativeDriver,\n    }).start(onSpinComplete);\n  }, [\n    angle,\n    maxSpin,\n    minSpin,\n    numOfSegments,\n    onSpinComplete,\n    spinSpeed,\n    useNativeDriver,\n  ]);\n\n  const onPress = useCallback(() => {\n    if (spinning.current) return;\n    spin();\n  }, [spin]);\n\n  const bounce = useCallback(\n    (toValue: number) => {\n      const config = { duration: bounceSpeed, toValue, useNativeDriver };\n      Animated.timing(yPosition, config).start(() =>\n        bounce(toValue === 1 ? -1 : 1),\n      );\n    },\n    [bounceSpeed, useNativeDriver, yPosition],\n  );\n\n  useEffect(() => {\n    if (noBounce) return;\n\n    bounce(1);\n  }, [bounce, noBounce]);\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Animated.View\n        style={{\n          alignItems: 'center',\n          backgroundColor: background,\n          borderRadius: size,\n          height: size,\n          marginTop: knobOffset,\n          transform: [\n            {\n              translateY: yPosition.interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [-10, 0, -10],\n              }),\n            },\n          ],\n          width: size,\n          ...dropShadow(3),\n        }}\n      >\n        <Svg\n          style={{\n            height: knobSize,\n            marginTop: -knobOffset,\n            position: 'absolute',\n            width: knobSize,\n            ...dropShadow(6),\n          }}\n        >\n          <Polygon\n            fill={colors.background.tertiary}\n            points={`${knobSize / 2},0 ${knobSize * 0.85},${knobSize / 3} ${\n              knobSize / 2\n            },${knobSize} ${knobSize * 0.15},${knobSize / 3},`}\n            stroke={colors.background.secondary}\n            strokeWidth={0.2}\n          />\n        </Svg>\n        <Animated.View\n          style={{\n            height: size,\n            transform: [\n              {\n                rotate: angle.interpolate({\n                  inputRange: [-360, 0, 360],\n                  outputRange: ['-360deg', '0deg', '360deg'],\n                }),\n              },\n            ],\n            width: size,\n          }}\n        >\n          <Svg\n            style={{\n              transform: [{ rotate: `-${angleOffset}deg` }],\n            }}\n          >\n            <G\n              x={radius}\n              y={radius}\n            >\n              {arcs.map((arc, i) => (\n                <G key={v4()}>\n                  <Path\n                    d={String(arc.path)}\n                    fill={arc.segment.color}\n                  />\n                  <G\n                    origin={`${arc.centroid}`}\n                    rotation={(i * 360) / segments.length + angleOffset}\n                  >\n                    <Text\n                      fill={text}\n                      fontSize={fontSize}\n                      textAnchor=\"middle\"\n                      x={arc.centroid[0]}\n                      y={arc.centroid[1] - knobOffset / 2}\n                    >\n                      {arc.segment.display}\n                    </Text>\n                  </G>\n                </G>\n              ))}\n            </G>\n          </Svg>\n        </Animated.View>\n      </Animated.View>\n    </TouchableOpacity>\n  );\n});\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useMemo, useState } from 'react';\nimport { Screen, Text } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { Segment } from './types';\nimport { Wheel } from './Wheel';\n\nconst useSegments = () => {\n  const colors = useColors();\n  return useMemo(\n    () => [\n      { color: colors.background.positive, display: '1', value: '1' },\n      { color: colors.background.negative, display: '2', value: '2' },\n      { color: colors.background.secondary, display: '3', value: '3' },\n      { color: colors.background.warning, display: '4', value: '4' },\n      { color: colors.background.tertiary, display: '5', value: '5' },\n      { color: colors.background.accent, display: '6', value: '6' },\n      { color: colors.background.primaryA, display: '7', value: '7' },\n    ],\n    [\n      colors.background.accent,\n      colors.background.negative,\n      colors.background.positive,\n      colors.background.primaryA,\n      colors.background.secondary,\n      colors.background.tertiary,\n      colors.background.warning,\n    ],\n  );\n};\n\nexport const FortuneWheel = memo(function PlaygroundFortuneWheel() {\n  const segments = useSegments();\n  const { goBack } = useNavigation();\n  const [winner, setWinner] = useState<null | string>(null);\n\n  const onComplete = useCallback((a: Segment) => {\n    setWinner(a.display);\n  }, []);\n\n  // TODO: fix text on android\n  // TODO: increase duration based on spin\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"FortuneWheel\"\n    >\n      <Wheel\n        onComplete={onComplete}\n        segments={segments}\n      />\n      <Text\n        center\n        title={String(winner)}\n      />\n    </Screen>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { Button, View } from '../../../../components';\nimport { spacing } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { resetBoard, toggleRun } from './redux';\n\nexport const Buttons = memo(function Buttons() {\n  const dispatch = useRootDispatch();\n  const run = useRootSelector((state) => state.gameOfLife.run);\n  const onRandom = useCallback(() => dispatch(resetBoard(0.5)), [dispatch]);\n  const onStart = useCallback(() => dispatch(toggleRun()), [dispatch]);\n  const onClear = useCallback(() => dispatch(resetBoard(0)), [dispatch]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: spacing(4),\n      }}\n    >\n      <Button\n        emphasis=\"medium\"\n        onPress={onStart}\n        title={run ? 'stop' : 'start'}\n      />\n      <Button\n        emphasis=\"medium\"\n        onPress={onRandom}\n        title=\"random\"\n      />\n      <Button\n        emphasis=\"medium\"\n        onPress={onClear}\n        title=\"clear\"\n      />\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { TouchableOpacity } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport {\n  getSmallestDimension,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\nimport { getCell, updateCell } from './redux';\n\ntype Props = {\n  x: number;\n  y: number;\n};\n\nexport const Cell = memo(function Cell({ x, y }: Props) {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const smallest = useRootSelector(getSmallestDimension);\n  const selected = useRootSelector(getCell(x, y));\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const size = smallest / count;\n\n  const onItemPress = useCallback(\n    (dx: number, dy: number) => () => {\n      dispatch(updateCell(dx, dy));\n    },\n    [dispatch],\n  );\n\n  return (\n    <TouchableOpacity\n      onPress={onItemPress(x, y)}\n      style={{\n        backgroundColor: selected\n          ? colors.background.accent\n          : colors.background.primaryA,\n        borderColor: colors.background.secondary,\n        borderWidth: 1,\n        height: size,\n        width: size,\n      }}\n    />\n  );\n});\n","import React, { memo, useMemo } from 'react';\nimport { v4 } from 'uuid';\nimport { View } from '../../../../components';\nimport { useRootSelector } from '../../../../redux';\nimport { Cell } from './Cell';\nimport { useLoop } from './useLoop';\n\nexport const GameBoard = memo(function GameBoard() {\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const array = useMemo(() => Array(count).fill(0), [count]);\n  useLoop();\n\n  return (\n    <View>\n      {array.map((_, x) => (\n        <View\n          key={v4()}\n          style={{ flexDirection: 'row', justifyContent: 'center' }}\n        >\n          {array.map((__, y) => (\n            <Cell\n              key={v4()}\n              x={x}\n              y={y}\n            />\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n});\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { loopBoard } from './redux';\n\nexport const useLoop = (): void => {\n  const dispatch = useRootDispatch();\n  const run = useRootSelector((state) => state.gameOfLife.run);\n  const delay = useRootSelector((state) => state.gameOfLife.delay);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const loop = useCallback(() => {\n    if (!run) return;\n    dispatch(loopBoard());\n  }, [dispatch, run]);\n\n  useEffect(() => {\n    if (!run) return undefined;\n    timeoutRef.current = setInterval(loop, delay);\n    return () => {\n      if (timeoutRef.current) clearInterval(timeoutRef.current);\n    };\n  }, [delay, dispatch, loop, run]);\n};\n","import React, { memo, useCallback } from 'react';\nimport { Slider, Text, View } from '../../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { updateCount, updateDelay } from './redux';\n\nexport const Header = memo(function Header() {\n  const dispatch = useRootDispatch();\n  const delay = useRootSelector((state) => state.gameOfLife.delay);\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const onCountSlide = useCallback(\n    (v: number) => dispatch(updateCount(v)),\n    [dispatch],\n  );\n  const onDelaySlide = useCallback(\n    (v: number) => dispatch(updateDelay(v)),\n    [dispatch],\n  );\n\n  return (\n    <View>\n      <View row>\n        <Text\n          style={{ alignSelf: 'center' }}\n          title={`count: ${count}`}\n          type=\"h5\"\n        />\n        <Slider\n          flex\n          maximumValue={100}\n          minimumValue={1}\n          onSlidingComplete={onCountSlide}\n          step={1}\n          value={10}\n        />\n      </View>\n      <View row>\n        <Text\n          style={{ alignSelf: 'center' }}\n          title={`delay: ${Math.floor(delay)}`}\n          type=\"h5\"\n        />\n        <Slider\n          flex\n          maximumValue={100}\n          minimumValue={1}\n          onSlidingComplete={onDelaySlide}\n          step={1}\n          value={10}\n        />\n      </View>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useEffect, useState } from 'react';\nimport { Screen, ScrollView, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { Buttons } from './Buttons';\nimport { GameBoard } from './GameBoard';\nimport { Header } from './Header';\nimport { resetBoard } from './redux';\n\nexport const GameOfLife = memo(function PlaygroundGameOfLife() {\n  const colors = useColors();\n  const [loading, setLoading] = useState(true);\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n\n  useEffect(() => {\n    dispatch(resetBoard(0.5));\n    setLoading(false);\n  }, [dispatch]);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Game of life\"\n    >\n      <ScrollView\n        style={{\n          backgroundColor: colors.background.secondary,\n          padding: spacing(4),\n        }}\n      >\n        {loading ? (\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"loading...\"\n            type=\"h5\"\n          />\n        ) : (\n          <View>\n            <Header />\n            <Buttons />\n            <GameBoard />\n          </View>\n        )}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Animated } from 'react-native';\nimport { Button, Text, View } from '../../../../components';\nimport { LayoutDimensions, useColors, useDriver } from '../../../../features';\n\ntype Props = {\n  duration?: number;\n  layout: LayoutDimensions;\n  radius?: number;\n};\n\ntype PapiObject = {\n  dx: number;\n  dy: number;\n  position: Animated.ValueXY;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst getInitialPapiLocation = (\n  layout: LayoutDimensions,\n  radius: number,\n): PapiObject => {\n  const cord = { x: layout.width / 2 - radius, y: layout.height / 8 - radius };\n  return {\n    ...cord,\n    dx: 0,\n    dy: 10,\n    position: new Animated.ValueXY(cord),\n    radius,\n  };\n};\n\nconst getNextDraw = (\n  layout: LayoutDimensions,\n  papi: PapiObject,\n): PapiObject => {\n  const next = { ...papi };\n\n  next.x += next.dx;\n  next.y += next.dy;\n\n  const top = next.x - layout.x;\n  if (top <= 0) {\n    next.dx = -next.dx;\n    next.x = 0;\n  }\n  const right = layout.width - layout.x - next.x - next.radius * 2;\n  if (right <= 0) {\n    next.dx = -next.dx;\n    next.x = layout.x + layout.width - next.radius * 2;\n  }\n  const left = next.y - layout.y;\n  if (left <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y;\n  }\n  const bottom = layout.height - layout.y - next.y - next.radius * 2;\n  if (bottom <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y + layout.height - next.radius * 2;\n  }\n\n  return next;\n};\n\nexport const Game = memo(function Game({\n  layout,\n  radius = 20,\n  duration = 50,\n}: Props) {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const papi = useRef(getInitialPapiLocation(layout, radius));\n  const [score, setScore] = useState(0);\n  const [pause, setPause] = useState(false);\n\n  const draw = useCallback(() => {\n    const papiAnimation = Animated.timing(papi.current.position, {\n      duration,\n      toValue: { x: papi.current.x, y: papi.current.y },\n      useNativeDriver,\n    });\n\n    if (pause) {\n      papiAnimation.stop();\n      return;\n    }\n\n    Animated.parallel([papiAnimation]).start(({ finished }) => {\n      if (!finished) return;\n\n      papi.current = getNextDraw(layout, papi.current);\n\n      draw();\n    });\n  }, [duration, layout, pause, useNativeDriver]);\n\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  const handleOnPress = useCallback(() => {\n    setPause((p) => !p);\n    setScore((p) => p + 1);\n  }, []);\n\n  return (\n    <>\n      <View\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          position: 'absolute',\n          width: '100%',\n          zIndex: 2,\n        }}\n      >\n        <Text\n          center\n          title={String(score)}\n          type=\"h2\"\n        />\n        <View>\n          <Button\n            color={pause ? 'primaryA' : 'positive'}\n            onPress={handleOnPress}\n            title={pause ? 'pause' : 'start'}\n          />\n          <Button\n            onPress={handleOnPress}\n            title=\"reset\"\n          />\n        </View>\n      </View>\n      <Animated.View\n        style={{\n          ...papi.current.position.getLayout(),\n          backgroundColor: colors.tag.green,\n          borderColor: colors.border.positive,\n          borderRadius: radius,\n          borderWidth: 1,\n          height: radius * 2,\n          justifyContent: 'center',\n          position: 'absolute',\n          width: radius * 2,\n        }}\n      />\n    </>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Screen, View } from '../../../../components';\nimport { useColors, useLayout } from '../../../../features';\nimport { Game } from './Game';\n\nexport const PapiJump = memo(function PapiJump() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const { layout, onLayout } = useLayout();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Papi Jump\"\n    >\n      <View\n        onLayout={onLayout}\n        style={styles.container}\n      >\n        {layout ? <Game layout={layout} /> : null}\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const SlotMachine = memo(function SlotMachine() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Slot Machine\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const Snake = memo(function Snake() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Snake\"\n    />\n  );\n});\n","import { Board, BoardValue, Direction, PlayerTurn, State } from './types';\n\ntype DfsProps = {\n  c?: number;\n  d: Direction;\n  i: number;\n  j: number;\n  m: Board;\n  t: BoardValue;\n};\n\nconst dfs = ({ m, d, i, j, t, c = 0 }: DfsProps): number => {\n  if (i < 0 || j < 0 || i >= m.length || j >= m[0].length || m[i][j] !== t)\n    return 0;\n  const next = c + 1;\n  return Math.max(dfs({ c: next, d, i: i + d[0], j: j + d[1], m, t }), next);\n};\n\ntype WinnerProps = {\n  board: Board;\n  boardSize: number;\n  i: number;\n  j: number;\n};\n\nexport const getWinner = ({\n  board,\n  i,\n  j,\n  boardSize,\n}: WinnerProps): BoardValue => {\n  const t = board[i][j];\n  const row =\n    dfs({ d: [0, -1], i, j, m: board, t }) +\n    dfs({ d: [0, 1], i, j, m: board, t }) -\n    1;\n  const col =\n    dfs({ d: [-1, 0], i, j, m: board, t }) +\n    dfs({ d: [1, 0], i, j, m: board, t }) -\n    1;\n  const dRow =\n    dfs({ d: [-1, -1], i, j, m: board, t }) +\n    dfs({ d: [1, 1], i, j, m: board, t }) -\n    1;\n  const dCol =\n    dfs({ d: [-1, 1], i, j, m: board, t }) +\n    dfs({ d: [1, -1], i, j, m: board, t }) -\n    1;\n  return Math.max(row, col, dRow, dCol) === boardSize ? t : 0;\n};\n\nexport const getValue = (n: number): string =>\n  n === 0 ? '' : n === 1 ? 'x' : 'o';\n\nexport const getNextValue = (turn: PlayerTurn): BoardValue =>\n  turn === 'white' ? 1 : -1;\n\ntype UpdateBoardProps = {\n  board: Board;\n  i: number;\n  j: number;\n  v: BoardValue;\n};\n\nexport const getUpdatedBoard = ({\n  board,\n  i,\n  j,\n  v,\n}: UpdateBoardProps): Board => {\n  const copy = [...board];\n  copy[i][j] = v;\n  return copy;\n};\n\nexport const getInitialState = (boardSize: number): State => {\n  const board: Board = [];\n  for (let i = 0; i < boardSize; i++) {\n    const row: BoardValue[] = [];\n    for (let j = 0; j < boardSize; j++) row.push(0);\n    board.push(row);\n  }\n  return { board, state: 'playing', turn: 'white', winner: null };\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { v4 } from 'uuid';\nimport {\n  Button,\n  Screen,\n  Text,\n  TouchableOpacity,\n  View,\n} from '../../../../components';\nimport { useColors } from '../../../../features';\nimport {\n  getLandscapeOrientation,\n  getSmallestDimension,\n  useRootSelector,\n} from '../../../../redux';\nimport { State } from './types';\nimport {\n  getInitialState,\n  getNextValue,\n  getUpdatedBoard,\n  getValue,\n  getWinner,\n} from './utils';\n\nexport const TicTacToe = memo(function TicTacToe() {\n  const boardSize = 3;\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  const [game, setGame] = useState<State>(getInitialState(boardSize));\n  const smallest = useRootSelector(getSmallestDimension);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const size = smallest / (boardSize + 1);\n  const buttonTitle = game.state === 'game-over' ? 'new game' : 'reset';\n  const turnTitle = game.winner\n    ? `winner ${game.winner}`\n    : `${game.turn}'s move`;\n\n  const onButtonPress = useCallback(() => {\n    setGame(getInitialState(boardSize));\n  }, []);\n\n  const onCellPress = useCallback(\n    (i: number, j: number) => () => {\n      setGame((p) => {\n        const v = getNextValue(p.turn);\n        const updatedBoard = getUpdatedBoard({ board: p.board, i, j, v });\n        const didWin = getWinner({ board: p.board, boardSize, i, j });\n        const winner = didWin === 1 ? 'white' : didWin === -1 ? 'black' : null;\n        return {\n          ...p,\n          board: updatedBoard,\n          state: didWin === 0 ? 'playing' : 'game-over',\n          turn: p.turn === 'white' ? 'black' : 'white',\n          winner,\n        };\n      });\n    },\n    [],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Tic Tac Toe\"\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          backgroundColor: colors.background.secondary,\n          flex: 1,\n          flexDirection: landscape ? 'row' : 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <View>\n          {game.board.map((row, i) => (\n            <View\n              key={v4()}\n              row\n            >\n              {row.map((_, j) => (\n                <TouchableOpacity\n                  disabled={\n                    game.board[i][j] !== 0 || game.state === 'game-over'\n                  }\n                  key={v4()}\n                  onPress={onCellPress(i, j)}\n                  style={{\n                    alignItems: 'center',\n                    backgroundColor: colors.background.primaryA,\n                    borderColor: colors.background.secondary,\n                    borderWidth: 2,\n                    height: size,\n                    justifyContent: 'center',\n                    width: size,\n                  }}\n                >\n                  <Text\n                    title={getValue(game.board[i][j])}\n                    type=\"h4\"\n                  />\n                </TouchableOpacity>\n              ))}\n            </View>\n          ))}\n        </View>\n        <View style={{ alignItems: 'center' }}>\n          <Text title={turnTitle} />\n          <Button\n            onPress={onButtonPress}\n            title={buttonTitle}\n          />\n        </View>\n      </View>\n    </Screen>\n  );\n});\n","type Category = 'features' | 'games' | 'storybook' | 'creations' | 'none';\ntype RouteCategories = Record<string, Category>;\n\nconst routeCategories: RouteCategories = {\n  'apple-fit': 'creations',\n  'apple-mask': 'creations',\n  'apple-stopwatch': 'creations',\n  archero: 'games',\n  ball: 'creations',\n  bejeweled: 'games',\n  'bouncing-balls': 'features',\n  chat: 'features',\n  colors: 'storybook',\n  crash: 'games',\n  drag: 'creations',\n  drift: 'games',\n  'flappy-bird': 'games',\n  fonts: 'storybook',\n  'fortune-wheel': 'games',\n  'game-of-life': 'games',\n  'infinite-images': 'features',\n  inputs: 'storybook',\n  landing: 'none',\n  modals: 'storybook',\n  okrs: 'creations',\n  'papi-jump': 'games',\n  paragraphs: 'storybook',\n  'pinch-spread': 'features',\n  questionnaire: 'creations',\n  'recycler-flatList': 'features',\n  'search-bar': 'features',\n  'skeleton-loader': 'features',\n  'slot-machine': 'games',\n  snake: 'games',\n  startup: 'creations',\n  'swipe-feed': 'features',\n  themes: 'storybook',\n  'tic-tac-toe': 'games',\n  tinder: 'creations',\n};\n\ntype NavParams = Record<string, undefined>;\n\nexport const navParams: NavParams = Object.keys(routeCategories).reduce(\n  (acc, key) => ({ ...acc, [key]: undefined }),\n  {},\n);\n\ntype LandingRoutes = { [key in Category]: string[] };\nexport const landingRoutes: LandingRoutes = Object.keys(routeCategories).reduce(\n  (acc, key) => ({\n    ...acc,\n    [routeCategories[key]]: [...acc[routeCategories[key]], key],\n  }),\n  { creations: [], features: [], games: [], none: [], storybook: [] },\n);\n","import React, { ReactNode } from 'react';\nimport { View } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype RowProps = {\n  children: ReactNode;\n};\nexport const Row = ({ children }: RowProps) => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        paddingHorizontal: spacing(4),\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\nimport { Spacing, Text } from '../../../components';\n\ntype TitleProps = {\n  description: string;\n  title: string;\n};\n\nexport const Title = ({ title, description }: TitleProps) => {\n  return (\n    <Spacing padding={4}>\n      <Text\n        title={title}\n        type=\"h5\"\n      />\n      <Text\n        emphasis=\"medium\"\n        title={description}\n        type=\"caption\"\n      />\n    </Spacing>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport {\n  Card,\n  FlatList,\n  Screen,\n  Spacing,\n  Text,\n  TouchableOpacity,\n  View,\n} from '../../../components';\nimport { spacing, useColors } from '../../../features';\nimport { SuperAny } from '../../../types/types';\nimport { landingRoutes } from '../navParams';\nimport { Row } from './Row';\nimport { Title } from './Title';\n\nexport const Landing = memo(function Playground() {\n  const colors = useColors();\n  const { goBack, navigate } = useNavigation<SuperAny>();\n  const navToItem = useCallback(\n    (item: string) => () => navigate(item),\n    [navigate],\n  );\n  const renderItem = useCallback<ListRenderItem<string>>(\n    ({ item }) => (\n      <TouchableOpacity\n        key={item}\n        onPress={navToItem(item)}\n      >\n        <View style={{ paddingVertical: spacing(2) }}>\n          <Text\n            bold\n            title={item}\n            type=\"body2\"\n          />\n        </View>\n      </TouchableOpacity>\n    ),\n    [navToItem],\n  );\n  const keyExtractor = useCallback((item: string) => item, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Playground\"\n    >\n      <View\n        style={{\n          backgroundColor: colors.background.secondary,\n          flex: 1,\n          paddingVertical: spacing(2),\n        }}\n      >\n        <Row>\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"component examples\"\n              title=\"storybook\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingBottom: spacing(2),\n                paddingHorizontal: spacing(4),\n              }}\n              data={landingRoutes.storybook}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n          <Spacing padding={2} />\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"polished modules\"\n              title=\"features\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingBottom: spacing(2),\n                paddingHorizontal: spacing(4),\n              }}\n              data={landingRoutes.features}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n        </Row>\n        <Row>\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"interactive fun\"\n              title=\"games\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingBottom: spacing(2),\n                paddingHorizontal: spacing(4),\n              }}\n              data={landingRoutes.games}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n          <Spacing padding={2} />\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"misc creations\"\n              title=\"creations\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingBottom: spacing(2),\n                paddingHorizontal: spacing(4),\n              }}\n              data={landingRoutes.creations}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n        </Row>\n      </View>\n    </Screen>\n  );\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport {\n  Colors,\n  Fonts,\n  Inputs,\n  Modals,\n  Paragraphs,\n  Themes,\n} from './Components';\nimport {\n  AppleFit,\n  AppleMask,\n  AppleStopWatch,\n  Ball,\n  Drag,\n  OKRs,\n  Questionnaire,\n  Startup,\n  Tinder,\n} from './Creations';\nimport {\n  BouncingBalls,\n  Chat,\n  ImageCollection,\n  KeyboardScroll,\n  PinchSpread,\n  SearchBar,\n  SkeletonLoading,\n  SwipeFeed,\n} from './Features';\nimport {\n  Archero,\n  Bejeweled,\n  Crash,\n  Drift,\n  FlappyBird,\n  FortuneWheel,\n  GameOfLife,\n  PapiJump,\n  SlotMachine,\n  Snake,\n  TicTacToe,\n} from './Games';\nimport { Landing } from './Landing';\nimport { navParams } from './navParams';\n\nconst noHeader = { headerShown: false };\nconst Stack = createStackNavigator<typeof navParams>();\n\nexport default memo(function Games() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen\n        component={Landing}\n        name=\"landing\"\n      />\n      {/* storybook */}\n      <Stack.Screen\n        component={Colors}\n        name=\"colors\"\n      />\n      <Stack.Screen\n        component={Themes}\n        name=\"themes\"\n      />\n      <Stack.Screen\n        component={Fonts}\n        name=\"fonts\"\n      />\n      <Stack.Screen\n        component={Paragraphs}\n        name=\"paragraphs\"\n      />\n      <Stack.Screen\n        component={Inputs}\n        name=\"inputs\"\n      />\n      <Stack.Screen\n        component={Modals}\n        name=\"modals\"\n      />\n\n      {/* games */}\n      <Stack.Screen\n        component={PapiJump}\n        name=\"papi-jump\"\n      />\n      <Stack.Screen\n        component={Snake}\n        name=\"snake\"\n      />\n      <Stack.Screen\n        component={Archero}\n        name=\"archero\"\n      />\n      <Stack.Screen\n        component={Crash}\n        name=\"crash\"\n      />\n      <Stack.Screen\n        component={FlappyBird}\n        name=\"flappy-bird\"\n      />\n      <Stack.Screen\n        component={TicTacToe}\n        name=\"tic-tac-toe\"\n      />\n      <Stack.Screen\n        component={GameOfLife}\n        name=\"game-of-life\"\n      />\n      <Stack.Screen\n        component={Bejeweled}\n        name=\"bejeweled\"\n      />\n      <Stack.Screen\n        component={SlotMachine}\n        name=\"slot-machine\"\n      />\n      <Stack.Screen\n        component={FortuneWheel}\n        name=\"fortune-wheel\"\n      />\n      <Stack.Screen\n        component={Drift}\n        name=\"drift\"\n      />\n\n      {/* features */}\n      <Stack.Screen\n        component={Chat}\n        name=\"chat\"\n      />\n      <Stack.Screen\n        component={ImageCollection}\n        name=\"infinite-images\"\n      />\n      <Stack.Screen\n        component={SkeletonLoading}\n        name=\"skeleton-loader\"\n      />\n      <Stack.Screen\n        component={KeyboardScroll}\n        name=\"recycler-flatList\"\n      />\n      <Stack.Screen\n        component={SearchBar}\n        name=\"search-bar\"\n      />\n      <Stack.Screen\n        component={SwipeFeed}\n        name=\"swipe-feed\"\n      />\n      <Stack.Screen\n        component={BouncingBalls}\n        name=\"bouncing-balls\"\n      />\n      <Stack.Screen\n        component={PinchSpread}\n        name=\"pinch-spread\"\n      />\n\n      {/* creations */}\n      <Stack.Screen\n        component={Ball}\n        name=\"ball\"\n      />\n      <Stack.Screen\n        component={Drag}\n        name=\"drag\"\n      />\n      <Stack.Screen\n        component={OKRs}\n        name=\"okrs\"\n      />\n      <Stack.Screen\n        component={Startup}\n        name=\"startup\"\n      />\n      <Stack.Screen\n        component={Questionnaire}\n        name=\"questionnaire\"\n      />\n      <Stack.Screen\n        component={AppleMask}\n        name=\"apple-mask\"\n      />\n      <Stack.Screen\n        component={AppleStopWatch}\n        name=\"apple-stopwatch\"\n      />\n      <Stack.Screen\n        component={AppleFit}\n        name=\"apple-fit\"\n      />\n      <Stack.Screen\n        component={Tinder}\n        name=\"tinder\"\n      />\n    </Stack.Navigator>\n  );\n});\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n"],"names":["ButtonGroup","memo","emphasis","colors","useColors","keys","Object","text","handlePress","useCallback","flex","center","style","paddingBottom","spacing","title","type","map","c","buttonStyle","margin","color","disabled","key","v4","onPress","dropShadow","FontGroup","sizes","fontSizes","alignItems","bold","TagGroup","tag","ThemeGroup","dispatch","useRootDispatch","currentTheme","useRootSelector","state","theme","themes","flexDirection","justifyContent","changeTheme","Title","padding","Colors","goBack","useNavigation","onLeftPress","row","Fonts","contentContainerStyle","backgroundColor","background","secondary","Inputs","useState","email","error","loading","name","password","form","setForm","handleChange","val","prev","handleSubmit","handleOnSubmit","Keyboard","paddingHorizontal","paddingVertical","keyboardShouldPersistTaps","containerStyle","onChangeText","optional","placeholder","value","keyboardType","textContentType","secureTextEntry","autoCapitalize","autoComplete","autoCorrect","blurOnSubmit","editable","onSubmitEditing","returnKeyType","Item","description","icon","hidden","active","marginBottom","styles","StyleSheet","button","borderColor","border","primaryA","borderRadius","borderWidth","height","container","subtitle","paddingLeft","paddingTop","textContainer","accent","length","size","Location","locations","id","onItemPress","index","location","daysOfWeek","OneTime","buttons","laterToday","dayjs","add","set","evening","tomorrow","nextWeek","nextMonth","yesterday","subtract","format","visible","day","generateButtons","valueOf","Radio","onChange","horizontal","Repeat","setActive","items","item","reminderTypes","Create","onBackgroundPress","onOneTimePress","onLocationPress","setState","section","submit","marginTop","handleReminderTypePress","Alert","showOverlay","Reminders","onComplete","modals","createReminder","customDate","reminders","selected","undefined","handleOneTimeReminder","date","isBefore","handleCustomDateClose","handleCreateReminderClose","handleLocation","handleLocationClose","ModalManager","modal","onClose","handleClose","setValue","handleTextChange","v","onCancelPress","onConfirmPress","onCancel","Modals","setModal","handleModalChange","nextModal","data","paragraphs","titleType","Paragraphs","showsVerticalScrollIndicator","sections","image","require","cards","target","chart","Themes","elevation","setElevation","handleSlider","columns","getLandscapeOrientation","renderItem","Image","source","resizeMode","width","maximumValue","minimumTrackTintColor","minimumValue","onValueChange","step","numColumns","AppleFit","Section","imageRatio","getWidth","leftWidth","imageWidth","borderBottomColor","tertiary","borderBottomWidth","String","AppleMask","_toArray","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","ButtonRound","colorScheme","buttonBorder","primaryB","buttonTitle","fontSize","ButtonsRow","children","buttonsRow","alignSelf","Timer","interval","pad","n","toString","minutes","Math","floor","seconds","milliseconds","timerContainer","substr","Lap","num","fastest","slowest","positive","lap","borderTopWidth","lapText","fontFamily","negative","lapStyle","LapsTable","laps","timer","finishedLaps","slice","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","forEach","scrollView","AppleStopWatch","now","start","useRef","elapsed","reduce","total","curr","fontWeight","useEffect","current","clearTimeout","timestamp","Date","getTime","firstLap","other","stop","clearInterval","reset","run","setInterval","resume","Ball","getHeight","ballPosition","Animated","x","y","useNativeDriver","useDriver","ball","marginLeft","animate","dx","dy","toValue","onInitialPress","onRandomPress","random","testID","getLayout","Drag","useDropShadow","canvas","setCanvas","initialPosition","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderEnd","onPanResponderMove","_","gestureState","maxY","minY","maxX","minX","getPosition","handleCanvas","event","nativeEvent","layout","onLayout","left","position","right","top","panHandlers","OKRs","Questionnaires","questionnaires","getQuestionnaireArray","actionSheet","setActionSheet","handleLongPress","removeQuestionnaire","handleItemPress","selectQuestionnaire","handleActionSheetClose","handleCreate","createQuestionnaire","handleItemMenu","questions","onLongPress","keyExtractor","extraData","fab","bottom","choices","next","Dimensions","viewabilityConfig","itemVisiblePercentThreshold","Questionnaire","output","setOutput","currentIndex","tableViewRef","handleViewableItemsChanged","viewableItems","onProgress","direction","scrollToIndex","animated","onSelection","choice","updateSelection","updateProgress","onRef","onViewableItemsChanged","pagingEnabled","removeClippedSubviews","scrollEnabled","showsHorizontalScrollIndicator","initialState","biggestObstacle","launchWeeks","launched","morale","primaryMetric","targetCustomer","topGoals","usersLearnedFrom","usersTalkedTo","Startup","launchSubText","parseInt","updateForm","handleLaunchChange","Boolean","handleUserChange","handleMoraleChange","handleObstacleChange","handleLearnChange","handleMetricChange","handleGoalChange","handleWeeksToLaunchChange","Tinder","getRandomNumber","rotate","angle","cos","sin","getItemOverlap","a","b","ac","radius","bc","getItemCollision","maxSpeed","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","Balls","count","speed","difficulty","collision","i","coordinate","push","getInitialItems","score","setScore","draw","duration","finished","getNextDraw","j","multiplier","coordinates","adjustsFontSizeToFit","BouncingBalls","useLayout","relativeTime","paddingRight","userId","createdAt","message","Items","itemsRef","messages","getActiveChatMessagesOrderByCreatedAt","scrollToItem","initialNumToRender","inverted","TextField","textFieldRef","textField","chatMessage","submittable","getChatSubmittable","onMessageChange","typeChatMessage","onSubmit","trim","conversationId","updatedAt","createChatMessage","focus","removeError","Chat","insets","keyboardHeight","s","device","bottomInset","columnWidth","Array","fill","ImageCollection","d","handleFetchMore","renderImage","uri","onEndReached","onEndReachedThreshold","lorem","KeyboardScroll","setMessage","setLoading","timeout","setTimeout","refreshing","setRefreshing","onRefetch","onRowRender","colorWithOpacity","generateItems","setData","listRef","p","scrollToEnd","itemHeight","itemWidth","GestureHandler","minTouches","finish","this","touches","touch","recordFinish","recordStart","outcome","determineOutcome","identifier","locationX","locationY","determineCenter","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","numRecordedTouched","point","pinch","spread","isSpread","isPinch","PinchSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","iconSearch","SearchBar","animation","iconName","input","keyboardVisible","translateIcon","interpolate","inputRange","outputRange","fadeContainer","header","textInput","changeIcon","iconChangeTimeout","animationDuration","onSearchBarFocus","onSearchBarUnFocus","transform","translateX","LoadingProfile","banner","noPadding","borderTopLeftRadius","borderTopRightRadius","zIndex","LoadingSection","SkeletonLoading","mounted","load","onRetry","formatRelativeDate","years","diff","weeks","days","hours","SwipeCard","onSwipeComplete","onSwipePercentChange","body","cardWidth","imageHeight","swipeThreshold","setCardWidth","panResponder","onMoveShouldSetPanResponder","gesture","onStartShouldSetPanResponder","ellipsizeMode","numberOfLines","toUpperCase","initialItems","Badge","percent","badgeSize","SwipeCards","feed","setFeed","filter","ImagePlaceholder","SwipeFeed","charSize","getLimit","limit","getBounds","Archero","x0","y0","window","dimension","dimensions","setDimensions","joystickSize","joystickCenter","thumbSize","initialJoystickLoc","initialCharLoc","initialThumbLoc","characterValueXY","joystick","thumb","character","addListener","onUpdate","offset","offset2","moveJoystick","vx","vy","moveCharacter","dz","sqrt","z","moveThumb","g","onPanResponderStart","overlay","light","getRandom","initialSelected","Bejeweled","getSmallestDimension","gems","warning","rows","cols","col","getInitialState","board","setBoard","matches","mid","up","down","vertical","getMatches","setSelected","sum","temp","gem","Crash","activeTab","autoCashOut","bidAmount","status","playerGame","setPlayerGame","endTime","history","maxPayout","payout","startTime","game","setGame","gameSeconds","handleTabPress","handleAmountInputChange","amount","handleAutoCashOutChange","handleAmountPress","handleButtonPress","loop","Drift","Bird","Pillar","onTouchStart","FlappyBird","NaN","epsilon","pi","PI","halfPi","tau","acos","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","getNewLocation","minSpin","maxSpin","numOfSegments","spins","getRandomRange","Wheel","textColor","segments","noBounce","spinSpeed","bounceSpeed","knobSize","knobOffset","angleOfSegment","angleOffset","spinning","yPosition","arcs","identity","sortValues","descending","sort","constant","pie","k","a1","array","a0","apply","arguments","da","pa","arc","instance","cornerRadius","padRadius","context","buffer","r0","path","moveTo","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","d3Arc","segment","onSpinComplete","winnerIndex","deg","getWinnerIndex","spin","newLocation","easing","Easing","bounce","config","translateY","Polygon","points","stroke","strokeWidth","G","Path","origin","rotation","Text","textAnchor","display","FortuneWheel","useMemo","useSegments","winner","setWinner","Buttons","gameOfLife","onRandom","resetBoard","onStart","toggleRun","onClear","Cell","smallest","getCell","updateCell","GameBoard","delay","timeoutRef","loopBoard","useLoop","__","Header","onCountSlide","updateCount","onDelaySlide","updateDelay","onSlidingComplete","GameOfLife","Game","papi","cord","getInitialPapiLocation","pause","setPause","papiAnimation","handleOnPress","green","PapiJump","SlotMachine","Snake","dfs","m","boardSize","turn","TicTacToe","landscape","turnTitle","onButtonPress","onCellPress","updatedBoard","copy","getUpdatedBoard","didWin","dRow","dCol","getWinner","routeCategories","archero","bejeweled","chat","crash","drag","drift","fonts","inputs","landing","okrs","questionnaire","snake","startup","tinder","landingRoutes","acc","creations","features","games","none","storybook","Row","Landing","navigate","navToItem","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component","tauEpsilon","_x0","_y0","_x1","_y1","prototype","constructor","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","l01_2","Error","x20","y20","l21_2","l20_2","l21","l01","l","tan","t01","t21","ccw","rect","w","h","from"],"sourceRoot":""}