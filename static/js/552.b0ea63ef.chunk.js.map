{"version":3,"file":"static/js/552.b0ea63ef.chunk.js","mappings":"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","sources":["apps/Playground/Components/Colors/ButtonGroup.tsx","apps/Playground/Components/Colors/FontGroup.tsx","apps/Playground/Components/Colors/TagGroup.tsx","apps/Playground/Components/Colors/ThemeGroup.tsx","apps/Playground/Components/Colors/Title.tsx","apps/Playground/Components/Colors/index.tsx","apps/Playground/Components/Fonts/index.tsx","apps/Playground/Components/Inputs/index.tsx","apps/Playground/Components/Modals/Reminders/Item.tsx","apps/Playground/Components/Modals/Reminders/Location.tsx","apps/Playground/Components/Modals/Reminders/OneTime.tsx","apps/Playground/Components/Modals/Reminders/Radio.tsx","apps/Playground/Components/Modals/Reminders/Repeat.tsx","apps/Playground/Components/Modals/Reminders/Create.tsx","apps/Playground/Components/Modals/Reminders/index.tsx","apps/Playground/Components/Modals/index.tsx","apps/Playground/Components/Paragraphs/data.ts","apps/Playground/Components/Paragraphs/index.tsx","apps/Playground/Components/Themes/index.tsx","apps/Playground/Creations/AppleFit/index.web.tsx","apps/Playground/Creations/AppleMask/index.tsx","../node_modules/@babel/runtime/helpers/esm/toArray.js","apps/Playground/Creations/AppleStopwatch/ButtonRound.tsx","apps/Playground/Creations/AppleStopwatch/ButtonsRow.tsx","apps/Playground/Creations/AppleStopwatch/Timer.tsx","apps/Playground/Creations/AppleStopwatch/Lap.tsx","apps/Playground/Creations/AppleStopwatch/LapsTable.tsx","apps/Playground/Creations/AppleStopwatch/index.tsx","apps/Playground/Creations/Ball/index.tsx","apps/Playground/Creations/Drag/index.tsx","apps/Playground/Creations/OKRs/index.tsx","apps/Playground/Creations/Questionnaire/screens/Questionnaires.tsx","apps/Playground/Creations/Questionnaire/index.tsx","apps/Playground/Creations/Startup/Section.tsx","apps/Playground/Creations/Startup/index.tsx","apps/Playground/Creations/Tinder/index.tsx","apps/Playground/Features/BouncingBalls/utils.tsx","apps/Playground/Features/BouncingBalls/Balls.tsx","apps/Playground/Features/BouncingBalls/index.tsx","apps/Playground/Features/Chat/Item.tsx","apps/Playground/Features/Chat/Items.tsx","apps/Playground/Features/Chat/TextField.tsx","apps/Playground/Features/Chat/index.tsx","apps/Playground/Features/ImageCollection/index.tsx","apps/Playground/Features/KeyboardScroll/index.tsx","apps/Playground/Features/PinchSpread/logic.tsx","apps/Playground/Features/PinchSpread/index.tsx","apps/Playground/Features/SearchBar/index.tsx","apps/Playground/Features/SkeletonLoader/LoadingProfile.tsx","apps/Playground/Features/SkeletonLoader/LoadingSection.tsx","apps/Playground/Features/SkeletonLoader/index.tsx","apps/Playground/Features/SwipeFeed/utils.ts","apps/Playground/Features/SwipeFeed/index.tsx","apps/Playground/Games/Archero/index.tsx","apps/Playground/Games/Bejeweled/index.tsx","apps/Playground/Games/Crash/index.tsx","apps/Playground/Games/Drift/index.web.tsx","apps/Playground/Games/FlappyBird/index.tsx","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","apps/Playground/Games/FortuneWheel/utils.tsx","apps/Playground/Games/FortuneWheel/Wheel.tsx","../node_modules/d3-shape/src/pie.js","apps/Playground/Games/FortuneWheel/index.tsx","apps/Playground/Games/GameOfLife/Buttons.tsx","apps/Playground/Games/GameOfLife/Cell.tsx","apps/Playground/Games/GameOfLife/GameBoard.tsx","apps/Playground/Games/GameOfLife/useLoop.ts","apps/Playground/Games/GameOfLife/Header.tsx","apps/Playground/Games/GameOfLife/index.tsx","apps/Playground/Games/PapiJump/Game.tsx","apps/Playground/Games/PapiJump/index.tsx","apps/Playground/Games/SlotMachine/index.web.tsx","apps/Playground/Games/Snake/index.web.tsx","apps/Playground/Games/TicTacToe/utils.ts","apps/Playground/Games/TicTacToe/index.tsx","apps/Playground/navParams.ts","apps/Playground/Landing/Row.tsx","apps/Playground/Landing/Title.tsx","apps/Playground/Landing/index.tsx","apps/Playground/index.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Button, Text } from '../../../../components';\nimport {\n  FontEmphasis,\n  MonoMultiColor,\n  padding,\n  useColors,\n} from '../../../../features';\n\ntype ButtonGroupProps = {\n  emphasis: FontEmphasis;\n};\n\nexport const ButtonGroup = memo(function ButtonGroup({\n  emphasis,\n}: ButtonGroupProps) {\n  const colors = useColors();\n  const keys = Object.keys(colors.text) as Array<keyof MonoMultiColor>;\n  return (\n    <View style={{ flex: 1 }}>\n      <Text\n        center\n        style={{ paddingBottom: padding(5) }}\n        title={emphasis}\n        type=\"h5\"\n      />\n      {keys.map((c) => (\n        <Button\n          buttonStyle={{ margin: 4 }}\n          center\n          color={c}\n          disabled={c === 'disabled'}\n          emphasis={emphasis}\n          key={v4()}\n          title={c}\n        />\n      ))}\n      {keys.map((c) => (\n        <Button\n          buttonStyle={{ margin: 4 }}\n          center\n          color={c}\n          disabled={c === 'disabled'}\n          dropShadow\n          emphasis={emphasis}\n          key={v4()}\n          title={c}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Text } from '../../../../components';\nimport {\n  FontEmphasis,\n  fontSizes,\n  FontType,\n  padding,\n} from '../../../../features';\n\ntype FontGroupProps = {\n  emphasis: FontEmphasis;\n};\n\nexport const FontGroup = memo(function FontGroup({ emphasis }: FontGroupProps) {\n  const sizes = Object.keys(fontSizes) as Array<FontType>;\n  return (\n    <View style={{ flex: 1, alignItems: 'center' }}>\n      <Text\n        bold\n        center\n        style={{ paddingBottom: padding(10) }}\n        title={emphasis}\n        type=\"h6\"\n      />\n      {sizes.map((c) => (\n        <Text\n          center\n          emphasis={emphasis}\n          key={c}\n          title={c}\n          type={c}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Tag } from '../../../../components';\nimport { padding, TagColor, useColors } from '../../../../features';\n\nexport const TagGroup = memo(function TagGroup() {\n  const colors = useColors();\n  const onPress = useCallback(() => undefined, []);\n  const keys = Object.keys(colors.tag) as Array<keyof TagColor>;\n  return (\n    <>\n      {keys.map((c) => (\n        <View\n          key={v4()}\n          style={{ margin: padding(1) }}\n        >\n          <Tag\n            color={c}\n            onPress={onPress}\n            title={c}\n          />\n        </View>\n      ))}\n    </>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Button } from '../../../../components';\nimport {\n  changeTheme,\n  Theme,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\n\nexport const ThemeGroup = memo(function ThemeGroup() {\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentTheme);\n  const themes = useRootSelector((state) => state.theme.themes);\n  const themePress = (theme: Theme) => () => dispatch(changeTheme(theme));\n  return (\n    <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n      {Object.keys(themes).map((key) => (\n        <Button\n          center\n          color={currentTheme === key ? 'positive' : 'primaryA'}\n          emphasis=\"high\"\n          key={key}\n          onPress={themePress(key as Theme)}\n          title={key}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../../components';\nimport { padding } from '../../../../features';\n\ntype Props = { title: string };\n\nexport const Title = memo(function Title({ title }: Props) {\n  return (\n    <Text\n      center\n      style={{ padding: padding(8) }}\n      title={title}\n      type=\"h4\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Screen, ScrollView } from '../../../../components';\nimport { ButtonGroup } from './ButtonGroup';\nimport { FontGroup } from './FontGroup';\nimport { TagGroup } from './TagGroup';\nimport { ThemeGroup } from './ThemeGroup';\nimport { Title } from './Title';\n\nexport const Colors = memo(function DebugColors() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Colors\"\n    >\n      <ScrollView>\n        <Title title=\"Theme\" />\n        <ThemeGroup />\n        <Title title=\"Buttons\" />\n        <View style={{ flexDirection: 'row' }}>\n          <ButtonGroup emphasis=\"high\" />\n          <ButtonGroup emphasis=\"medium\" />\n          <ButtonGroup emphasis=\"low\" />\n        </View>\n        <Title title=\"Tags\" />\n        <TagGroup />\n        <Title title=\"Fonts\" />\n        <View style={{ flexDirection: 'row' }}>\n          <FontGroup emphasis=\"none\" />\n          <FontGroup emphasis=\"high\" />\n          <FontGroup emphasis=\"medium\" />\n          <FontGroup emphasis=\"low\" />\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\n\nexport const Fonts = memo(function PlaygroundFonts() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Fonts\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: padding(4) }}\n        style={{\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Text\n          title=\"H1: The quick brown fox jumps over the lazy dog.\"\n          type=\"h1\"\n        />\n        <Text\n          title=\"h2 The quick brown fox jumps over the lazy dog.\"\n          type=\"h2\"\n        />\n        <Text\n          title=\"H3: The quick brown fox jumps over the lazy dog.\"\n          type=\"h3\"\n        />\n        <Text\n          title=\"H4: The quick brown fox jumps over the lazy dog.\"\n          type=\"h4\"\n        />\n        <Text\n          title=\"H5: The quick brown fox jumps over the lazy dog.\"\n          type=\"h5\"\n        />\n        <Text\n          title=\"H6: The quick brown fox jumps over the lazy dog.\"\n          type=\"h6\"\n        />\n        <Text\n          title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          type=\"subtitle1\"\n        />\n        <Text\n          title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          type=\"subtitle2\"\n        />\n        <Text\n          title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          type=\"body1\"\n        />\n        <Text\n          title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          type=\"body2\"\n        />\n        <Text\n          title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          type=\"overline\"\n        />\n        <Text\n          title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          type=\"caption\"\n        />\n        <Text\n          title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          type=\"button\"\n        />\n        <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Input,\n  KeyboardAwareScrollView,\n  Screen,\n  Text,\n  TextInput,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\n\nexport const Inputs = memo(function Inputs() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  const [form, setForm] = useState({\n    email: '',\n    error: '',\n    name: '',\n    password: '',\n  });\n\n  const handleChange = useCallback(\n    (key: string) => (val: string) => {\n      setForm((prev) => ({ ...prev, [key]: val }));\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(() => {\n    setForm((prev) => ({ ...prev, error: 'Invalid Email' }));\n  }, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Inputs\"\n    >\n      <KeyboardAwareScrollView\n        contentContainerStyle={{\n          paddingHorizontal: padding(4),\n          paddingVertical: padding(2),\n        }}\n        keyboardShouldPersistTaps=\"handled\"\n        style={{\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Card>\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"border\"\n            type=\"h4\"\n          />\n          <Input\n            containerStyle={{ paddingBottom: padding(2) }}\n            error={form.error}\n            onChangeText={handleChange('name')}\n            optional\n            placeholder=\"jane doe\"\n            title=\"Name\"\n            value={form.name}\n          />\n          <Input\n            containerStyle={{ paddingBottom: padding(2) }}\n            error={form.error}\n            keyboardType=\"email-address\"\n            onChangeText={handleChange('email')}\n            placeholder=\"example@gmail.com\"\n            textContentType=\"username\"\n            title=\"Email\"\n            value={form.email}\n          />\n          <Input\n            containerStyle={{ paddingBottom: padding(2) }}\n            onChangeText={handleChange('password')}\n            placeholder=\"•••••••\"\n            secureTextEntry\n            textContentType=\"password\"\n            title=\"Password\"\n            value={form.password}\n          />\n          <Button\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            onPress={handleSubmit}\n            title=\"complete form\"\n          />\n        </Card>\n        <Card>\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"non border\"\n            type=\"h4\"\n          />\n          <TextInput\n            onChangeText={handleChange('name')}\n            placeholder=\"jane doe\"\n            style={{ paddingTop: padding(4) }}\n            value={form.name}\n          />\n          <TextInput\n            keyboardType=\"email-address\"\n            onChangeText={handleChange('email')}\n            placeholder=\"example@gmail.com\"\n            style={{ paddingTop: padding(4) }}\n            textContentType=\"username\"\n            value={form.email}\n          />\n          <TextInput\n            onChangeText={handleChange('password')}\n            placeholder=\"•••••••\"\n            secureTextEntry\n            style={{ paddingVertical: padding(4) }}\n            textContentType=\"password\"\n            value={form.password}\n          />\n          <Button\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            onPress={handleSubmit}\n            title=\"complete form\"\n          />\n        </Card>\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport { Icon, Text, TouchableOpacity } from '../../../../../components';\nimport { padding, useColors } from '../../../../../features';\n\ntype Props = {\n  active?: boolean;\n  description?: string;\n  hidden?: boolean;\n  icon?: string;\n  marginBottom?: boolean;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  title: string;\n};\nexport const Item = memo(function ReminderItem({\n  title,\n  description = '',\n  onPress,\n  icon,\n  style,\n  hidden,\n  active,\n  marginBottom,\n}: Props) {\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    button: {\n      borderColor: colors.border.primaryA,\n      borderRadius: padding(1),\n      borderWidth: 1,\n      flexDirection: 'row',\n      height: padding(13),\n      justifyContent: 'space-between',\n      marginBottom: marginBottom ? padding(2) : 0,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingHorizontal: padding(2),\n    },\n    icon: {\n      justifyContent: 'center',\n    },\n    subtitle: {\n      paddingLeft: 1,\n      paddingTop: padding(1),\n    },\n    textContainer: {\n      flex: 1,\n      justifyContent: 'center',\n    },\n    title: {\n      color: active ? colors.text.accent : colors.text.primaryA,\n    },\n  });\n\n  return hidden ? null : (\n    <TouchableOpacity\n      key={title}\n      onPress={onPress}\n      style={[styles.button, style]}\n    >\n      <View style={styles.container}>\n        <View style={styles.textContainer}>\n          <Text\n            style={styles.title}\n            title={title}\n            type=\"body1\"\n          />\n          {description.length > 0 && (\n            <Text\n              style={styles.subtitle}\n              title={description}\n              type=\"caption\"\n            />\n          )}\n        </View>\n        {icon ? (\n          <Icon\n            name={icon}\n            size={padding(5)}\n            style={styles.icon}\n          />\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { v4 } from 'uuid';\nimport { Item } from './Item';\n\ninterface LocationItem {\n  id: string;\n  subtitle?: string;\n  title: string;\n}\n\ntype Props = {\n  onPress: (value: string) => () => void;\n};\n\nexport const Location = memo(function Location({ onPress }: Props) {\n  const subtitle = 'Tap to add';\n  const locations: LocationItem[] = [\n    {\n      id: v4(),\n      title: 'Home',\n      subtitle,\n    },\n    {\n      id: v4(),\n      title: 'Work',\n      subtitle,\n    },\n    {\n      id: v4(),\n      title: 'Gym',\n      subtitle,\n    },\n    {\n      id: v4(),\n      title: 'Add a new location',\n    },\n  ];\n\n  const onItemPress = useCallback((index: string) => onPress(index), [onPress]);\n\n  return (\n    <>\n      {locations.map((location, index) => (\n        <Item\n          description={location.subtitle}\n          key={location.id}\n          marginBottom={index !== locations.length - 1}\n          onPress={onItemPress(location.id)}\n          title={location.title}\n        />\n      ))}\n    </>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\nimport React, { memo } from 'react';\nimport { Item } from './Item';\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst generateButtons = () => {\n  const laterToday = dayjs().add(3, 'hour').add(30, 'minute').set('minute', 0);\n\n  const evening = dayjs().set('hour', 18).set('minute', 0);\n\n  const tomorrow = dayjs().add(1, 'day').set('hour', 6).set('minute', 0);\n\n  const nextWeek = dayjs()\n    .add(1, 'week')\n    .set('hour', 6)\n    .set('minute', 0)\n    .set('day', 1);\n\n  const nextMonth = dayjs().add(2, 'month').set('hour', 6).set('minute', 0);\n\n  const yesterday = dayjs().subtract(1, 'day');\n\n  return [\n    {\n      title: 'Later today',\n      description: laterToday.format('hh:mm A'),\n      value: laterToday,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'This Evening',\n      description: evening.format('hh:mm A'),\n      value: evening,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'Tomorrow',\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        'hh:mm A',\n      )}`,\n      value: tomorrow,\n    },\n    {\n      title: 'Next Week',\n      description: `${nextWeek.format('MMM DD, hh:mm A')}`,\n      value: nextWeek,\n    },\n    {\n      title: 'Someday',\n      description: '',\n      value: nextMonth,\n    },\n    {\n      title: 'Custom',\n      description: '',\n      value: yesterday,\n    },\n  ];\n};\n\ntype Props = {\n  onPress: (value: Dayjs) => () => void;\n};\n\nexport const OneTime = memo(function OneTime({ onPress }: Props) {\n  const buttons = generateButtons();\n  return (\n    <>\n      {buttons.map((button, index) => {\n        const hidden =\n          button.visible && dayjs().valueOf() > button.visible.valueOf();\n        return (\n          <Item\n            description={button.description}\n            hidden={hidden}\n            icon=\"alarm\"\n            key={button.title}\n            marginBottom={index !== buttons.length - 1}\n            onPress={onPress(button.value)}\n            title={button.title}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Item } from './Item';\nimport { ReminderType } from './types';\n\ntype Props = {\n  buttons: ReminderType[];\n  horizontal?: boolean;\n  onChange: (id: ReminderType) => () => void;\n  value: ReminderType;\n};\n\nexport const Radio = memo(function Radio({\n  buttons,\n  value,\n  onChange,\n  horizontal,\n}: Props) {\n  return (\n    <View\n      style={{\n        justifyContent: 'center',\n        flexDirection: horizontal ? 'row' : 'column',\n      }}\n    >\n      {buttons.map((button, index) => (\n        <Item\n          active={button === value}\n          key={button}\n          marginBottom={index !== buttons.length - 1}\n          onPress={onChange(button)}\n          title={button}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, { memo, useState } from 'react';\nimport { Item } from './Item';\n\ntype RepeatType = 'Daily' | 'Weekly' | 'Monthly' | 'Yearly';\n\nexport const Repeat = memo(function Repeat() {\n  const [active, setActive] = useState<RepeatType>('Daily');\n  const onPress = (type: RepeatType) => () => setActive(type);\n\n  const items: RepeatType[] = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\n  return (\n    <>\n      {items.map((item, index) => {\n        return (\n          <Item\n            active={item === active}\n            key={item}\n            marginBottom={index !== items.length - 1}\n            onPress={onPress(item)}\n            title={item}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import { Dayjs } from 'dayjs';\nimport React, { memo, useCallback, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Modal, Text } from '../../../../../components';\nimport { padding } from '../../../../../features';\nimport { Location } from './Location';\nimport { OneTime } from './OneTime';\nimport { Radio } from './Radio';\nimport { Repeat } from './Repeat';\nimport { ReminderType } from './types';\n\nconst reminderTypes: ReminderType[] = ['one time', 'repeat', 'location'];\n\ntype Props = {\n  onBackgroundPress: () => void;\n  onLocationPress: (id: string) => () => void;\n  onOneTimePress: (date: Dayjs) => () => void;\n};\n\nexport const Create = memo(function Create({\n  onBackgroundPress,\n  onOneTimePress,\n  onLocationPress,\n}: Props) {\n  const [state, setState] = useState<ReminderType>('one time');\n  const styles = StyleSheet.create({\n    section: {\n      paddingBottom: padding(2),\n      paddingTop: padding(6),\n    },\n    submit: {\n      marginTop: padding(6),\n    },\n  });\n\n  const handleReminderTypePress = useCallback(\n    (type: ReminderType) => () => setState(type),\n    [],\n  );\n\n  return (\n    <Modal\n      onBackgroundPress={onBackgroundPress}\n      showOverlay\n    >\n      <Text\n        title=\"Create Reminder\"\n        type=\"h4\"\n      />\n      <Text\n        style={styles.section}\n        title=\"Reminder type\"\n        type=\"overline\"\n      />\n      <Radio\n        buttons={reminderTypes}\n        onChange={handleReminderTypePress}\n        value={state}\n      />\n      <Text\n        style={styles.section}\n        title=\"Reminder time\"\n        type=\"overline\"\n      />\n      {state === 'one time' ? (\n        <OneTime onPress={onOneTimePress} />\n      ) : state === 'repeat' ? (\n        <Repeat />\n      ) : state === 'location' ? (\n        <Location onPress={onLocationPress} />\n      ) : (\n        <Text title=\"invalid form type\" />\n      )}\n      <Button\n        buttonStyle={styles.submit}\n        color=\"accent\"\n        disabled\n        emphasis=\"high\"\n        title=\"submit\"\n      />\n    </Modal>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\nimport React, { useCallback, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { Modal, Text } from '../../../../../components';\nimport { Create } from './Create';\nimport { Reminder, ReminderType } from './types';\n\ntype State = {\n  modals: {\n    createReminder: boolean;\n    customDate: boolean;\n    location: boolean;\n  };\n  reminders: Reminder[];\n  selected: {\n    location: string | undefined;\n  };\n  type: ReminderType;\n};\n\ntype Props = {\n  onComplete: () => void;\n};\n\nexport const Reminders = ({ onComplete }: Props) => {\n  const [form, setForm] = useState<State>({\n    type: 'one time',\n    reminders: [],\n    modals: {\n      customDate: false,\n      createReminder: true,\n      location: false,\n    },\n    selected: {\n      location: undefined,\n    },\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm((prev) => ({\n          ...prev,\n          modals: { ...prev.modals, customDate: true },\n        }));\n        return;\n      }\n      setForm((prev) => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false,\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            id: v4(),\n            date: date.valueOf(),\n            format: date.format('MMM DD, YYYY hh:mm A'),\n          },\n        ],\n      }));\n      onComplete();\n    },\n    [onComplete],\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, customDate: false },\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: false },\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm((prev) => ({\n        ...prev,\n        modals: { ...prev.modals, location: true },\n        selected: { location: id },\n      }));\n    },\n    [],\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: { ...prev.modals, location: false },\n    }));\n  }, []);\n\n  return (\n    <>\n      {form.modals.createReminder ? (\n        <Create\n          onBackgroundPress={handleCreateReminderClose}\n          onLocationPress={handleLocation}\n          onOneTimePress={handleOneTimeReminder}\n        />\n      ) : null}\n      {form.modals.customDate ? (\n        <Modal\n          onBackgroundPress={handleCustomDateClose}\n          showOverlay\n        >\n          <Text title=\"hello\" />\n        </Modal>\n      ) : null}\n      {form.modals.location ? (\n        <Modal\n          onBackgroundPress={handleLocationClose}\n          showOverlay\n        >\n          <Text title=\"location\" />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  Input,\n  Loading,\n  Modal,\n  Notification,\n  Screen,\n  ScrollView,\n  Text,\n} from '../../../../components';\nimport { padding, RateApp, useColors } from '../../../../features';\nimport { Reminders } from './Reminders';\n\ntype Modal =\n  | 'alert'\n  | 'modal-large'\n  | 'modal-small'\n  | 'modal-keyboard'\n  | 'reminder'\n  | 'action-sheet'\n  | 'notification'\n  | 'loading'\n  | 'login'\n  | 'rate-app'\n  | null;\n\ntype ModalManagerProps = {\n  modal: Modal;\n  onClose: (modal: Modal) => () => void;\n};\n\nconst ModalManager = memo(function ModalManager({\n  modal,\n  onClose,\n}: ModalManagerProps) {\n  const handleClose = useCallback(() => {\n    onClose(null)();\n  }, [onClose]);\n  const [value, setValue] = useState<string>('');\n  const handleTextChange = useCallback((v: string) => setValue(v), []);\n\n  switch (modal) {\n    case 'rate-app':\n      return <RateApp onComplete={handleClose} />;\n    case 'reminder':\n      return <Reminders onComplete={handleClose} />;\n    case 'alert':\n      return (\n        <Alert\n          description=\"do not do this\"\n          onBackgroundPress={handleClose}\n          onCancelPress={handleClose}\n          onConfirmPress={handleClose}\n          title=\"warning\"\n        />\n      );\n    case 'modal-small':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text title=\"Hello\" />\n        </Modal>\n      );\n    case 'modal-large':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text\n            title=\"Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello\"\n            type=\"h1\"\n          />\n        </Modal>\n      );\n    case 'modal-keyboard':\n      return (\n        <Modal\n          onBackgroundPress={handleClose}\n          showOverlay\n        >\n          <Text\n            title=\"hello hello hello hello\"\n            type=\"h1\"\n          />\n\n          <Input\n            onChangeText={handleTextChange}\n            title=\"hello\"\n            value={value}\n          />\n        </Modal>\n      );\n    case 'loading':\n      return <Loading onBackgroundPress={handleClose} />;\n    case 'notification':\n      return (\n        <Notification\n          onCancel={handleClose}\n          title=\"bob\"\n        />\n      );\n    default:\n      return null;\n  }\n});\n\nexport const Modals = memo(function Modals() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [modal, setModal] = useState<Modal>(null);\n  const handleModalChange = useCallback(\n    (nextModal: Modal) => () => setModal(nextModal),\n    [],\n  );\n\n  return (\n    <>\n      <Screen\n        dropShadow\n        onLeftPress={goBack}\n        title=\"Reminder\"\n      >\n        <ScrollView\n          contentContainerStyle={{ padding: padding(4) }}\n          style={{ backgroundColor: colors.background.secondary }}\n        >\n          <Text\n            emphasis=\"low\"\n            title=\"Components\"\n            type=\"h4\"\n          />\n          <Button\n            onPress={handleModalChange('loading')}\n            title=\"loading\"\n          />\n          <Button\n            onPress={handleModalChange('action-sheet')}\n            title=\"action sheet ❌ need to build\"\n          />\n          <Button\n            onPress={handleModalChange('notification')}\n            title=\"notification ❌ missing background\"\n          />\n          <Button\n            onPress={handleModalChange('alert')}\n            title=\"alert\"\n          />\n          <Button\n            onPress={handleModalChange('modal-large')}\n            title=\"Modal large\"\n          />\n          <Button\n            onPress={handleModalChange('modal-small')}\n            title=\"Modal small\"\n          />\n          <Button\n            onPress={handleModalChange('modal-keyboard')}\n            title=\"Modal keyboard\"\n          />\n          <Text\n            emphasis=\"low\"\n            title=\"Features\"\n            type=\"h4\"\n          />\n          <Button\n            onPress={handleModalChange('reminder')}\n            title=\"Reminder ❌ incomplete\"\n          />\n          <Button\n            onPress={handleModalChange('rate-app')}\n            title=\"Rate app ✅\"\n          />\n          <Button\n            onPress={handleModalChange('login')}\n            title=\"login ❌ incomplete\"\n          />\n          <Text\n            center\n            emphasis=\"low\"\n            title=\"Reminders\"\n            type=\"h4\"\n          />\n          {/* {form.reminders.map((reminder, index) => (\n            <Text\n              key={reminder.id}\n              title={reminder.format}\n              type={index === form.reminders.length - 1 ? 'button' : undefined}\n            />\n          ))} */}\n        </ScrollView>\n      </Screen>\n      <ModalManager\n        modal={modal}\n        onClose={handleModalChange}\n      />\n      {/* {showRate && <RateApp onComplete={handleRate(false)} />}\n      {form.modals.createReminder && (\n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onLocationPress={handleLocation}\n          onOneTimePress={handleOneTimeReminder}\n        />\n      )}\n      {form.modals.customDate && (\n        <Modal onBackgroundPress={handleCustomDateClose} showOverlay>\n          <Text title=\"hello\" />\n        </Modal>\n      )}\n      {form.modals.location && (\n        <Modal onBackgroundPress={handleLocationClose} showOverlay>\n          <Text title=\"location\" />\n        </Modal>\n      )} */}\n    </>\n  );\n});\n","import { Sections } from '../../../../components/Content/types';\n\nconst onPress = (): void => undefined;\n\nexport const data: Sections = [\n  {\n    paragraphs: [[{ title: 'best way to get your life together' }]],\n    title: 'h1 title',\n    titleType: 'h1',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph1' },\n        { title: 'nav here', onPress },\n        { title: 'blah bldah blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph1' },\n        { title: 'nav here', onPress },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h2 title',\n    titleType: 'h2',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph2' },\n        { title: 'nav here', onPress },\n        { title: 'blah bldah blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph2' },\n        { title: 'nav here', onPress },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n      [\n        { title: 'third paragraph2' },\n        { title: 'nav here', onPress },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h3 title',\n    titleType: 'h3',\n  },\n  {\n    paragraphs: [\n      [\n        { title: 'first paragraph3' },\n        { title: 'nav here', onPress },\n        { title: 'blah bldah blah. blah blah blah' },\n      ],\n      [\n        { title: 'second paragraph3' },\n        { title: 'nav here', onPress },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n      [\n        { title: 'third paragraph3' },\n        { title: 'nav here', onPress },\n        {\n          title:\n            'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n        },\n      ],\n    ],\n    title: 'h4 title',\n    titleType: 'h4',\n  },\n];\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Card, Content, Screen, ScrollView } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { data } from './data';\n\nexport const Paragraphs = memo(function Paragraphs() {\n  const { goBack } = useNavigation();\n\n  const colors = useColors();\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Paragraphs\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          paddingHorizontal: padding(4),\n          paddingVertical: padding(2),\n        }}\n        keyboardShouldPersistTaps=\"handled\"\n        showsVerticalScrollIndicator={false}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card>\n          <Content sections={data} />\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","// TODO: slider on web\nimport { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Image, ImageSourcePropType, ListRenderItem, View } from 'react-native';\nimport {\n  Button,\n  Card,\n  Masonry,\n  Screen,\n  ScrollView,\n  Slider,\n  Text,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport {\n  changeTheme,\n  getLandscapeOrientation,\n  Theme,\n  themes,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\n\ntype CardItem = {\n  button?: string;\n  chart?: ImageSourcePropType;\n  target?: string;\n  title: string;\n  value: string;\n};\n\nconst image = require('../../../../assets/placeholder.png');\nconst cards: CardItem[] = [\n  {\n    title: 'Marketing',\n    value: '12.4 M',\n  },\n  {\n    target: '+22% of target',\n    title: 'Conversion',\n    value: '537',\n  },\n  {\n    chart: image,\n    target: '+12.3 of target',\n    title: 'Conversion',\n    value: '42.1 M',\n  },\n  {\n    target: '11% of target',\n    title: 'Sales',\n    value: '35.8 M',\n    chart: image,\n  },\n  {\n    button: 'view',\n    title: 'Users',\n    value: '45.5 M',\n  },\n  {\n    target: '+56.6% of target',\n    title: 'Avg session',\n    value: '4:53 H',\n  },\n  {\n    title: 'Sessions',\n    value: '23.242',\n  },\n  {\n    title: 'Bounce rate',\n    value: '12%',\n  },\n  {\n    title: 'Churn',\n    value: '8%',\n    target: '+45.1 of target',\n    button: 'view',\n  },\n  {\n    title: 'Spend',\n    value: '18.4 M',\n  },\n];\n\nexport const Themes = memo(function Themes() {\n  const dispatch = useRootDispatch();\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const currentTheme = useRootSelector((state) => state.theme.currentTheme);\n  const themePress = (theme: Theme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(2);\n  const handleSlider = useCallback((value: number) => setElevation(value), []);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const columns = landscape ? 5 : 2;\n  const onPress = useCallback(() => undefined, []);\n\n  const renderItem = useCallback<ListRenderItem<CardItem>>(\n    ({ item, index }) => (\n      <Card\n        elevation={elevation}\n        key={index}\n        onPress={onPress}\n      >\n        <Text\n          title={item.title}\n          type=\"overline\"\n        />\n        <Text\n          style={{ marginTop: padding(2) }}\n          title={item.value}\n          type=\"h4\"\n        />\n        {item.target ? (\n          <Text\n            style={{ marginTop: padding(2) }}\n            title={item.target}\n            type=\"body2\"\n          />\n        ) : null}\n        {item.chart ? (\n          <Image\n            source={item.chart}\n            style={{\n              height: 100,\n              marginTop: padding(2),\n              resizeMode: 'cover',\n              width: '100%',\n            }}\n          />\n        ) : null}\n        {item.button ? (\n          <Button\n            buttonStyle={{ marginTop: padding(2) }}\n            center\n            color=\"accent\"\n            emphasis=\"high\"\n            title={item.button}\n          />\n        ) : null}\n      </Card>\n    ),\n    [elevation, onPress],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Dark mode\"\n    >\n      <ScrollView style={{ backgroundColor: colors.background.primaryA }}>\n        <View style={{ padding: padding(4) }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Text title=\"theme: \" />\n            {themes.map((item) => (\n              <Button\n                color={currentTheme === item ? 'positive' : 'primaryA'}\n                emphasis=\"low\"\n                key={item}\n                onPress={themePress(item)}\n                title={item}\n              />\n            ))}\n          </View>\n          <Text title={`elevation: ${elevation}`} />\n          <Slider\n            maximumValue={10}\n            minimumTrackTintColor={colors.background.accent}\n            minimumValue={0}\n            onValueChange={handleSlider}\n            step={1}\n            value={elevation}\n          />\n        </View>\n        <Text\n          center\n          title=\"Weekly Stats\"\n          type=\"h2\"\n        />\n        <Masonry\n          data={cards}\n          numColumns={columns}\n          renderItem={renderItem}\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const AppleFit = memo(function PlaygroundAppleFit() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Apple Fit\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Image, ImageSourcePropType, View } from 'react-native';\nimport { Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { getWidth, useRootSelector } from '../../../../redux';\n\n// https://support.apple.com/en-us/HT211028\n\ninterface SectionProps {\n  description?: string;\n  image?: ImageSourcePropType;\n  imageRatio?: number;\n  index: number;\n  paddingHorizontal: number;\n  title: string;\n}\n\nconst Section = ({\n  index,\n  title,\n  description,\n  image,\n  paddingHorizontal,\n  imageRatio = 0,\n}: SectionProps) => {\n  const colors = useColors();\n  const width = useRootSelector(getWidth);\n  const leftWidth = padding(12);\n  const imageWidth = width - leftWidth - 2 * paddingHorizontal;\n  return (\n    <View\n      style={{\n        paddingVertical: padding(8),\n        borderBottomColor: colors.border.tertiary,\n        borderBottomWidth: 2,\n      }}\n    >\n      <View style={{ flexDirection: 'row' }}>\n        <Text\n          color=\"accent\"\n          style={{ width: leftWidth }}\n          title={String(index)}\n          type=\"h2\"\n        />\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{ marginBottom: padding(4) }}\n            title={title}\n            type=\"h5\"\n          />\n          <Text\n            style={{ marginBottom: padding(4) }}\n            title={description}\n            type=\"subtitle1\"\n          />\n          {image ? (\n            <Image\n              source={image}\n              style={{\n                flex: 1,\n                width: imageWidth,\n                height: imageWidth / imageRatio,\n              }}\n            />\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const AppleMask = memo(function AppleMask() {\n  const { goBack } = useNavigation();\n\n  const sections = [\n    {\n      title: 'Align your preferred slots on the face shield and forehead band',\n      description: 'Either side of the face shield can act as the front.',\n      image: require('./one.png'),\n      imageRatio: 1560 / 750,\n    },\n    {\n      title:\n        'Remove thin protective films from the face shield and forehead band by peeling from either edge',\n      image: require('./two.gif'),\n      imageRatio: 1560 / 1750,\n    },\n    {\n      title: 'Thread the strap through the slots and pull to adjust',\n      image: require('./three.gif'),\n      imageRatio: 1560 / 950,\n    },\n    { title: 'Repeat on other side' },\n    {\n      title: 'Adjust your face shield',\n      image: require('./four.gif'),\n      imageRatio: 1560 / 950,\n    },\n    {\n      title:\n        'Wear the face shield in addition to other personal protective equipment',\n    },\n  ];\n\n  const colors = useColors();\n  const paddingHorizontal = padding(4);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Apple Mask\"\n    >\n      <ScrollView\n        style={{\n          paddingHorizontal: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Text\n          title=\"Assemble and adjust your Face Shield\"\n          type=\"h2\"\n        />\n        <Text\n          style={{ paddingTop: padding(4) }}\n          title=\"To assemble your face shield, follow these steps.\"\n          type=\"subtitle1\"\n        />\n        {sections.map(({ title, description, image, imageRatio }, index) => (\n          <Section\n            description={description}\n            image={image}\n            imageRatio={imageRatio}\n            index={index + 1}\n            key={title}\n            paddingHorizontal={paddingHorizontal}\n            title={title}\n          />\n        ))}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React, { memo, useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, TouchableOpacity } from '../../../../components';\nimport { MonoMultiColor, useColors } from '../../../../features';\n\ninterface RoundButtonProps {\n  background: string;\n  color: keyof MonoMultiColor;\n  disabled?: boolean;\n  onPress(): void;\n  title: string;\n}\n\nexport const ButtonRound = memo(function ButtonRound({\n  title,\n  color,\n  background,\n  onPress,\n  disabled = false,\n}: RoundButtonProps) {\n  const colorScheme = useColors();\n  const styles = StyleSheet.create({\n    button: {\n      alignItems: 'center',\n      backgroundColor: background,\n      borderRadius: 40,\n      height: 80,\n      justifyContent: 'center',\n      width: 80,\n    },\n    buttonBorder: {\n      alignItems: 'center',\n      borderColor: colorScheme.background.primaryB,\n      borderRadius: 38,\n      borderWidth: 1,\n      height: 76,\n      justifyContent: 'center',\n      width: 76,\n    },\n    buttonTitle: {\n      fontSize: 18,\n    },\n  });\n\n  const handlePress = useCallback(\n    () => !disabled && onPress(),\n    [onPress, disabled],\n  );\n\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      onPress={handlePress}\n      style={styles.button}\n    >\n      <View style={styles.buttonBorder}>\n        <Text\n          color={color}\n          style={styles.buttonTitle}\n          title={title}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import React, { ReactNode, memo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ninterface ButtonRowProps {\n  children: ReactNode | ReactNode[];\n}\n\nexport const ButtonsRow = memo(function ButtonsRow({\n  children,\n}: ButtonRowProps) {\n  const styles = StyleSheet.create({\n    buttonsRow: {\n      alignSelf: 'stretch',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      marginTop: 80,\n    },\n  });\n  return <View style={styles.buttonsRow}>{children}</View>;\n});\n","import React, { memo } from 'react';\nimport { StyleProp, StyleSheet, TextStyle, View } from 'react-native';\nimport { Text } from '../../../../components';\n\ninterface TimerProps {\n  interval: number;\n  style: StyleProp<TextStyle>;\n}\n\nexport const Timer = memo(function Timer({ interval, style }: TimerProps) {\n  const pad = (n: number): string =>\n    (n < 10 ? `0${n.toString()}` : n).toString();\n  const minutes = Math.floor(interval / 60000);\n  const seconds = Math.floor((interval % 60000) / 1000);\n  const milliseconds = Math.floor((interval % 60000) % 1000);\n  const styles = StyleSheet.create({\n    timerContainer: {\n      flexDirection: 'row',\n    },\n  });\n  return (\n    <View style={styles.timerContainer}>\n      <Text\n        style={style}\n        title={`${pad(minutes)}:`}\n      />\n      <Text\n        style={style}\n        title={`${pad(seconds)}.`}\n      />\n      <Text\n        style={style}\n        title={pad(milliseconds).substr(0, 2)}\n      />\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { Timer } from './Timer';\n\ninterface LapProps {\n  fastest: boolean;\n  interval: number;\n  num: number;\n  slowest: boolean;\n}\n\nexport const Lap = memo(function Lap({\n  num,\n  interval,\n  fastest,\n  slowest,\n}: LapProps) {\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    fastest: {\n      color: colors.text.positive,\n    },\n    lap: {\n      borderColor: colors.border.secondary,\n      borderTopWidth: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingVertical: 10,\n    },\n    lapText: {\n      color: colors.text.primaryB,\n      fontFamily: 'Courier',\n      fontSize: 18,\n    },\n    slowest: {\n      color: colors.text.negative,\n    },\n  });\n  const lapStyle = [\n    styles.lapText,\n    fastest ? styles.fastest : undefined,\n    slowest ? styles.slowest : undefined,\n  ];\n\n  return (\n    <View style={styles.lap}>\n      <Text\n        style={lapStyle}\n        title={`Lap ${num}`}\n      />\n      <Timer\n        interval={interval}\n        style={lapStyle}\n      />\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { v4 } from 'uuid';\nimport { ScrollView } from '../../../../components';\nimport { Lap } from './Lap';\n\ninterface LapTableProps {\n  laps: number[];\n  timer: number;\n}\n\nexport const LapsTable = memo(function LapsTable({\n  laps,\n  timer,\n}: LapTableProps) {\n  const finishedLaps = laps.slice(1);\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  if (finishedLaps.length >= 2)\n    finishedLaps.forEach((lap) => {\n      if (lap < min) min = lap;\n\n      if (lap > max) max = lap;\n    });\n\n  const styles = StyleSheet.create({\n    scrollView: {\n      alignSelf: 'stretch',\n    },\n  });\n  return (\n    <ScrollView style={styles.scrollView}>\n      {laps.map((lap, index) => (\n        <Lap\n          fastest={lap === min}\n          interval={index === 0 ? timer + lap : lap}\n          key={v4()}\n          num={laps.length - index}\n          slowest={lap === max}\n        />\n      ))}\n    </ScrollView>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { ButtonRound } from './ButtonRound';\nimport { ButtonsRow } from './ButtonsRow';\nimport { LapsTable } from './LapsTable';\nimport { Timer } from './Timer';\n\ninterface State {\n  laps: number[];\n  now: number;\n  start: number;\n}\n\nexport const AppleStopWatch = memo(function AppleStopWatch() {\n  const { goBack } = useNavigation();\n  const [state, setState] = useState<State>({\n    laps: [],\n    now: 0,\n    start: 0,\n  });\n  const timer = useRef<ReturnType<typeof setInterval> | null>(null);\n  const elapsed = state.now - state.start;\n  const interval =\n    state.laps.reduce((total, curr) => total + curr, 0) + elapsed;\n  const colors = useColors();\n\n  const styles = StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      backgroundColor: colors.background.primaryB,\n      flex: 1,\n      paddingHorizontal: 20,\n      paddingTop: 130,\n    },\n    timer: {\n      color: colors.text.primaryB,\n      fontFamily: 'Courier',\n      fontSize: 54,\n      fontWeight: '200',\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      if (timer.current) clearTimeout(timer.current);\n    };\n  }, [timer]);\n\n  const lap = useCallback(() => {\n    const timestamp = new Date().getTime();\n    const { laps, now, start } = state;\n    const [firstLap, ...other] = laps;\n    setState({\n      laps: [0, firstLap + now - start, ...other],\n      now: timestamp,\n      start: timestamp,\n    });\n  }, [state]);\n\n  const stop = useCallback(() => {\n    if (timer.current) clearInterval(timer.current);\n\n    const { laps, now, start } = state;\n    const [firstLap, ...other] = laps;\n    setState({ laps: [firstLap + now - start, ...other], now: 0, start: 0 });\n  }, [timer, state]);\n\n  const reset = useCallback(() => {\n    setState({ laps: [], now: 0, start: 0 });\n  }, []);\n\n  const run = useCallback(() => {\n    timer.current = setInterval(() => {\n      setState((prev) => ({ ...prev, now: new Date().getTime() }));\n    }, 100);\n  }, []);\n\n  const start = useCallback(() => {\n    const now = new Date().getTime();\n    setState({ laps: [0], now, start: now });\n    run();\n  }, [run]);\n\n  const resume = useCallback(() => {\n    const now = new Date().getTime();\n    setState((prev) => ({\n      ...prev,\n      now,\n      start: now,\n    }));\n    run();\n  }, [run]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Stop Watch\"\n    >\n      <View style={styles.container}>\n        <Timer\n          interval={interval}\n          style={styles.timer}\n        />\n        {state.laps.length === 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.disabled}\n              color=\"disabled\"\n              disabled\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background={colors.background.positive}\n              color=\"primaryA\"\n              onPress={start}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        )}\n        {state.start > 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.disabled}\n              color=\"primaryA\"\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background={colors.background.negative}\n              color=\"primaryA\"\n              onPress={stop}\n              title=\"Stop\"\n            />\n          </ButtonsRow>\n        )}\n        {state.laps.length > 0 && state.start === 0 ? (\n          <ButtonsRow>\n            <ButtonRound\n              background={colors.background.negative}\n              color=\"primaryA\"\n              onPress={reset}\n              title=\"Reset\"\n            />\n            <ButtonRound\n              background={colors.background.positive}\n              color=\"primaryA\"\n              onPress={resume}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        ) : null}\n        <LapsTable\n          laps={state.laps}\n          timer={elapsed}\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Button, Screen } from '../../../../components';\nimport { padding, useColors, useDriver } from '../../../../features';\nimport { getHeight, getWidth, useRootSelector } from '../../../../redux';\n\nexport const Ball = memo(function PlaygroundBall() {\n  const height = useRootSelector(getHeight);\n  const width = useRootSelector(getWidth);\n  const { goBack } = useNavigation();\n  const ballPosition = useRef(\n    new Animated.ValueXY({ x: width / 2, y: height / 2 }),\n  ).current;\n  const useNativeDriver = useDriver();\n  const colors = useColors();\n  const size = padding(8);\n  const styles = StyleSheet.create({\n    ball: {\n      borderRadius: size,\n      borderWidth: size,\n      height: size * 2,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size * 2,\n    },\n    buttons: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n    },\n  });\n  const animate = useCallback(\n    (dx: number, dy: number) => {\n      Animated.spring(ballPosition, {\n        toValue: { x: width * dx, y: height * dy },\n        useNativeDriver,\n      }).start();\n    },\n    [ballPosition, height, useNativeDriver, width],\n  );\n  const onInitialPress = useCallback(() => animate(0.5, 0.5), [animate]);\n  const onRandomPress = useCallback(\n    () => animate(Math.random(), Math.random()),\n    [animate],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      style={{ backgroundColor: colors.background.secondary }}\n      testID=\"ballScreen\"\n      title=\"Ball\"\n    >\n      <Animated.View\n        style={[ballPosition.getLayout(), styles.ball]}\n        testID=\"ball\"\n      />\n      <View style={styles.buttons}>\n        <Button\n          onPress={onInitialPress}\n          testID=\"initialButton\"\n          title=\"initial\"\n        />\n        <Button\n          onPress={onRandomPress}\n          testID=\"randomButton\"\n          title=\"random\"\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { Screen, Text } from '../../../../components';\nimport {\n  padding,\n  useColors,\n  useDriver,\n  useDropShadow,\n} from '../../../../features';\n\nconst getPosition = (\n  gestureState: PanResponderGestureState,\n  initialPosition: { x: number; y: number },\n  size: number,\n) => {\n  const maxY = gestureState.dy - initialPosition.y + size;\n  const minY = gestureState.dy + initialPosition.y - size;\n  const maxX = gestureState.dx - initialPosition.x + size;\n  const minX = gestureState.dx + initialPosition.x - size;\n  const y =\n    minY <= 0\n      ? size\n      : maxY >= 0\n      ? initialPosition.y * 2 - size\n      : initialPosition.y + gestureState.dy;\n  const x =\n    minX <= 0\n      ? size\n      : maxX >= 0\n      ? initialPosition.x * 2 - size\n      : initialPosition.x + gestureState.dx;\n  return { x, y };\n};\n\nexport const Drag = memo(function PlaygroundDrag() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const dropShadow = useDropShadow();\n  const useNativeDriver = useDriver();\n  const [canvas, setCanvas] = useState({ x: 0, y: 0, height: 0, width: 0 });\n  const initialPosition = { x: canvas.width / 2, y: canvas.height / 2 };\n  const size = 30;\n  const styles = StyleSheet.create({\n    ball: {\n      borderRadius: size,\n      borderWidth: size,\n      height: size,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size,\n      ...dropShadow(5),\n    },\n    canvas: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n  const ballPosition: Animated.ValueXY = new Animated.ValueXY(initialPosition);\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (_, gestureState) => {\n      const toValue = getPosition(gestureState, initialPosition, size);\n      Animated.spring(ballPosition, {\n        toValue,\n        useNativeDriver,\n      }).start();\n    },\n    onPanResponderEnd: () => {\n      Animated.spring(ballPosition, {\n        toValue: initialPosition,\n        useNativeDriver,\n      }).start();\n    },\n  });\n\n  const handleCanvas = useCallback((event: LayoutChangeEvent) => {\n    const { x, y, height, width } = event.nativeEvent.layout;\n    setCanvas({ x, y, height, width });\n  }, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Drag\"\n    >\n      <View\n        onLayout={handleCanvas}\n        style={styles.canvas}\n      >\n        <Text\n          center\n          style={{\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            top: 0,\n            padding: padding(2),\n          }}\n          title=\"drag the circle\"\n          type=\"overline\"\n        />\n        <Animated.View\n          style={[ballPosition.getLayout(), styles.ball]}\n          {...panGesture.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Card, Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\n\nexport type ItemType =\n  | 'Mission'\n  | 'Vision'\n  | 'Values'\n  | 'KPI'\n  | 'Objective'\n  | 'Key Result'\n  | 'Problem'\n  | 'Idea'\n  | 'Learning';\n\nexport const OKRs = memo(function PlaygroundOKRs() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"OKRs\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: padding(4) }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card>\n          <Text\n            title=\"Company\"\n            type=\"h6\"\n          />\n          <Card>\n            <Text\n              title=\"Mission\"\n              type=\"h6\"\n            />\n            <Text\n              title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n            />\n          </Card>\n          <Card>\n            <Text\n              title=\"Vision\"\n              type=\"h6\"\n            />\n            <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n          </Card>\n          <Card>\n            <Text\n              title=\"Values\"\n              type=\"h6\"\n            />\n            <Text title=\"Customer Obsession\" />\n            <Text title=\"Ownership\" />\n            <Text title=\"Invent and Simplify\" />\n            <Text title=\"Are Right a Lot\" />\n            <Text title=\"Learn and Be Curious\" />\n            <Text title=\"Hire and Develop the Best\" />\n            <Text title=\"Insist on the Highest Standards\" />\n            <Text title=\"Think Big\" />\n            <Text title=\"Bias for Action\" />\n            <Text title=\"Frugality\" />\n            <Text title=\"Earn Trust\" />\n            <Text title=\"Dive Deep\" />\n            <Text title=\"Have Backbone; Disagree and Commit\" />\n            <Text title=\"Deliver Results\" />\n          </Card>\n        </Card>\n        <Card>\n          <Text\n            title=\"Product\"\n            type=\"h6\"\n          />\n          <Card>\n            <Text\n              title=\"Vision\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n          </Card>\n\n          <Card>\n            <Text\n              title=\"KPIs\"\n              type=\"h6\"\n            />\n            <Text title=\"Customer Lifetime Value\" />\n            <Text title=\"Average Revenue Per user\" />\n            <Text title=\"Customer Aquisition Cost\" />\n            <Text title=\"Monthly Recurring Revenue\" />\n            <Text title=\"Churn\" />\n            <Text title=\"Cost of Sales\" />\n            <Text title=\"Contributing Margins\" />\n          </Card>\n          <Card>\n            <Text\n              title=\"Team\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n            <Text title=\"Bob, designer\" />\n            <Text title=\"Steve, engineer\" />\n            <Text title=\"Greg, engineer\" />\n          </Card>\n\n          <Card>\n            <Text\n              title=\"Objective\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text\n                title=\"KeyResult\"\n                type=\"h6\"\n              />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text\n              title=\"Objective\"\n              type=\"h6\"\n            />\n            <Text title=\"Jim, owner\" />\n          </Card>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { useCallback, useState } from 'react';\nimport { ListRenderItem, View } from 'react-native';\nimport {\n  Card,\n  FlatList,\n  Icon,\n  Modal,\n  Text,\n  TouchableOpacity,\n} from '../../../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../../../redux';\nimport {\n  createQuestionnaire,\n  getQuestionnaireArray,\n  Questionnaire,\n  removeQuestionnaire,\n  selectQuestionnaire,\n} from '../models';\n\nexport const Questionnaires = (): JSX.Element => {\n  const questionnaires = useRootSelector(getQuestionnaireArray);\n  const selected = useRootSelector((state) => state.questionnaires.selected);\n  const [actionSheet, setActionSheet] = useState(false);\n  const dispatch = useRootDispatch();\n  const handleLongPress = useCallback(\n    (id: string) => () => dispatch(removeQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleItemPress = useCallback(\n    (id: string) => () => dispatch(selectQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleActionSheetClose = useCallback(() => setActionSheet(false), []);\n  const handleCreate = useCallback(\n    () => dispatch(createQuestionnaire(String(Date.now()))),\n    [dispatch],\n  );\n  const handleItemMenu = useCallback(() => {\n    setActionSheet((state) => !state);\n  }, []);\n  const renderItem = useCallback<ListRenderItem<Questionnaire>>(\n    ({ item }) => {\n      const { length } = item.questions;\n      const subtitle = `${length} question${length === 1 ? '' : 's'}`;\n      return (\n        <Card\n          onLongPress={handleLongPress(item.id)}\n          onPress={handleItemPress(item.id)}\n          selected={selected === item.id}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}\n          >\n            <View style={{ flex: 0.9 }}>\n              <Text\n                title={item.title}\n                type=\"h3\"\n              />\n              <Text\n                title={subtitle}\n                type=\"caption\"\n              />\n            </View>\n            <TouchableOpacity onPress={handleItemMenu}>\n              <Icon name=\"dots-horizontal\" />\n            </TouchableOpacity>\n          </View>\n        </Card>\n      );\n    },\n    [handleItemMenu, handleItemPress, handleLongPress, selected],\n  );\n\n  const keyExtractor = useCallback((item: Questionnaire) => item.id, []);\n\n  return (\n    <>\n      <FlatList\n        data={questionnaires}\n        extraData={selected}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"handled\"\n        renderItem={renderItem}\n      />\n      <TouchableOpacity onPress={handleCreate}>\n        <Icon\n          color=\"primaryA\"\n          fab\n          name=\"plus\"\n          style={{\n            margin: 10,\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n          }}\n        />\n      </TouchableOpacity>\n      {actionSheet ? (\n        <Modal onBackgroundPress={handleActionSheetClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport { Dimensions, ListRenderItem, View, ViewToken } from 'react-native';\nimport {\n  Button,\n  FlatList,\n  FlatListRef,\n  Screen,\n  Text,\n} from '../../../../components';\nimport { Questionnaires } from './screens/Questionnaires';\n\ntype Choice = {\n  key: string;\n  selected: boolean;\n  title: string;\n};\ntype Data = {\n  choices?: Choice[];\n  key: string;\n  next?: string;\n  title: string;\n  type: 'radio' | 'button';\n};\n\nconst data: Data[] = [\n  {\n    choices: [\n      {\n        key: '1',\n        selected: false,\n        title: 'individual',\n      },\n      {\n        key: '2',\n        selected: false,\n        title: 'couple',\n      },\n      {\n        key: '3',\n        selected: false,\n        title: 'teen',\n      },\n    ],\n    key: '1',\n    next: '2',\n    title: 'What type of counseling are you looking for',\n    type: 'radio',\n  },\n  { key: '2', title: '2', type: 'button' },\n  { key: '3', title: '3', type: 'button' },\n  { key: '4', title: '4', type: 'button' },\n  { key: '5', title: '5', type: 'button' },\n];\nconst { width } = Dimensions.get('window');\nconst viewabilityConfig = { itemVisiblePercentThreshold: 50 };\n\nexport const Questionnaire = memo(function Questionnaire() {\n  const [output, setOutput] = useState({});\n  const currentIndex = useRef(0);\n  const { goBack } = useNavigation();\n  const tableViewRef = useRef<FlatListRef>(null);\n  const handleViewableItemsChanged = useCallback(\n    ({ viewableItems }: { viewableItems: Array<ViewToken> }) => {\n      currentIndex.current = viewableItems[0]?.index || 0;\n    },\n    [],\n  );\n\n  const onFinish = () => undefined;\n\n  const onProgress = useCallback(\n    (direction = 1) => {\n      const index = currentIndex.current + direction;\n      if (index < 0 || !tableViewRef.current) return;\n\n      if (index >= data.length) {\n        onFinish();\n        return;\n      }\n      tableViewRef.current.scrollToIndex({\n        animated: true,\n        index,\n      });\n    },\n    [currentIndex],\n  );\n\n  const onSelection = useCallback(\n    (item: Data, choice: Choice) => {\n      setOutput({\n        ...output,\n        [item.key]: {\n          [choice.key]: true,\n        },\n      });\n      onProgress();\n    },\n    [onProgress, output],\n  );\n\n  const updateSelection = useCallback(\n    (item: Data, choice: Choice) => () => onSelection(item, choice),\n    [onSelection],\n  );\n\n  const updateProgress = useCallback(\n    (value: number) => () => onProgress(value),\n    [onProgress],\n  );\n\n  const renderItem = useCallback<ListRenderItem<Data>>(\n    ({ item }) => {\n      let items = <View style={{ flex: 1 }} />;\n\n      if (item.choices)\n        items = (\n          <View style={{ flex: 1 }}>\n            {item.choices.map((choice) => {\n              return (\n                <Button\n                  key={choice.title}\n                  onPress={updateSelection(item, choice)}\n                  title={choice.title}\n                />\n              );\n            })}\n          </View>\n        );\n\n      return (\n        <View style={{ width }}>\n          <Text title={item.title} />\n          {items}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n            }}\n          >\n            <Button\n              onPress={updateProgress(-1)}\n              title=\"prev\"\n            />\n            <Button\n              onPress={updateProgress(1)}\n              title=\"next\"\n            />\n            <Button\n              onPress={updateProgress(2)}\n              title=\"next2\"\n            />\n          </View>\n        </View>\n      );\n    },\n    [updateProgress, updateSelection],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Questionnaire\"\n    >\n      <FlatList\n        data={data}\n        horizontal\n        keyboardShouldPersistTaps=\"handled\"\n        onRef={tableViewRef}\n        onViewableItemsChanged={handleViewableItemsChanged}\n        pagingEnabled\n        removeClippedSubviews\n        renderItem={renderItem}\n        scrollEnabled={false}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        viewabilityConfig={viewabilityConfig}\n      />\n      <Questionnaires />\n    </Screen>\n  );\n});\n","import React, { ReactNode } from 'react';\nimport { Card, Spacing, Text } from '../../../../components';\n\ntype Props = {\n  children: ReactNode;\n  title: string;\n};\n\nexport const Section = ({ title, children }: Props): JSX.Element => {\n  return (\n    <Card>\n      <Text\n        emphasis=\"low\"\n        title={title}\n        type=\"h4\"\n      />\n      <Spacing padding={2} />\n      {children}\n    </Card>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport dayjs from 'dayjs';\nimport React, { memo, useCallback, useState } from 'react';\nimport {\n  Button,\n  Input,\n  KeyboardAwareScrollView,\n  Screen,\n  Spacing,\n  Switch,\n  Text,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { Section } from './Section';\n\n// https://www.startupschool.org/updates/250717/edit\n\ntype Form = {\n  biggestObstacle: string;\n  launchWeeks: string;\n  launched: boolean;\n  morale: string;\n  primaryMetric: string;\n  targetCustomer: string;\n  topGoals: string;\n  usersLearnedFrom: string;\n  usersTalkedTo: string;\n};\n\nconst initialState: Form = {\n  launched: false,\n  launchWeeks: '',\n  usersTalkedTo: '',\n  usersLearnedFrom: '',\n  topGoals: '',\n  primaryMetric: '',\n  biggestObstacle: '',\n  morale: '',\n  targetCustomer: '',\n};\n\nexport const Startup = memo(function PlaygroundStartup() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const [form, setForm] = useState<Form>(initialState);\n  const launchWeeks = parseInt(form.launchWeeks, 10);\n  const launchSubText =\n    launchWeeks >= 5\n      ? \"That's a long way out! Think hard: is there an MVP you could launch earlier?\"\n      : 'Almost there, looking forward to your launch!';\n\n  const updateForm = useCallback(\n    (key: keyof Form, value: string | boolean) =>\n      setForm((state) => ({ ...state, [key]: value })),\n    [],\n  );\n  const handleLaunchChange = useCallback(\n    (value?: boolean) => updateForm('launched', Boolean(value)),\n    [updateForm],\n  );\n  const handleUserChange = useCallback(\n    (value: string) => updateForm('usersTalkedTo', value),\n    [updateForm],\n  );\n  const handleMoraleChange = useCallback(\n    (value: string) => updateForm('morale', value),\n    [updateForm],\n  );\n  const handleObstacleChange = useCallback(\n    (value: string) => updateForm('biggestObstacle', value),\n    [updateForm],\n  );\n  const handleLearnChange = useCallback(\n    (value: string) => updateForm('usersLearnedFrom', value),\n    [updateForm],\n  );\n  const handleMetricChange = useCallback(\n    (value: string) => updateForm('primaryMetric', value),\n    [updateForm],\n  );\n  const handleGoalChange = useCallback(\n    (value: string) => updateForm('topGoals', value),\n    [updateForm],\n  );\n  const handleWeeksToLaunchChange = useCallback(\n    (value: string) => updateForm('launchWeeks', value),\n    [updateForm],\n  );\n\n  const handleSubmit = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Weekly Update\"\n    >\n      <KeyboardAwareScrollView\n        contentContainerStyle={{ padding: padding(4) }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Text\n          center\n          title={dayjs().format('MMM DD, YYYY')}\n          type=\"h4\"\n        />\n        <Section title=\"Launch\">\n          <Text title=\"Are you launched?\" />\n          <Switch\n            onValueChange={handleLaunchChange}\n            value={form.launched}\n          />\n          <Spacing padding={2} />\n          <Input\n            keyboardType=\"numeric\"\n            onChangeText={handleWeeksToLaunchChange}\n            title=\"Weeks to launch?\"\n            value={form.launchWeeks}\n          />\n          <Text\n            hidden={launchSubText.length === 0}\n            title={launchSubText}\n          />\n        </Section>\n        <Section title=\"Users\">\n          <Input\n            onChangeText={handleUserChange}\n            title=\"Users/prospective users talked to this week?\"\n            value={form.usersTalkedTo}\n          />\n          <Input\n            onChangeText={handleLearnChange}\n            title=\"What have you learned from them?\"\n            value={form.usersLearnedFrom}\n          />\n        </Section>\n        <Section title=\"Goals\">\n          <Input\n            onChangeText={handleGoalChange}\n            title=\"What are your top 1-3 goals for the next week?\"\n            value={form.topGoals}\n          />\n          <Input\n            onChangeText={handleMetricChange}\n            title=\"What most improved your primary metric?\"\n            value={form.primaryMetric}\n          />\n          <Input\n            onChangeText={handleObstacleChange}\n            title=\"Biggest obstacle?\"\n            value={form.biggestObstacle}\n          />\n        </Section>\n\n        <Section title=\"Morale\">\n          <Input\n            keyboardType=\"numeric\"\n            onChangeText={handleMoraleChange}\n            title=\"On a scale of 1-10, what is your morale?\"\n            value={form.morale} // 1 (we are totally burned out) to 10 (we couldn't be more excited and optimistic!)\n          />\n        </Section>\n        <Spacing padding={2} />\n        <Button\n          center\n          color=\"accent\"\n          emphasis=\"high\"\n          onPress={handleSubmit}\n          title=\"submit\"\n        />\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useColors } from '../../../../features';\n\nexport const Tinder = memo(function PlaygroundTinder() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.primaryA,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Tinder\"\n    >\n      <View style={styles.container} />\n    </Screen>\n  );\n});\n","import { Animated } from 'react-native';\nimport { LayoutDimensions } from '../../../../features';\n\nexport type Item = {\n  dx: number;\n  dy: number;\n  index: number;\n  mass: number;\n  position: Animated.ValueXY;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst getRandomNumber = (min: number, max: number): number =>\n  Math.random() * (max - min) + min;\n\nconst rotate = (dx: number, dy: number, angle: number) => {\n  return {\n    x: dx * Math.cos(angle) - dy * Math.sin(angle),\n    y: dx * Math.sin(angle) + dy * Math.cos(angle),\n  };\n};\n\nexport const getNextDraw = (item: Item, layout: LayoutDimensions): Item => {\n  const next = { ...item };\n\n  next.x += next.dx;\n  next.y += next.dy;\n\n  const top = next.x - layout.x;\n  if (top <= 0) {\n    next.dx = -next.dx;\n    next.x = 0;\n  }\n  const right = layout.width - layout.x - next.x - next.radius * 2;\n  if (right <= 0) {\n    next.dx = -next.dx;\n    next.x = layout.x + layout.width - next.radius * 2;\n  }\n  const left = next.y - layout.y;\n  if (left <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y;\n  }\n  const bottom = layout.height - layout.y - next.y - next.radius * 2;\n  if (bottom <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y + layout.height - next.radius * 2;\n  }\n\n  return next;\n};\n\ntype GetInitialItemsProps = {\n  count: number;\n  layout: LayoutDimensions;\n  radius: number;\n  speed: number;\n};\n\nexport const getInitialItems = ({\n  count,\n  speed,\n  layout,\n  radius,\n}: GetInitialItemsProps): Item[] => {\n  const items: Item[] = [];\n\n  for (let i = 0; i < count; i++) {\n    const coordinate = {\n      x: getRandomNumber(layout.x, layout.x + layout.width - radius),\n      y: getRandomNumber(layout.y, layout.y + layout.height - radius),\n    };\n    items.push({\n      index: i,\n      ...coordinate,\n      position: new Animated.ValueXY(coordinate),\n      dx: getRandomNumber(-speed, speed),\n      dy: getRandomNumber(-speed, speed),\n      radius,\n      mass: radius,\n    });\n  }\n\n  return items;\n};\n\nexport const getItemOverlap = (a: Item, b: Item): boolean => {\n  const ac = { x: a.x + a.radius, y: a.y + a.radius };\n  const bc = { x: b.x + b.radius, y: b.y + b.radius };\n  const distSq = (ac.x - bc.x) * (ac.x - bc.x) + (ac.y - bc.y) * (ac.y - bc.y);\n  const radSq = (a.radius + b.radius) * (a.radius + b.radius);\n  return distSq <= radSq;\n};\n\n// TODO: make better without velocity change\nexport const getItemCollision = (a: Item, b: Item, maxSpeed: number): void => {\n  const xVelocityDiff = a.dx - b.dx;\n  const yVelocityDiff = a.dy - b.dy;\n\n  const xDist = b.x - a.x;\n  const yDist = b.y - a.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n    // Grab angle between the two colliding particles\n    const angle = -Math.atan2(b.y - a.y, b.x - a.x);\n\n    // Store mass in var for better readability in collision equation\n    const m1 = a.mass;\n    const m2 = b.mass;\n\n    // Velocity before equation\n    const u1 = rotate(a.dx, a.dy, angle);\n    const u2 = rotate(b.dx, b.dy, angle);\n\n    // Velocity after 1d collision equation\n    const v1 = {\n      dx: (u1.x * (m1 - m2)) / (m1 + m2) + (u2.x * 2 * m2) / (m1 + m2),\n      dy: u1.y,\n    };\n    const v2 = {\n      dx: (u2.x * (m1 - m2)) / (m1 + m2) + (u1.x * 2 * m1) / (m1 + m2),\n      dy: u2.y,\n    };\n\n    // Final velocity after rotating axis back to original location\n    const vFinal1 = rotate(v1.dx, v1.dy, -angle);\n    const vFinal2 = rotate(v2.dx, v2.dy, -angle);\n\n    // Swap particle velocities for realistic bounce effect\n    a.dx = Math.min(vFinal1.x, maxSpeed);\n    a.dy = Math.min(vFinal1.y, maxSpeed);\n\n    b.dx = Math.min(vFinal2.x, maxSpeed);\n    b.dy = Math.min(vFinal2.y, maxSpeed);\n  }\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Animated } from 'react-native';\nimport { Text, TouchableOpacity } from '../../../../components';\nimport { LayoutDimensions, useColors, useDriver } from '../../../../features';\nimport {\n  getInitialItems,\n  getItemCollision,\n  getItemOverlap,\n  getNextDraw,\n} from './utils';\n\ntype Props = {\n  collision?: boolean;\n  count: number;\n  difficulty?: number;\n  layout: LayoutDimensions;\n  radius: number;\n  speed?: number;\n};\n\nexport const Balls = memo(function Balls({\n  radius,\n  count,\n  layout,\n  speed = 5,\n  difficulty = 0.8,\n  collision,\n}: Props) {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const items = useRef(getInitialItems({ count, layout, radius, speed }));\n  const [score, setScore] = useState(0);\n\n  const draw = useCallback(() => {\n    Animated.parallel(\n      items.current.map((item) =>\n        Animated.timing(item.position, {\n          toValue: { x: item.x, y: item.y },\n          duration: 50,\n          useNativeDriver,\n        }),\n      ),\n    ).start(({ finished }) => {\n      if (!finished) return;\n      // TODO: method\n      // next step\n      items.current = items.current.map((item) => getNextDraw(item, layout));\n\n      // item collision\n      if (collision) {\n        for (let i = 0; i < items.current.length; i++) {\n          const a = items.current[i];\n          for (let j = i + 1; j < items.current.length; j++) {\n            const b = items.current[j];\n            const overlap = getItemOverlap(a, b);\n            if (overlap) getItemCollision(a, b, speed);\n          }\n        }\n      }\n\n      draw();\n    });\n  }, [collision, layout, speed, useNativeDriver]);\n\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  const handlePress = useCallback(\n    (index: number) => () => {\n      const active = items.current[index];\n      const multiplier = 1.5 + difficulty;\n\n      // TODO updateCurrentItem()\n      items.current[index] = {\n        ...active,\n        radius: active.radius * difficulty,\n        dx: active.dx * multiplier,\n        dy: -active.dy * multiplier,\n      };\n\n      // TODO addNewItem()\n      const coordinates = { x: active.x, y: active.y };\n      items.current.push({\n        ...coordinates,\n        mass: 10,\n        position: new Animated.ValueXY(coordinates),\n        index: items.current.length,\n        radius: active.radius * difficulty,\n        dx: -active.dx * multiplier,\n        dy: active.dy * multiplier,\n      });\n\n      setScore((prev) => prev + 1);\n    },\n    [difficulty],\n  );\n\n  return (\n    <>\n      <Text\n        center\n        title={String(score)}\n        type=\"h2\"\n      />\n      {items.current.map((item) => (\n        <Animated.View\n          key={item.index}\n          style={{\n            ...item.position.getLayout(),\n            position: 'absolute',\n          }}\n        >\n          <TouchableOpacity\n            onPress={handlePress(item.index)}\n            style={{\n              height: item.radius * 2,\n              width: item.radius * 2,\n              borderRadius: item.radius,\n              borderWidth: 1,\n              justifyContent: 'center',\n              borderColor: colors.border.accent,\n            }}\n          >\n            <Text\n              adjustsFontSizeToFit\n              center\n              title={String(item.index)}\n              type=\"h4\"\n            />\n          </TouchableOpacity>\n        </Animated.View>\n      ))}\n    </>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useColors, useLayout } from '../../../../features';\nimport { Balls } from './Balls';\n\nexport const BouncingBalls = memo(function BouncingBalls() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const { layout, onLayout } = useLayout();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Bouncing Balls\"\n    >\n      <View\n        onLayout={onLayout}\n        style={styles.container}\n      >\n        {layout ? (\n          <Balls\n            collision\n            count={2}\n            layout={layout}\n            radius={80}\n          />\n        ) : null}\n      </View>\n    </Screen>\n  );\n});\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React, { memo } from 'react';\nimport { Image, ImageSourcePropType, View } from 'react-native';\nimport { RelativeDate, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { Message } from './Messages';\ndayjs.extend(relativeTime);\n\ntype Props = {\n  item: Message;\n  marginBottom: boolean;\n};\n\nexport const Item = memo(function ChatMessage({ item, marginBottom }: Props) {\n  const colors = useColors();\n  const image =\n    require('../../../../assets/line-chart.png') as ImageSourcePropType;\n\n  return (\n    <View\n      key={item.id}\n      style={{\n        padding: padding(2),\n        borderRadius: padding(4),\n        flexDirection: 'row',\n        marginBottom: marginBottom ? padding(4) : 0,\n        backgroundColor: colors.background.primaryA,\n      }}\n    >\n      <View style={{ width: 40 }}>\n        <Image\n          source={image}\n          style={{\n            alignSelf: 'center',\n            height: 20,\n            paddingTop: padding(4),\n            resizeMode: 'contain',\n            width: 20,\n          }}\n        />\n      </View>\n      <View style={{ flex: 1 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text\n            bold\n            style={{ paddingRight: padding(2) }}\n            title={item.userId}\n          />\n          <RelativeDate date={item.createdAt} />\n        </View>\n        <Text\n          style={{ paddingTop: padding(1) }}\n          title={item.message}\n          type=\"body1\"\n        />\n      </View>\n    </View>\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, FlatListRef } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Item } from './Item';\nimport { getActiveChatMessagesOrderByCreatedAt, Message } from './Messages';\n\nexport const Items = memo(function ChatMessageItems() {\n  const itemsRef = useRef<FlatListRef>(null);\n  const colors = useColors();\n  const messages = useRootSelector(getActiveChatMessagesOrderByCreatedAt);\n  const renderItem = useCallback<ListRenderItem<Message>>(\n    ({ item }) => (\n      <Item\n        item={item}\n        marginBottom={item.id !== messages[0].id}\n      />\n    ),\n    [messages],\n  );\n  const keyExtractor = useCallback((item: Message) => item.id, []);\n\n  useEffect(() => {\n    itemsRef.current?.scrollToItem({ item: messages[0] });\n  }, [messages]);\n\n  return (\n    <FlatList\n      contentContainerStyle={{ padding: padding(4) }}\n      data={messages}\n      initialNumToRender={0}\n      inverted\n      keyExtractor={keyExtractor}\n      onRef={itemsRef}\n      renderItem={renderItem}\n      style={{ backgroundColor: colors.background.secondary }}\n    />\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { View } from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Icon,\n  Input,\n  TextInputRef,\n  TouchableOpacity,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport {\n  createChatMessage,\n  getChatSubmittable,\n  Message,\n  typeChatMessage,\n} from './Messages';\n\nexport const TextField = memo(function TextField() {\n  const dispatch = useRootDispatch();\n  const textFieldRef = useRef<TextInputRef>(null);\n  const textField = useRootSelector((state) => state.chatMessage.textField);\n  const submittable = useRootSelector(getChatSubmittable);\n  const onMessageChange = useCallback(\n    (message: string) => dispatch(typeChatMessage(message)),\n    [dispatch],\n  );\n  const colors = useColors();\n\n  const onSubmit = useCallback(() => {\n    if (textField.trim().length === 0) return;\n    const date = Date.now();\n    const message: Message = {\n      active: true,\n      createdAt: date,\n      userId: 'User bob',\n      id: v4(),\n      message: textField.trim(),\n      updatedAt: date,\n      conversationId: '1',\n    };\n    dispatch(createChatMessage(message));\n  }, [dispatch, textField]);\n\n  useEffect(() => {\n    textFieldRef.current?.focus();\n  }, []);\n\n  return (\n    <View\n      style={{\n        padding: padding(4),\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.background.primaryA,\n      }}\n    >\n      <Input\n        flex\n        onChangeText={onMessageChange}\n        onRef={textFieldRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Write something...\"\n        removeError\n        value={textField}\n      />\n      <TouchableOpacity\n        disabled={!submittable}\n        onPress={onSubmit}\n      >\n        <Icon\n          color={submittable ? 'accent' : 'primaryA'}\n          disabled={!submittable}\n          name=\"send\"\n          style={{\n            paddingLeft: padding(2),\n            justifyContent: 'center',\n          }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useLayout } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Items } from './Items';\nimport { TextField } from './TextField';\n\nexport const Chat = memo(function PlaygroundChat() {\n  const { goBack } = useNavigation();\n  const { layout, onLayout, insets } = useLayout();\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  const bottomInset = keyboardHeight > 0 ? insets.bottom : 0;\n  const height = (layout?.height || 0) - keyboardHeight + bottomInset;\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Chat\"\n    >\n      <View\n        onLayout={onLayout}\n        style={{ flex: 1 }}\n      >\n        <View style={{ height }}>\n          <Items />\n          <TextField />\n        </View>\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { Dimensions, ListRenderItem } from 'react-native';\nimport { FlatList, Image, Screen } from '../../../../components';\nimport { useColors } from '../../../../features';\n\nconst numColumns = 3;\nconst handleInfiniteScrollThreshold = 0.3;\nconst batch = 50;\nconst columnWidth = Dimensions.get('window').width / numColumns;\nconst imageUrl = `https://source.unsplash.com/random`;\nconst data: number[] = Array(batch)\n  .fill(0)\n  .map((_, x) => Date.now() + x);\n\nexport const ImageCollection = memo(function ImageCollection() {\n  const { goBack } = useNavigation();\n  const keyExtractor = useCallback((d: number) => d.toString(), []);\n  const handleFetchMore = useCallback(() => {\n    for (let i = 0; i < batch; i++) data.push(Date.now() + i);\n  }, []);\n  const colors = useColors();\n\n  const renderImage = useCallback<ListRenderItem<number>>(\n    ({ item }) => (\n      <Image\n        height={columnWidth}\n        uri={`${imageUrl}/${item}`}\n        width={columnWidth}\n      />\n    ),\n    [],\n  );\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Images\"\n    >\n      <FlatList\n        contentContainerStyle={{ backgroundColor: colors.background.secondary }}\n        data={data}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"handled\"\n        numColumns={numColumns}\n        onEndReached={handleFetchMore}\n        onEndReachedThreshold={handleInfiniteScrollThreshold}\n        renderItem={renderImage}\n      />\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport {\n  Button,\n  KeyboardAwareScrollView,\n  RecyclerFlatList,\n  RecyclerFlatListRef,\n  Screen,\n  Text,\n  TextInput,\n} from '../../../../components';\nimport {\n  ColorTheme,\n  colorWithOpacity,\n  padding,\n  useColors,\n} from '../../../../features';\n\nconst lorem =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean mollis pulvinar massa, a aliquet libero pellentesque id. Maecenas ut euismod ligula. Maecenas in odio id ex porttitor tempor sit amet tincidunt elit. Duis eu imperdiet augue. Suspendisse dignissim tempor nisi vitae lobortis. Morbi nec tempus massa, et vestibulum enim. Quisque tempus euismod leo, vel semper leo pellentesque vitae. Praesent semper rhoncus enim mattis auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sit amet metus maximus, pharetra ligula ut, luctus tortor. Etiam ut congue tellus. Praesent turpis justo, egestas vitae arcu ut, condimentum eleifend sem. Suspendisse sit amet augue sed enim maximus sollicitudin ac vel risus. Maecenas eu dui euismod, aliquam nibh non, mattis diam. Donec accumsan id lorem eget porttitor. Pellentesque non placerat dolor. Pellentesque tincidunt, neque sed suscipit varius, odio augue lobortis eros, ac aliquet erat mauris sed dolor. Curabitur massa nulla, dapibus pharetra turpis sed, viverra lobortis risus. Nulla rhoncus ipsum eu tellus semper lacinia. Pellentesque sed odio sed tellus ultricies tincidunt sed sed ipsum. Nam sed tincidunt eros. Praesent fermentum metus nec risus finibus placerat. Vestibulum est leo, accumsan sit amet enim a, tempor pharetra neque. Etiam id diam nulla. Curabitur sit amet lacus cursus lacus finibus rutrum. Maecenas commodo mauris non dignissim efficitur. In dictum elit vitae neque cursus pharetra at non nisl. Donec luctus ornare purus, eget pellentesque tellus imperdiet id. Suspendisse mollis gravida arcu a volutpat. Aliquam laoreet varius arcu, non tempor elit ultricies vel. Integer commodo ante et nisi condimentum, in ullamcorper sapien mollis. Integer nec ipsum nunc. Integer posuere, erat ut gravida accumsan, mauris lacus varius erat, eget fermentum est ex id risus. Curabitur lectus diam, egestas ac nibh at, sagittis interdum justo. Praesent vel purus et felis ullamcorper porta eget sit amet nisi. Aliquam erat volutpat. Nam id justo ligula. Integer maximus convallis enim eget consequat. Duis eget nunc at augue convallis fermentum non nec massa. Etiam aliquet lorem non nibh finibus laoreet. Fusce dictum tincidunt augue id fermentum. Phasellus varius arcu leo, non euismod ex varius id. Integer et orci nunc. Nulla facilisi. Aliquam nec lectus nunc. Vestibulum sit amet convallis risus. Vestibulum laoreet, odio non cursus mattis, tortor mauris auctor ex, ac semper eros nunc in neque. Integer non sodales felis.';\n\ntype Data = { color: string; id: string; name: string };\n\ntype GenerateItems = {\n  colors: ColorTheme;\n  length: number;\n  max?: number;\n  min?: number;\n};\nconst generateItems = ({\n  colors,\n  length,\n  min = 0.4,\n  max = 0.6,\n}: GenerateItems): Data[] => {\n  const output = [];\n  for (let i = 0; i < length; i++) {\n    const random = Math.random() * (max - min) + min;\n    output.push({\n      id: String(i),\n      name: String(i),\n      color: colorWithOpacity(colors.text.accent, random),\n    });\n  }\n  return output;\n};\nexport const KeyboardScroll = memo(function KeyboardScroll() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [message, setMessage] = useState('');\n\n  const { width } = Dimensions.get('window');\n  const [loading, setLoading] = useState(false);\n  const onEndReached = useCallback(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefetch = useCallback(() => {\n    setRefreshing(true);\n    const timeout = setTimeout(() => {\n      setRefreshing(false);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const onRowRender = useCallback((item: Data) => {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          backgroundColor: item.color,\n          marginBottom: padding(2),\n        }}\n      >\n        <Text title={item.name} />\n      </View>\n    );\n  }, []);\n\n  const [data, setData] = useState<Data[]>(() =>\n    generateItems({ colors, length: 200000 }),\n  );\n\n  const onChangeText = useCallback((v: string) => {\n    setMessage(v);\n  }, []);\n\n  const listRef = useRef<RecyclerFlatListRef>(null);\n\n  const onSubmit = useCallback(() => {\n    const date = Date.now().toString();\n    setData((p) => [...p, { id: date, name: date, color: colors.text.accent }]);\n    listRef.current?.scrollToEnd(true);\n  }, [colors.text.accent]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Keyboard\"\n    >\n      <KeyboardAwareScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        showsVerticalScrollIndicator={false}\n      >\n        <Text title={lorem} />\n        <Text\n          title=\"Header\"\n          type=\"h3\"\n        />\n        <View\n          style={{\n            height: 200,\n            backgroundColor: colors.background.secondary,\n            padding: padding(2),\n          }}\n        >\n          <RecyclerFlatList\n            data={data}\n            itemHeight={40}\n            itemWidth={width}\n            loading={loading}\n            onEndReached={onEndReached}\n            onRef={listRef}\n            onRefetch={onRefetch}\n            onRowRender={onRowRender}\n            refreshing={refreshing}\n          />\n        </View>\n        <TextInput\n          onChangeText={onChangeText}\n          placeholder=\"Username\"\n          value={message}\n        />\n        <Button\n          onPress={onSubmit}\n          title=\"Submit\"\n        />\n        <Text title={lorem} />\n      </KeyboardAwareScrollView>\n    </Screen>\n  );\n});\n","import {\n  GestureResponderEvent,\n  NativeTouchEvent,\n  PointPropType,\n} from 'react-native';\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  pinch: boolean;\n  spread: boolean;\n}\n\nexport class GestureHandler {\n  minTouches: number;\n\n  finish: Touches = {};\n\n  start: Touches = {};\n\n  constructor({ minTouches = 2 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  onPanResponderMove(event: GestureResponderEvent): void {\n    const { touches } = event.nativeEvent;\n    touches.forEach((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  recordStart(touch: NativeTouchEvent): void {\n    if (this.isStartAlreadyRecorded(touch)) return;\n\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  isStartAlreadyRecorded(touch: NativeTouchEvent): PointPropType {\n    return this.start[String(touch.identifier)];\n  }\n\n  recordFinish(touch: NativeTouchEvent): void {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType,\n  ): boolean {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  determineCenter(points: Touches): { x: number; y: number } {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false,\n    };\n    if (numRecordedTouched < this.minTouches) return outcome;\n\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) return outcome;\n\n      if (!isPinch && !isSpread) return outcome;\n\n      if (isPinch && spread) return outcome;\n\n      if (isSpread && pinch) return outcome;\n\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useState } from 'react';\nimport { Animated, PanResponder, StyleSheet, View } from 'react-native';\nimport { Screen, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { GestureHandler } from './logic';\n\nconst minTouches = 2;\nconst title = `pinch or spread the screen with ${minTouches} fingers minimum`;\n\nexport const PinchSpread = memo(function PinchSpread() {\n  const [state, setState] = useState({ pinchCount: 0, spreadCount: 0 });\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const styles = StyleSheet.create({\n    container: { backgroundColor: colors.background.secondary, flex: 1 },\n  });\n  const gestureHandler = new GestureHandler({ minTouches });\n  const panGesture = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (event) => gestureHandler.onPanResponderMove(event),\n    onPanResponderRelease: () => {\n      const outcome = gestureHandler.onPanResponderRelease();\n      if (outcome.spread)\n        setState((prev) => ({ ...prev, spreadCount: prev.spreadCount++ }));\n\n      if (outcome.pinch)\n        setState((prev) => ({ ...prev, pinchCount: prev.pinchCount++ }));\n    },\n  });\n\n  /* eslint-disable react/jsx-props-no-spreading */\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Pinch Spread\"\n    >\n      <Animated.View\n        style={styles.container}\n        {...panGesture.panHandlers}\n      />\n      <View style={{ padding: padding(2) }}>\n        <Text\n          center\n          title={title}\n        />\n        <Text\n          center\n          title={`spread: ${state.spreadCount}`}\n        />\n        <Text\n          center\n          title={`pinch: ${state.pinchCount}`}\n        />\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { Animated, ListRenderItem, StyleSheet, View } from 'react-native';\nimport { FlatList, Icon, Input, Screen, Text } from '../../../../components';\nimport {\n  colorWithOpacity,\n  padding,\n  useColors,\n  useDriver,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\n\ntype Data = {\n  id: number;\n  name: string;\n};\n\nconst data: Data[] = [\n  { id: 1, name: '1' },\n  { id: 2, name: '2' },\n  { id: 3, name: '3' },\n  { id: 4, name: '4' },\n  { id: 5, name: '5' },\n  { id: 6, name: '6' },\n  { id: 7, name: '7' },\n  { id: 8, name: '8' },\n  { id: 9, name: '9' },\n  { id: 10, name: '10' },\n  { id: 11, name: '11' },\n  { id: 12, name: '12' },\n  { id: 13, name: '13' },\n  { id: 14, name: '14' },\n  { id: 15, name: '15' },\n  { id: 16, name: '16' },\n  { id: 17, name: '17' },\n  { id: 18, name: '18' },\n  { id: 19, name: '19' },\n];\n\ninterface State {\n  animation: Animated.Value;\n  iconName: string;\n  input: string;\n}\n\nconst iconSearch = 'magnify';\nconst iconBack = 'arrow-left';\nconst textInputPlaceHolder = 'Search';\nconst animationDuration = 400;\n\nexport const SearchBar = memo(function PlaygroundSearchbar() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const [state, setState] = useState<State>({\n    animation: new Animated.Value(0),\n    iconName: iconSearch,\n    input: '',\n  });\n  const keyboardVisible = useRootSelector((s) => s.device.keyboardVisible);\n  const useNativeDriver = useDriver();\n  const translateIcon = state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1],\n  });\n  const fadeContainer = state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      colors.background.primaryA,\n      colorWithOpacity(colors.background.secondary),\n    ],\n  });\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      backgroundColor: colors.background.secondary,\n      height: padding(20),\n      justifyContent: 'center',\n      padding: padding(2),\n    },\n    item: {\n      borderBottomColor: colors.background.secondary,\n      borderWidth: 0.2,\n      padding: padding(6),\n    },\n    textContainer: {\n      alignItems: 'center',\n      backgroundColor: colors.background.primaryA,\n      flexDirection: 'row',\n      height: '100%',\n      padding: padding(2),\n    },\n    textInput: {\n      flex: 1,\n      marginLeft: padding(2),\n    },\n  });\n\n  const animate = useCallback(\n    (value: number) => {\n      Animated.timing(state.animation, {\n        duration: animationDuration,\n        toValue: value,\n        useNativeDriver,\n      }).start();\n    },\n    [state.animation, useNativeDriver],\n  );\n\n  const changeIcon = useCallback(\n    (iconName: string) => {\n      const iconChangeTimeout = setTimeout(() => {\n        clearTimeout(iconChangeTimeout);\n        setState({ ...state, iconName });\n      }, animationDuration / 2);\n    },\n    [state],\n  );\n\n  const onSearchBarFocus = useCallback(() => {\n    animate(1);\n    changeIcon(iconBack);\n  }, [animate, changeIcon]);\n\n  const onSearchBarUnFocus = useCallback(() => {\n    animate(0);\n    changeIcon(iconSearch);\n  }, [animate, changeIcon]);\n\n  useEffect(() => {\n    if (keyboardVisible) onSearchBarFocus();\n    else onSearchBarUnFocus();\n  });\n\n  const renderItem = useCallback<ListRenderItem<Data>>(\n    ({ item }) => (\n      <Text\n        style={styles.item}\n        title={item.name}\n        type=\"subtitle2\"\n      />\n    ),\n    [styles.item],\n  );\n\n  const keyExtractor = useCallback((item: Data) => item.id.toString(), []);\n\n  const onChangeText = useCallback(\n    (value: string) => setState((prev) => ({ ...prev, input: value })),\n    [],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Search Bar\"\n    >\n      <View style={styles.header}>\n        <View style={styles.textContainer}>\n          <Animated.View\n            style={{\n              transform: [{ translateX: translateIcon }],\n            }}\n          >\n            <Icon name={state.iconName} />\n          </Animated.View>\n          <Input\n            containerStyle={styles.textInput}\n            onChangeText={onChangeText}\n            placeholder={textInputPlaceHolder}\n            removeError\n            value={state.input}\n          />\n        </View>\n      </View>\n      <Animated.View style={{ flex: 1, backgroundColor: fadeContainer }}>\n        <FlatList\n          data={data}\n          keyExtractor={keyExtractor}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderItem}\n        />\n      </Animated.View>\n    </Screen>\n  );\n});\n","import React from 'react';\nimport { View } from 'react-native';\nimport { Card, SkeletonLoader } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\n\nexport const LoadingProfile = (): JSX.Element => {\n  const colors = useColors();\n  const banner = padding(24);\n\n  return (\n    <Card\n      noPadding\n      style={{\n        marginBottom: padding(4),\n        paddingBottom: padding(20),\n      }}\n    >\n      <View\n        style={{\n          borderTopLeftRadius: padding(2),\n          borderTopRightRadius: padding(2),\n          backgroundColor: colors.background.tertiary,\n          flex: 1,\n          height: banner,\n        }}\n      />\n      <View\n        style={{\n          alignItems: 'center',\n          width: '100%',\n          position: 'absolute',\n          left: 0,\n          top: banner * 0.5,\n          zIndex: 1,\n        }}\n      >\n        <SkeletonLoader\n          borderRadius={banner}\n          height={banner}\n          width={banner}\n        />\n      </View>\n      <View style={{ marginTop: banner * 0.5, alignItems: 'center' }}>\n        <View style={{ paddingVertical: padding(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={padding(6)}\n            width={padding(16) * 4}\n          />\n        </View>\n        <SkeletonLoader\n          borderRadius={0}\n          height={padding(6)}\n          width={padding(16) * 3}\n        />\n      </View>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { Card, SkeletonLoader } from '../../../../components';\nimport { padding } from '../../../../features';\n\nexport const LoadingSection = (): JSX.Element => {\n  return (\n    <Card style={{ marginBottom: padding(4) }}>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <SkeletonLoader\n            borderRadius={padding(24)}\n            height={padding(24)}\n            width={padding(24)}\n          />\n          <View\n            style={{\n              padding: padding(4),\n              justifyContent: 'space-between',\n            }}\n          >\n            <SkeletonLoader\n              borderRadius={0}\n              height={padding(6)}\n              width={padding(20)}\n            />\n            <SkeletonLoader\n              borderRadius={0}\n              height={padding(6)}\n              width={padding(20) * 2}\n            />\n          </View>\n        </View>\n        <View style={{ paddingVertical: padding(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={padding(6)}\n            width={padding(19) * 4}\n          />\n        </View>\n        <View style={{ paddingBottom: padding(4) }}>\n          <SkeletonLoader\n            borderRadius={0}\n            height={padding(6)}\n            width={padding(20) * 4}\n          />\n        </View>\n        <SkeletonLoader\n          borderRadius={0}\n          height={padding(6)}\n          width={padding(18) * 4}\n        />\n      </View>\n    </Card>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { Button, Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { LoadingProfile } from './LoadingProfile';\nimport { LoadingSection } from './LoadingSection';\n\nexport const SkeletonLoading = memo(function PlaygroundTemplate() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  const [loading, setLoading] = useState(true);\n\n  const load = useCallback(() => {\n    const timeout = setTimeout(() => {\n      setLoading(false);\n    }, 5000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const onRetry = useCallback(() => {\n    setLoading(true);\n    load();\n  }, [load]);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Skeleton Loader\"\n    >\n      <ScrollView\n        contentContainerStyle={{ padding: padding(4) }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        {loading ? (\n          <View>\n            <LoadingProfile />\n            <LoadingSection />\n            <LoadingSection />\n            <LoadingSection />\n            <LoadingSection />\n          </View>\n        ) : (\n          <View>\n            <Text\n              center\n              title=\"loaded\"\n            />\n            <Button\n              center\n              onPress={onRetry}\n              title=\"retry\"\n            />\n          </View>\n        )}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import dayjs, { Dayjs } from 'dayjs';\n\nexport const formatRelativeDate = (date: Dayjs): string => {\n  const now = dayjs();\n  const years = now.diff(date, 'year');\n  const weeks = now.diff(date, 'week');\n  const days = now.diff(date, 'day');\n  const hours = now.diff(date, 'hour');\n  const minutes = now.diff(date, 'minute');\n  return years\n    ? `${years}y`\n    : weeks\n    ? `${weeks}w`\n    : days\n    ? `${days}d`\n    : hours\n    ? `${hours}h`\n    : minutes\n    ? `${minutes}m`\n    : '';\n};\n","import { useNavigation } from '@react-navigation/native';\nimport dayjs, { Dayjs } from 'dayjs';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport {\n  Animated,\n  Image,\n  ImageSourcePropType,\n  LayoutChangeEvent,\n  PanResponder,\n  View,\n} from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Card,\n  Icon,\n  Screen,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n} from '../../../../components';\nimport {\n  padding,\n  useColors,\n  useDriver,\n  useDropShadow,\n} from '../../../../features';\nimport { getWidth, useRootSelector } from '../../../../redux';\nimport { formatRelativeDate } from './utils';\n\ntype SwipeCardProps = {\n  height: number;\n  index: number;\n  item: SwipeItem;\n  onSwipeComplete(): void;\n  onSwipePercentChange(percent: number): void;\n};\n\nconst SwipeCard = memo(function SwipeCard({\n  item,\n  height,\n  onSwipeComplete,\n  onSwipePercentChange,\n}: SwipeCardProps) {\n  const { icon, title, date, body, button, image } = item;\n  const cardWidth = useRef(0);\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const width = useRootSelector(getWidth);\n  const dropShadow = useDropShadow();\n  const imageHeight = height / 1.5;\n  const swipeThreshold = width / 3;\n  const touchThreshold = 50;\n  const position = new Animated.ValueXY();\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      cardWidth.current = event.nativeEvent.layout.width;\n    },\n    [cardWidth],\n  );\n\n  const setCardWidth = useCallback(\n    (dx: number) => {\n      onSwipePercentChange(1 - dx / cardWidth.current);\n    },\n    [cardWidth, onSwipePercentChange],\n  );\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponder: (_, gesture) =>\n      Math.abs(gesture.dx) > touchThreshold ||\n      Math.abs(gesture.dy) > touchThreshold,\n    onPanResponderMove: (_, gesture) => {\n      setCardWidth(gesture.dx);\n      position.setValue({ x: gesture.dx, y: gesture.dy });\n    },\n    onPanResponderRelease: (_, gesture) => {\n      const x =\n        gesture.dx > swipeThreshold\n          ? width\n          : gesture.dx < -swipeThreshold\n          ? -width\n          : 0;\n      Animated.spring(position, {\n        toValue: { x, y: 0 },\n        useNativeDriver,\n      }).start();\n    },\n  });\n\n  return (\n    <Animated.View\n      onLayout={onLayout}\n      {...panResponder.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n      style={{\n        position: 'absolute',\n        width: '100%',\n        left: position.x,\n        height,\n        backgroundColor: colors.background.primaryA,\n        borderRadius: padding(1),\n        borderColor: colors.border.accent,\n        ...dropShadow(4),\n      }}\n    >\n      <TouchableOpacity\n        onPress={onSwipeComplete}\n        style={{ flex: 1 }}\n      >\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          {image ? (\n            <Image\n              source={image}\n              style={{\n                height: imageHeight,\n                width: imageHeight,\n                alignSelf: 'center',\n              }}\n            />\n          ) : null}\n          <View style={{ flex: 1, padding: padding(2) }}>\n            <View\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                name={icon}\n                size={15}\n              />\n              <Text\n                bold\n                style={{ paddingHorizontal: padding(1) }}\n                title={title}\n                type=\"overline\"\n              />\n              <Text title={formatRelativeDate(date)} />\n            </View>\n            <Text\n              ellipsizeMode=\"tail\"\n              numberOfLines={2}\n              style={{ flex: 1, paddingTop: padding(2) }}\n              title={body}\n            />\n            <Text\n              color=\"positive\"\n              title={button.toUpperCase()}\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n});\n\ninterface SwipeItem {\n  body: string;\n  button: string;\n  date: Dayjs;\n  icon: string;\n  id: string;\n  image: ImageSourcePropType | null;\n  onPress(): void;\n  title: string;\n}\n\nconst initialItems: SwipeItem[] = [\n  {\n    id: v4(),\n    image: null,\n    title: 'Price Movement',\n    icon: 'arrow-bottom-right',\n    date: dayjs().subtract(5, 'minute'),\n    body: 'BABA is down 4.41% to $204.433.',\n    button: 'View BABA',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Marketwatch',\n    icon: 'file-document-box-outline',\n    date: dayjs().subtract(11, 'hour'),\n    body: 'Disney heiress Abigail Disney and other superrich American demand the 1% pay higher taxes than other Americans.',\n    button: 'View Article',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Reuters',\n    icon: 'book',\n    date: dayjs().subtract(1, 'day'),\n    body: \"Amazon files motion to halt Microsoft's work on Pentagon's JEDI contract\",\n    button: 'View Article',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: require('./placeholder.png'),\n    title: 'Congratulations',\n    icon: 'star-outline',\n    date: dayjs(),\n    body: \"You're invited! Start trading Bitcoin & Ethereum\",\n    button: 'Get Started',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: require('./placeholder.png'),\n    title: 'Enjoying robinhood?',\n    icon: 'star-outline',\n    date: dayjs(),\n    body: \"Invite your friends! When they sign up, you'll both get a free stock\",\n    button: 'Invite friends',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Introducing cards',\n    icon: 'lightbulb-outline',\n    date: dayjs(),\n    body: 'Swipe through cards to see your personalized notifications and news stories.',\n    button: 'Swipe to dismiss',\n    onPress: () => undefined,\n  },\n];\n\ninterface BadgeProps {\n  count: number;\n  percent: number;\n}\n\nconst Badge = memo(function Badge({ count, percent }: BadgeProps) {\n  const size = padding(6);\n  const badgeSize = size * percent;\n  const colors = useColors();\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        right: 0,\n        width: size,\n        height: size,\n        margin: padding(1),\n        zIndex: count * 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width: badgeSize,\n          height: badgeSize,\n          borderRadius: size,\n          backgroundColor: colors.background.negative,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          color=\"primaryB\"\n          title={`${count}`}\n        />\n      </View>\n    </View>\n  );\n});\n\ninterface SwipeCardsProps {\n  height?: number;\n  items: SwipeItem[];\n}\n\nconst SwipeCards = memo(function SwipeCardList({\n  height = 100,\n  items,\n}: SwipeCardsProps) {\n  const [feed, setFeed] = useState({\n    items,\n    percent: 1,\n  });\n\n  const onSwipeComplete = useCallback(() => {\n    setFeed((state) => ({\n      ...state,\n      percent: 1,\n      items: state.items.filter((_, i) => i !== state.items.length - 1),\n    }));\n  }, []);\n\n  const onSwipePercentChange = useCallback((percent: number) => {\n    setFeed((state) => ({\n      ...state,\n      percent,\n    }));\n  }, []);\n\n  return feed.items.length ? (\n    <View style={{ height }}>\n      {feed.items.map((item, index) => (\n        <SwipeCard\n          height={height}\n          index={index}\n          item={item}\n          key={item.id}\n          onSwipeComplete={onSwipeComplete}\n          onSwipePercentChange={onSwipePercentChange}\n        />\n      ))}\n      <Badge\n        count={feed.items.length}\n        percent={feed.percent}\n      />\n    </View>\n  ) : null;\n});\n\nconst ImagePlaceholder = memo(function ImagePlaceholder() {\n  return (\n    <Card noPadding>\n      <Image\n        source={require('./placeholder.png')}\n        style={{ width: '100%', height: 100, borderRadius: 4 }}\n      />\n    </Card>\n  );\n});\n\nexport const SwipeFeed = memo(function SwipeFeed() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Swipe Feed\"\n    >\n      <ScrollView\n        style={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <SwipeCards items={initialItems} />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef, useState } from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderInstance,\n  View,\n} from 'react-native';\nimport { Screen } from '../../../../components';\nimport { colorWithOpacity, useColors, useDriver } from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\n\nconst charSize = 50;\nconst charSpeed = 40;\nconst fps = 1000 / 60;\n\nconst getLimit = (value: number, limit: number) =>\n  value > limit ? limit : value < -limit ? -limit : value;\nconst getBounds = (value: number, limit: number, size: number) =>\n  value > limit - size ? limit - size : value < 0 ? 0 : value;\n\nexport const Archero = memo(function Archero() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const useNativeDriver = useDriver();\n  const timer = useRef(false);\n  const interval = useRef<ReturnType<typeof setInterval> | null>(null);\n  const gesture = useRef({ x0: 0, y0: 0, dx: 0, dy: 0 });\n  const window = useRootSelector((state) => state.dimension.window);\n  const [dimensions, setDimensions] = useState({ width: 1000, height: 1000 });\n  const { width, height } = dimensions;\n  const smallest = width > height ? height : width;\n  const joystickSize = smallest / 3;\n  const joystickCenter = joystickSize / 2;\n  const thumbSize = joystickSize / 3;\n  const initialJoystickLoc = {\n    x: width / 2 - joystickCenter,\n    y: height - joystickSize - 75,\n  };\n  const initialCharLoc = {\n    x: width / 2 - charSize / 2,\n    y: height / 2 - charSize / 2,\n  };\n  const initialThumbLoc = { x: 0, y: 0 };\n  let characterValueXY = initialCharLoc;\n  const joystick: Animated.ValueXY = new Animated.ValueXY(initialJoystickLoc);\n  const thumb: Animated.ValueXY = new Animated.ValueXY(initialThumbLoc);\n  const character: Animated.ValueXY = new Animated.ValueXY(initialCharLoc);\n  character.addListener(({ x, y }) => {\n    characterValueXY = { x, y };\n  });\n\n  const moveCharacter = () => {\n    const { dx, dy } = gesture.current;\n    const vx = getLimit(dx, charSpeed);\n    const vy = getLimit(dy, charSpeed);\n    const x = getBounds(characterValueXY.x + vx, width, charSize);\n    const y = getBounds(characterValueXY.y + vy, height, charSize);\n    Animated.spring(character, {\n      toValue: { x, y },\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveThumb = () => {\n    const { dx, dy } = gesture.current;\n    const angle = Math.atan2(dx, dy);\n    const dz = Math.sqrt(dx ** 2 + dy ** 2);\n    const z = getLimit(dz, thumbSize);\n    const x = z * Math.sin(angle);\n    const y = z * Math.cos(angle);\n    Animated.spring(thumb, {\n      toValue: { x, y },\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveJoystick = () => {\n    const { x0, y0 } = gesture.current;\n    const offset = window.height - dimensions.height;\n    const offset2 = window.width - dimensions.width;\n    const toValue = {\n      x: x0 - joystickCenter - offset2 / 2,\n      y: y0 - joystickCenter - offset / 2 - joystickSize / 1.5,\n    };\n    Animated.spring(joystick, { toValue, useNativeDriver }).start();\n  };\n\n  const resetJoystick = () => {\n    Animated.spring(joystick, {\n      toValue: initialJoystickLoc,\n      useNativeDriver,\n    }).start();\n    Animated.spring(thumb, {\n      toValue: initialThumbLoc,\n      useNativeDriver,\n    }).start();\n  };\n\n  const onUpdate = () => {\n    interval.current = setInterval(() => {\n      if (!timer.current) {\n        if (interval.current) clearInterval(interval.current);\n\n        resetJoystick();\n        return;\n      }\n      moveJoystick();\n      moveCharacter();\n      moveThumb();\n    }, fps);\n  };\n\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderStart: (_, g) => {\n      timer.current = true;\n      gesture.current = { x0: g.x0, y0: g.y0, dx: g.dx, dy: g.dy };\n      onUpdate();\n    },\n    onPanResponderMove: (_, g) => {\n      gesture.current = { x0: g.x0, y0: g.y0, dx: g.dx, dy: g.dy };\n    },\n    onPanResponderRelease: () => {\n      timer.current = false;\n    },\n  });\n\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\n    const { layout } = event.nativeEvent;\n    setDimensions({ width: layout.width, height: layout.height });\n  }, []);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Archero\"\n    >\n      <View\n        onLayout={onLayout}\n        style={{ flex: 1, backgroundColor: colors.background.tertiary }}\n        {...panGesture.panHandlers} // eslint-disable-line react/jsx-props-no-spreading\n      >\n        <Animated.View\n          style={[\n            character.getLayout(),\n            {\n              width: charSize,\n              height: charSize,\n              backgroundColor: colors.background.accent,\n            },\n          ]}\n        />\n        <Animated.View\n          style={[\n            joystick.getLayout(),\n            {\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 500,\n              width: joystickSize,\n              height: joystickSize,\n              backgroundColor: colors.overlay.light,\n            },\n          ]}\n        >\n          <View\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 500,\n              width: thumbSize,\n              height: thumbSize,\n              backgroundColor: colors.overlay.light,\n            }}\n          >\n            <Animated.View\n              style={[\n                thumb.getLayout(),\n                {\n                  borderRadius: 500,\n                  width: thumbSize,\n                  height: thumbSize,\n                  backgroundColor: colorWithOpacity(\n                    colors.background.accent,\n                    0.8,\n                  ),\n                },\n              ]}\n            />\n          </View>\n        </Animated.View>\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Screen, TouchableOpacity } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\n\nconst getRandom = (max: number) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst getInitialState = (rows: number, cols: number, gems: Gem[]): Board => {\n  const col = [];\n  for (let i = 0; i < cols; i++) {\n    const row = [];\n    for (let j = 0; j < rows; j++) row.push(gems[getRandom(gems.length)]);\n\n    col.push(row);\n  }\n  return col;\n};\n\ntype Vector = { x: number; y: number };\ntype Gem = { color: string; key: string };\ntype Board = Gem[][];\ntype Matches = { [key: string]: Vector };\n\nconst getMatches = (board: Board): Matches => {\n  const matches: Matches = {};\n  for (let i = 0; i < board.length; i++)\n    for (let j = 0; j < board[i].length; j++) {\n      const mid = board[i][j];\n      const left = i - 1 < 0 ? undefined : board[i - 1][j];\n      const right = i + 1 >= board.length ? undefined : board[i + 1][j];\n      const up = j - 1 < 0 ? undefined : board[i][j - 1];\n      const down = j + 1 >= board[i].length ? undefined : board[i][j + 1];\n      const vertical = up?.key === mid.key && down?.key === mid.key;\n      const horizontal = left?.key === mid.key && right?.key === mid.key;\n      if (vertical) {\n        matches[`${i}${j - 1}`] = { x: i, y: j - 1 };\n        matches[`${i}${j}`] = { x: i, y: j };\n        matches[`${i}${j + 1}`] = { x: i, y: j + 1 };\n      }\n      if (horizontal) {\n        matches[`${i - 1}${j}`] = { x: i - 1, y: j };\n        matches[`${i}${j}`] = { x: i, y: j };\n        matches[`${i + 1}${j}`] = { x: i + 1, y: j };\n      }\n    }\n\n  return matches;\n};\n\nexport type States = 'idle' | 'swap' | 'validate' | 'swap back' | 'fill gems';\n\nconst initialSelected = { x: -10, y: -10 };\nexport const Bejeweled = memo(function PlaygroundBejeweled() {\n  const { goBack } = useNavigation();\n  const dimension = useRootSelector(getSmallestDimension);\n\n  const colors = useColors();\n  const styles = StyleSheet.create({\n    container: { backgroundColor: colors.background.secondary },\n  });\n\n  const width = 6;\n  const height = 6;\n  const size = dimension / width;\n  const gems: Gem[] = [\n    { key: 'primary', color: colors.background.primaryA },\n    { key: 'brand', color: colors.background.primaryB },\n    { key: 'success', color: colors.background.positive },\n    { key: 'info', color: colors.background.accent },\n    { key: 'warning', color: colors.background.warning },\n    { key: 'danger', color: colors.background.negative },\n  ];\n\n  const [board, setBoard] = useState<Board>(() =>\n    getInitialState(width, height, gems),\n  );\n  getMatches(board);\n  const [selected, setSelected] = useState(initialSelected);\n\n  const onPress = (x: number, y: number) => () => {\n    const sum = Math.abs(x - selected.x) + Math.abs(y - selected.y);\n    if (sum === 0) {\n      setSelected(initialSelected);\n    } else if (sum === 1) {\n      setBoard((prev) => {\n        const temp = prev[x][y];\n        prev[x][y] = prev[selected.x][selected.y];\n        prev[selected.x][selected.y] = temp;\n        return [...prev];\n      });\n      setSelected(initialSelected);\n    } else {\n      setSelected({ x, y });\n    }\n  };\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Bejeweled\"\n    >\n      <View style={styles.container}>\n        {board.map((col, x) => (\n          <View\n            key={v4()}\n            style={{ flexDirection: 'row' }}\n          >\n            {col.map((gem, y) => (\n              <View\n                key={v4()}\n                style={{\n                  width: size,\n                  height: size,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={onPress(x, y)}\n                  style={{\n                    flex: 1,\n                    borderColor:\n                      selected.x === x && selected.y === y\n                        ? colors.border.primaryB\n                        : colors.border.primaryA,\n                    borderWidth: 4,\n                    backgroundColor: gem.color,\n                  }}\n                />\n              </View>\n            ))}\n          </View>\n        ))}\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport {\n  Button,\n  Card,\n  Input,\n  Screen,\n  ScrollView,\n  Spacing,\n  Text,\n} from '../../../../components';\nimport { padding, useColors } from '../../../../features';\n\n// type GameHistory = {\n//   callout: number;\n//   payout: number;\n//   players: string[];\n// };\n\n// type Game = {\n//   history: GameHistory[];\n//   id: string;\n//   name: string;\n// };\n\n// type PlayerHistory = {\n//   autoCallout: number;\n//   bid: number;\n//   callout: number;\n//   date: number;\n//   id: string;\n//   payout: number;\n// };\n\n// type Player = {\n//   cash: number;\n//   history: PlayerHistory[];\n//   id: string;\n//   name: string;\n// };\n\ntype Tab = 'manual' | 'auto';\ntype PlayerGame = {\n  activeTab: Tab;\n  autoCashOut: number;\n  bidAmount: number;\n  status: 'idle' | 'bid';\n};\n\ntype Game = {\n  endTime: number;\n  history: number[];\n  maxPayout: number;\n  payout: number;\n  startTime: number;\n  status: 'start' | 'finish' | 'run';\n};\n\n// https://www.youtube.com/watch?v=sRq1_B8raPg\nexport const Crash = memo(function CrashMemo() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  const [playerGame, setPlayerGame] = useState<PlayerGame>({\n    activeTab: 'manual',\n    bidAmount: 2,\n    autoCashOut: 4,\n    status: 'idle',\n  });\n\n  const [game, setGame] = useState<Game>({\n    status: 'start',\n    startTime: 0,\n    endTime: 0,\n    payout: 0,\n    maxPayout: 0,\n    history: [],\n  });\n  const gameSeconds = game.endTime - game.startTime;\n\n  const handleTabPress = useCallback(\n    (activeTab: Tab) => () => setPlayerGame((p) => ({ ...p, activeTab })),\n    [],\n  );\n\n  const handleAmountInputChange = useCallback(\n    (amount: string) =>\n      setPlayerGame((p) => ({ ...p, bidAmount: Number(amount) })),\n    [],\n  );\n\n  const handleAutoCashOutChange = useCallback(\n    (amount: string) =>\n      setPlayerGame((p) => ({ ...p, autoCashOut: Number(amount) })),\n    [],\n  );\n\n  const handleAmountPress = useCallback(\n    (amount: number) => () =>\n      setPlayerGame((p) => ({ ...p, bidAmount: p.bidAmount * amount })),\n    [],\n  );\n\n  const handleButtonPress = useCallback(() => {\n    setPlayerGame((p) => ({\n      ...p,\n      status: p.status === 'bid' ? 'idle' : 'bid',\n    }));\n  }, []);\n\n  const loop = useCallback(() => {\n    setTimeout(() => {\n      setGame((p) => ({ ...p }));\n      loop();\n    }, 30);\n  }, []);\n\n  useEffect(() => {\n    loop();\n  }, [loop]);\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Roobet Crash\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          paddingHorizontal: padding(4),\n          paddingVertical: padding(2),\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <View />\n\n        <Card>\n          <View\n            style={{ flexDirection: 'row', justifyContent: 'space-between' }}\n          >\n            <Text title=\"name\" />\n            <Text\n              emphasis=\"medium\"\n              title=\"cash\"\n            />\n          </View>\n        </Card>\n\n        <Card>\n          <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n            <Button\n              color={playerGame.activeTab === 'manual' ? 'accent' : 'primaryA'}\n              emphasis=\"medium\"\n              onPress={handleTabPress('manual')}\n              title=\"manual\"\n            />\n            <Spacing padding={2} />\n            <Button\n              color={playerGame.activeTab === 'auto' ? 'accent' : 'primaryA'}\n              emphasis=\"medium\"\n              onPress={handleTabPress('auto')}\n              title=\"auto\"\n            />\n          </View>\n          <Spacing padding={2} />\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Input\n              flex\n              onChangeText={handleAmountInputChange}\n              title=\"bet amount\"\n              value={String(playerGame.bidAmount)}\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(0.5)}\n              title=\"1/2\"\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(2)}\n              title=\"2x\"\n            />\n            <Spacing padding={1} />\n            <Button\n              emphasis=\"medium\"\n              onPress={handleAmountPress(100)}\n              title=\"max\"\n            />\n          </View>\n          <Input\n            onChangeText={handleAutoCashOutChange}\n            title=\"auto cashout\"\n            value={String(playerGame.autoCashOut)}\n          />\n          <Button\n            buttonStyle={{ padding: padding(3) }}\n            center\n            color=\"positive\"\n            emphasis=\"high\"\n            onPress={handleButtonPress}\n            title={playerGame.status === 'bid' ? 'cash out' : 'place bet'}\n          />\n        </Card>\n\n        <Card>\n          <View>\n            {game.status === 'start' ? (\n              <View>\n                <Text title=\"Preparing Round\" />\n                <Text title={`Staring in ${gameSeconds}s`} />\n              </View>\n            ) : game.status === 'finish' ? (\n              <View>\n                <Text title={`${game.payout}`} />\n                <Text title=\"Round Over\" />\n              </View>\n            ) : (\n              <View>\n                <Text title={`${game.payout}`} />\n                <Text title=\"Current Payout\" />\n                <Text title={`${game.payout * playerGame.bidAmount}`} />\n              </View>\n            )}\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const Drift = memo(function Drift() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Drift\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { Animated, View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useColors, useDriver } from '../../../../features';\n\nconst Bird = () => {\n  const colors = useColors();\n  return (\n    <Animated.View\n      style={{\n        backgroundColor: colors.background.negative,\n        width: 50,\n        height: 50,\n      }}\n    />\n  );\n};\n\nconst Pillar = () => {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const location = useRef(new Animated.ValueXY({ x: 0, y: 0 }));\n  const state = useRef({ x: 0, y: 0, direction: 1 });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const { y, direction } = state.current;\n      state.current.y = y + Number(direction);\n      Animated.spring(location.current, {\n        toValue: state.current,\n        useNativeDriver,\n      }).start();\n    }, 20);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [useNativeDriver, location]);\n\n  const onPress = useCallback(() => {\n    state.current.direction = -1;\n  }, []);\n\n  return (\n    <Animated.View\n      onTouchStart={onPress}\n      style={[\n        location.current.getLayout(),\n        {\n          backgroundColor: colors.background.positive,\n          width: 50,\n          height: 50,\n        },\n      ]}\n    />\n  );\n};\n\nexport const FlappyBird = memo(function FlappyBird() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Flappy Bird\"\n    >\n      <View style={{ flex: 1, backgroundColor: colors.background.secondary }}>\n        <Bird />\n        <Pillar />\n      </View>\n    </Screen>\n  );\n});\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","type GetRandomRange = {\n  max: number;\n  min: number;\n};\n\nconst getRandomRange = ({ min, max }: GetRandomRange) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\ntype GetNewLocation = {\n  location: number;\n  maxSpin: number;\n  minSpin: number;\n  numOfSegments: number;\n};\n\nexport const getNewLocation = ({\n  minSpin,\n  maxSpin,\n  numOfSegments,\n  location,\n}: GetNewLocation): number => {\n  const spins = getRandomRange({ min: minSpin, max: maxSpin }) * 360;\n  const winner = Math.floor(Math.random() * numOfSegments);\n  const winnerSection = (winner * 360) / numOfSegments;\n  return location + spins + winnerSection;\n};\n\ntype GetWinnerIndex = {\n  angleOfSegment: number;\n  location: number;\n  numOfSegments: number;\n};\n\nexport const getWinnerIndex = ({\n  location,\n  numOfSegments,\n  angleOfSegment,\n}: GetWinnerIndex): number => {\n  const deg = 360 - Math.floor(location % 360);\n  const index = Math.floor(deg / angleOfSegment);\n  return index >= numOfSegments ? 0 : index;\n};\n","import { arc as d3Arc, pie } from 'd3-shape';\nimport React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { Animated, Dimensions, Easing } from 'react-native';\nimport Svg, { G, Path, Polygon, Text } from 'react-native-svg';\nimport { v4 } from 'uuid';\nimport { TouchableOpacity } from '../../../../components';\nimport { useColors, useDriver, useDropShadow } from '../../../../features';\nimport { SuperAny } from '../../../../types/types';\nimport { Segment } from './types';\nimport { getNewLocation, getWinnerIndex } from './utils';\n\ntype Props = {\n  backgroundColor?: string;\n  bounceSpeed?: number;\n  fontSize?: number;\n  innerRadius?: number;\n  maxSpin?: number;\n  minSpin?: number;\n  noBounce?: boolean;\n  onComplete: (segment: Segment) => void;\n  padAngle?: number;\n  segments: Segment[];\n  size?: number;\n  spinSpeed?: number;\n  textColor?: string;\n};\n\nexport const Wheel = memo(function WheelMemo({\n  size = Dimensions.get('screen').width,\n  backgroundColor,\n  textColor,\n  fontSize = 24,\n  segments,\n  noBounce,\n  padAngle = 0.02,\n  innerRadius = 60,\n  spinSpeed = 1000,\n  bounceSpeed = 5000,\n  minSpin = 3,\n  maxSpin = 7,\n  onComplete,\n}: Props) {\n  const colors = useColors();\n  const dropShadow = useDropShadow();\n  const useNativeDriver = useDriver();\n  const background = backgroundColor || colors.background.primaryA;\n  const text = textColor || colors.text.primaryA;\n  const radius = size / 2;\n  const knobSize = size / 8;\n  const knobOffset = knobSize * 0.6;\n  const numOfSegments = segments.length;\n  const angleOfSegment = 360 / numOfSegments;\n  const angleOffset = angleOfSegment / 2;\n  const spinning = useRef(false);\n  const location = useRef(0);\n  const angle = useRef(new Animated.Value(0)).current;\n  const yPosition = useRef(new Animated.Value(-1)).current;\n  const arcs = pie()(segments.map(() => 1)).map((arc: SuperAny, index) => {\n    const instance = d3Arc()\n      .padAngle(padAngle)\n      .outerRadius(radius)\n      .innerRadius(innerRadius);\n    return {\n      path: instance(arc),\n      centroid: instance.centroid(arc),\n      segment: segments[index],\n    };\n  });\n\n  const onSpinComplete = useCallback(() => {\n    spinning.current = false;\n    const winnerIndex = getWinnerIndex({\n      location: location.current,\n      numOfSegments,\n      angleOfSegment,\n    });\n    onComplete(segments[winnerIndex]);\n  }, [angleOfSegment, numOfSegments, onComplete, segments]);\n\n  const spin = useCallback(() => {\n    const newLocation = getNewLocation({\n      minSpin,\n      maxSpin,\n      numOfSegments,\n      location: location.current,\n    });\n    location.current = newLocation;\n    spinning.current = true;\n    Animated.timing(angle, {\n      toValue: newLocation,\n      duration: spinSpeed,\n      easing: Easing.inOut(Easing.sin),\n      useNativeDriver,\n    }).start(onSpinComplete);\n  }, [\n    angle,\n    maxSpin,\n    minSpin,\n    numOfSegments,\n    onSpinComplete,\n    spinSpeed,\n    useNativeDriver,\n  ]);\n\n  const onPress = useCallback(() => {\n    if (spinning.current) return;\n    spin();\n  }, [spin]);\n\n  const bounce = useCallback(\n    (toValue: number) => {\n      const config = { toValue, duration: bounceSpeed, useNativeDriver };\n      Animated.timing(yPosition, config).start(() =>\n        bounce(toValue === 1 ? -1 : 1),\n      );\n    },\n    [bounceSpeed, useNativeDriver, yPosition],\n  );\n\n  useEffect(() => {\n    if (noBounce) return;\n\n    bounce(1);\n  }, [bounce, noBounce]);\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Animated.View\n        style={{\n          transform: [\n            {\n              translateY: yPosition.interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [-10, 0, -10],\n              }),\n            },\n          ],\n          backgroundColor: background,\n          width: size,\n          height: size,\n          borderRadius: size,\n          alignItems: 'center',\n          marginTop: knobOffset,\n          ...dropShadow(3),\n        }}\n      >\n        <Svg\n          style={{\n            marginTop: -knobOffset,\n            position: 'absolute',\n            width: knobSize,\n            height: knobSize,\n            ...dropShadow(6),\n          }}\n        >\n          <Polygon\n            fill={colors.background.tertiary}\n            points={`${knobSize / 2},0 ${knobSize * 0.85},${knobSize / 3} ${\n              knobSize / 2\n            },${knobSize} ${knobSize * 0.15},${knobSize / 3},`}\n            stroke={colors.background.secondary}\n            strokeWidth={0.2}\n          />\n        </Svg>\n        <Animated.View\n          style={{\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: angle.interpolate({\n                  inputRange: [-360, 0, 360],\n                  outputRange: ['-360deg', '0deg', '360deg'],\n                }),\n              },\n            ],\n          }}\n        >\n          <Svg\n            style={{\n              transform: [{ rotate: `-${angleOffset}deg` }],\n            }}\n          >\n            <G\n              x={radius}\n              y={radius}\n            >\n              {arcs.map((arc, i) => (\n                <G key={v4()}>\n                  <Path\n                    d={String(arc.path)}\n                    fill={arc.segment.color}\n                  />\n                  <G\n                    origin={`${arc.centroid}`}\n                    rotation={(i * 360) / segments.length + angleOffset}\n                  >\n                    <Text\n                      fill={text}\n                      fontSize={fontSize}\n                      textAnchor=\"middle\"\n                      x={arc.centroid[0]}\n                      y={arc.centroid[1] - knobOffset / 2}\n                    >\n                      {arc.segment.display}\n                    </Text>\n                  </G>\n                </G>\n              ))}\n            </G>\n          </Svg>\n        </Animated.View>\n      </Animated.View>\n    </TouchableOpacity>\n  );\n});\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useMemo, useState } from 'react';\nimport { Screen, Text } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport { Segment } from './types';\nimport { Wheel } from './Wheel';\n\nconst useSegments = () => {\n  const colors = useColors();\n  return useMemo(\n    () => [\n      { display: '1', value: '1', color: colors.background.positive },\n      { display: '2', value: '2', color: colors.background.negative },\n      { display: '3', value: '3', color: colors.background.secondary },\n      { display: '4', value: '4', color: colors.background.warning },\n      { display: '5', value: '5', color: colors.background.tertiary },\n      { display: '6', value: '6', color: colors.background.accent },\n      { display: '7', value: '7', color: colors.background.primaryA },\n    ],\n    [\n      colors.background.accent,\n      colors.background.negative,\n      colors.background.positive,\n      colors.background.primaryA,\n      colors.background.secondary,\n      colors.background.tertiary,\n      colors.background.warning,\n    ],\n  );\n};\n\nexport const FortuneWheel = memo(function PlaygroundFortuneWheel() {\n  const segments = useSegments();\n  const { goBack } = useNavigation();\n  const [winner, setWinner] = useState<null | string>(null);\n\n  const onComplete = useCallback((a: Segment) => {\n    setWinner(a.display);\n  }, []);\n\n  // TODO: fix text on android\n  // TODO: increase duration based on spin\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"FortuneWheel\"\n    >\n      <Wheel\n        onComplete={onComplete}\n        segments={segments}\n      />\n      <Text\n        center\n        title={String(winner)}\n      />\n    </Screen>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport { Button } from '../../../../components';\nimport { padding } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { resetBoard, toggleRun } from './redux';\n\nexport const Buttons = memo(function Buttons() {\n  const dispatch = useRootDispatch();\n  const run = useRootSelector((state) => state.gameOfLife.run);\n  const onRandom = useCallback(() => dispatch(resetBoard(0.5)), [dispatch]);\n  const onStart = useCallback(() => dispatch(toggleRun()), [dispatch]);\n  const onClear = useCallback(() => dispatch(resetBoard(0)), [dispatch]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: padding(4),\n      }}\n    >\n      <Button\n        emphasis=\"medium\"\n        onPress={onStart}\n        title={run ? 'stop' : 'start'}\n      />\n      <Button\n        emphasis=\"medium\"\n        onPress={onRandom}\n        title=\"random\"\n      />\n      <Button\n        emphasis=\"medium\"\n        onPress={onClear}\n        title=\"clear\"\n      />\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { TouchableOpacity } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport {\n  getSmallestDimension,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../../redux';\nimport { getCell, updateCell } from './redux';\n\ntype Props = {\n  x: number;\n  y: number;\n};\n\nexport const Cell = memo(function Cell({ x, y }: Props) {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const smallest = useRootSelector(getSmallestDimension);\n  const selected = useRootSelector(getCell(x, y));\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const size = smallest / count;\n\n  const onItemPress = useCallback(\n    (dx: number, dy: number) => () => {\n      dispatch(updateCell(dx, dy));\n    },\n    [dispatch],\n  );\n\n  return (\n    <TouchableOpacity\n      onPress={onItemPress(x, y)}\n      style={{\n        height: size,\n        width: size,\n        backgroundColor: selected\n          ? colors.background.accent\n          : colors.background.primaryA,\n        borderWidth: 1,\n        borderColor: colors.background.secondary,\n      }}\n    />\n  );\n});\n","import React, { memo, useMemo } from 'react';\nimport { View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { useRootSelector } from '../../../../redux';\nimport { Cell } from './Cell';\nimport { useLoop } from './useLoop';\n\nexport const GameBoard = memo(function GameBoard() {\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const array = useMemo(() => Array(count).fill(0), [count]);\n  useLoop();\n\n  return (\n    <View>\n      {array.map((_, x) => (\n        <View\n          key={v4()}\n          style={{ flexDirection: 'row', justifyContent: 'center' }}\n        >\n          {array.map((__, y) => (\n            <Cell\n              key={v4()}\n              x={x}\n              y={y}\n            />\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n});\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { loopBoard } from './redux';\n\nexport const useLoop = (): void => {\n  const dispatch = useRootDispatch();\n  const run = useRootSelector((state) => state.gameOfLife.run);\n  const delay = useRootSelector((state) => state.gameOfLife.delay);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const loop = useCallback(() => {\n    if (!run) return;\n    dispatch(loopBoard());\n  }, [dispatch, run]);\n\n  useEffect(() => {\n    if (!run) return undefined;\n    timeoutRef.current = setInterval(loop, delay);\n    return () => {\n      if (timeoutRef.current) clearInterval(timeoutRef.current);\n    };\n  }, [delay, dispatch, loop, run]);\n};\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport { Slider, Text } from '../../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { updateCount, updateDelay } from './redux';\n\nexport const Header = memo(function Header() {\n  const dispatch = useRootDispatch();\n  const delay = useRootSelector((state) => state.gameOfLife.delay);\n  const count = useRootSelector((state) => state.gameOfLife.count);\n  const onCountSlide = useCallback(\n    (v: number) => dispatch(updateCount(v)),\n    [dispatch],\n  );\n  const onDelaySlide = useCallback(\n    (v: number) => dispatch(updateDelay(v)),\n    [dispatch],\n  );\n\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text\n          style={{ alignSelf: 'center' }}\n          title={`count: ${count}`}\n          type=\"h5\"\n        />\n        <Slider\n          maximumValue={100}\n          minimumValue={1}\n          onSlidingComplete={onCountSlide}\n          step={1}\n          style={{ flex: 1 }}\n          value={10}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text\n          style={{ alignSelf: 'center' }}\n          title={`delay: ${Math.floor(delay)}`}\n          type=\"h5\"\n        />\n        <Slider\n          maximumValue={100}\n          minimumValue={1}\n          onSlidingComplete={onDelaySlide}\n          step={1}\n          style={{ flex: 1 }}\n          value={10}\n        />\n      </View>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { Screen, ScrollView, Text } from '../../../../components';\nimport { padding, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { Buttons } from './Buttons';\nimport { GameBoard } from './GameBoard';\nimport { Header } from './Header';\nimport { resetBoard } from './redux';\n\nexport const GameOfLife = memo(function PlaygroundGameOfLife() {\n  const colors = useColors();\n  const [loading, setLoading] = useState(true);\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n\n  useEffect(() => {\n    dispatch(resetBoard(0.5));\n    setLoading(false);\n  }, [dispatch]);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Game of life\"\n    >\n      <ScrollView\n        style={{\n          backgroundColor: colors.background.secondary,\n          padding: padding(4),\n        }}\n      >\n        {loading ? (\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"loading...\"\n            type=\"h5\"\n          />\n        ) : (\n          <View>\n            <Header />\n            <Buttons />\n            <GameBoard />\n          </View>\n        )}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Animated, View } from 'react-native';\nimport { Button, Text } from '../../../../components';\nimport { LayoutDimensions, useColors, useDriver } from '../../../../features';\n\ntype Props = {\n  duration?: number;\n  layout: LayoutDimensions;\n  radius?: number;\n};\n\ntype PapiObject = {\n  dx: number;\n  dy: number;\n  position: Animated.ValueXY;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst getInitialPapiLocation = (\n  layout: LayoutDimensions,\n  radius: number,\n): PapiObject => {\n  const cord = { x: layout.width / 2 - radius, y: layout.height / 8 - radius };\n  return {\n    ...cord,\n    dx: 0,\n    dy: 10,\n    position: new Animated.ValueXY(cord),\n    radius,\n  };\n};\n\nconst getNextDraw = (\n  layout: LayoutDimensions,\n  papi: PapiObject,\n): PapiObject => {\n  const next = { ...papi };\n\n  next.x += next.dx;\n  next.y += next.dy;\n\n  const top = next.x - layout.x;\n  if (top <= 0) {\n    next.dx = -next.dx;\n    next.x = 0;\n  }\n  const right = layout.width - layout.x - next.x - next.radius * 2;\n  if (right <= 0) {\n    next.dx = -next.dx;\n    next.x = layout.x + layout.width - next.radius * 2;\n  }\n  const left = next.y - layout.y;\n  if (left <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y;\n  }\n  const bottom = layout.height - layout.y - next.y - next.radius * 2;\n  if (bottom <= 0) {\n    next.dy = -next.dy;\n    next.y = layout.y + layout.height - next.radius * 2;\n  }\n\n  return next;\n};\n\nexport const Game = memo(function Game({\n  layout,\n  radius = 20,\n  duration = 50,\n}: Props) {\n  const colors = useColors();\n  const useNativeDriver = useDriver();\n  const papi = useRef(getInitialPapiLocation(layout, radius));\n  const [score, setScore] = useState(0);\n  const [pause, setPause] = useState(false);\n\n  const draw = useCallback(() => {\n    const papiAnimation = Animated.timing(papi.current.position, {\n      toValue: { x: papi.current.x, y: papi.current.y },\n      duration,\n      useNativeDriver,\n    });\n\n    if (pause) {\n      papiAnimation.stop();\n      return;\n    }\n\n    Animated.parallel([papiAnimation]).start(({ finished }) => {\n      if (!finished) return;\n\n      papi.current = getNextDraw(layout, papi.current);\n\n      draw();\n    });\n  }, [duration, layout, pause, useNativeDriver]);\n\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  const handleOnPress = useCallback(() => {\n    setPause((p) => !p);\n    setScore((p) => p + 1);\n  }, []);\n\n  return (\n    <>\n      <View\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          zIndex: 2,\n          position: 'absolute',\n          flexDirection: 'row',\n          width: '100%',\n        }}\n      >\n        <Text\n          center\n          title={String(score)}\n          type=\"h2\"\n        />\n        <View>\n          <Button\n            color={pause ? 'primaryA' : 'positive'}\n            onPress={handleOnPress}\n            title={pause ? 'pause' : 'start'}\n          />\n          <Button\n            onPress={handleOnPress}\n            title=\"reset\"\n          />\n        </View>\n      </View>\n      <Animated.View\n        style={{\n          ...papi.current.position.getLayout(),\n          position: 'absolute',\n          height: radius * 2,\n          width: radius * 2,\n          borderRadius: radius,\n          borderWidth: 1,\n          justifyContent: 'center',\n          backgroundColor: colors.tag.green,\n          borderColor: colors.border.positive,\n        }}\n      />\n    </>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Screen } from '../../../../components';\nimport { useColors, useLayout } from '../../../../features';\nimport { Game } from './Game';\n\nexport const PapiJump = memo(function PapiJump() {\n  const colors = useColors();\n  const { goBack } = useNavigation();\n  const { layout, onLayout } = useLayout();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: colors.background.secondary,\n      flex: 1,\n    },\n  });\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Papi Jump\"\n    >\n      <View\n        onLayout={onLayout}\n        style={styles.container}\n      >\n        {layout ? <Game layout={layout} /> : null}\n      </View>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const SlotMachine = memo(function SlotMachine() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Slot Machine\"\n    />\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Screen } from '../../../../components';\n\nexport const Snake = memo(function Snake() {\n  const { goBack } = useNavigation();\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Snake\"\n    />\n  );\n});\n","import { Board, BoardValue, Direction, PlayerTurn, State } from './types';\n\ntype DfsProps = {\n  c?: number;\n  d: Direction;\n  i: number;\n  j: number;\n  m: Board;\n  t: BoardValue;\n};\n\nconst dfs = ({ m, d, i, j, t, c = 0 }: DfsProps): number => {\n  if (i < 0 || j < 0 || i >= m.length || j >= m[0].length || m[i][j] !== t)\n    return 0;\n  const next = c + 1;\n  return Math.max(dfs({ m, d, i: i + d[0], j: j + d[1], t, c: next }), next);\n};\n\ntype WinnerProps = { board: Board; boardSize: number; i: number; j: number };\n\nexport const getWinner = ({\n  board,\n  i,\n  j,\n  boardSize,\n}: WinnerProps): BoardValue => {\n  const t = board[i][j];\n  const row =\n    dfs({ m: board, d: [0, -1], i, j, t }) +\n    dfs({ m: board, d: [0, 1], i, j, t }) -\n    1;\n  const col =\n    dfs({ m: board, d: [-1, 0], i, j, t }) +\n    dfs({ m: board, d: [1, 0], i, j, t }) -\n    1;\n  const dRow =\n    dfs({ m: board, d: [-1, -1], i, j, t }) +\n    dfs({ m: board, d: [1, 1], i, j, t }) -\n    1;\n  const dCol =\n    dfs({ m: board, d: [-1, 1], i, j, t }) +\n    dfs({ m: board, d: [1, -1], i, j, t }) -\n    1;\n  return Math.max(row, col, dRow, dCol) === boardSize ? t : 0;\n};\n\nexport const getValue = (n: number): string =>\n  n === 0 ? '' : n === 1 ? 'x' : 'o';\n\nexport const getNextValue = (turn: PlayerTurn): BoardValue =>\n  turn === 'white' ? 1 : -1;\n\ntype UpdateBoardProps = { board: Board; i: number; j: number; v: BoardValue };\n\nexport const getUpdatedBoard = ({\n  board,\n  i,\n  j,\n  v,\n}: UpdateBoardProps): Board => {\n  const copy = [...board];\n  copy[i][j] = v;\n  return copy;\n};\n\nexport const getInitialState = (boardSize: number): State => {\n  const board: Board = [];\n  for (let i = 0; i < boardSize; i++) {\n    const row: BoardValue[] = [];\n    for (let j = 0; j < boardSize; j++) row.push(0);\n    board.push(row);\n  }\n  return { board, turn: 'white', state: 'playing', winner: null };\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { View } from 'react-native';\nimport { v4 } from 'uuid';\nimport { Button, Screen, Text, TouchableOpacity } from '../../../../components';\nimport { useColors } from '../../../../features';\nimport {\n  getLandscapeOrientation,\n  getSmallestDimension,\n  useRootSelector,\n} from '../../../../redux';\nimport { State } from './types';\nimport {\n  getInitialState,\n  getNextValue,\n  getUpdatedBoard,\n  getValue,\n  getWinner,\n} from './utils';\n\nexport const TicTacToe = memo(function TicTacToe() {\n  const boardSize = 3;\n  const colors = useColors();\n  const { goBack } = useNavigation();\n\n  const [game, setGame] = useState<State>(getInitialState(boardSize));\n  const smallest = useRootSelector(getSmallestDimension);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const size = smallest / (boardSize + 1);\n  const buttonTitle = game.state === 'game-over' ? 'new game' : 'reset';\n  const turnTitle = game.winner\n    ? `winner ${game.winner}`\n    : `${game.turn}'s move`;\n\n  const onButtonPress = useCallback(() => {\n    setGame(getInitialState(boardSize));\n  }, []);\n\n  const onCellPress = useCallback(\n    (i: number, j: number) => () => {\n      setGame((p) => {\n        const v = getNextValue(p.turn);\n        const updatedBoard = getUpdatedBoard({ board: p.board, i, j, v });\n        const didWin = getWinner({ board: p.board, i, j, boardSize });\n        const winner = didWin === 1 ? 'white' : didWin === -1 ? 'black' : null;\n        return {\n          ...p,\n          board: updatedBoard,\n          turn: p.turn === 'white' ? 'black' : 'white',\n          state: didWin === 0 ? 'playing' : 'game-over',\n          winner,\n        };\n      });\n    },\n    [],\n  );\n\n  return (\n    <Screen\n      onLeftPress={goBack}\n      title=\"Tic Tac Toe\"\n    >\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: colors.background.secondary,\n          flexDirection: landscape ? 'row' : 'column',\n        }}\n      >\n        <View>\n          {game.board.map((row, i) => (\n            <View\n              key={v4()}\n              style={{ flexDirection: 'row' }}\n            >\n              {row.map((_, j) => (\n                <TouchableOpacity\n                  disabled={\n                    game.board[i][j] !== 0 || game.state === 'game-over'\n                  }\n                  key={v4()}\n                  onPress={onCellPress(i, j)}\n                  style={{\n                    width: size,\n                    height: size,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    backgroundColor: colors.background.primaryA,\n                    borderWidth: 2,\n                    borderColor: colors.background.secondary,\n                  }}\n                >\n                  <Text\n                    title={getValue(game.board[i][j])}\n                    type=\"h4\"\n                  />\n                </TouchableOpacity>\n              ))}\n            </View>\n          ))}\n        </View>\n        <View style={{ alignItems: 'center' }}>\n          <Text title={turnTitle} />\n          <Button\n            onPress={onButtonPress}\n            title={buttonTitle}\n          />\n        </View>\n      </View>\n    </Screen>\n  );\n});\n","type Category = 'features' | 'games' | 'storybook' | 'creations' | 'none';\ntype RouteCategories = { [key: string]: Category };\n\nconst routeCategories: RouteCategories = {\n  landing: 'none',\n  colors: 'storybook',\n  themes: 'storybook',\n  fonts: 'storybook',\n  paragraphs: 'storybook',\n  inputs: 'storybook',\n  modals: 'storybook',\n  'papi-jump': 'games',\n  snake: 'games',\n  archero: 'games',\n  crash: 'games',\n  'flappy-bird': 'games',\n  'tic-tac-toe': 'games',\n  'game-of-life': 'games',\n  bejeweled: 'games',\n  'slot-machine': 'games',\n  'fortune-wheel': 'games',\n  drift: 'games',\n  chat: 'features',\n  'infinite-images': 'features',\n  'skeleton-loader': 'features',\n  'recycler-flatList': 'features',\n  'search-bar': 'features',\n  'swipe-feed': 'features',\n  'bouncing-balls': 'features',\n  'pinch-spread': 'features',\n  ball: 'creations',\n  drag: 'creations',\n  okrs: 'creations',\n  startup: 'creations',\n  questionnaire: 'creations',\n  'apple-mask': 'creations',\n  'apple-stopwatch': 'creations',\n  'apple-fit': 'creations',\n  tinder: 'creations',\n};\n\ntype NavParams = { [key: string]: undefined };\n\nexport const navParams: NavParams = Object.keys(routeCategories).reduce(\n  (acc, key) => ({ ...acc, [key]: undefined }),\n  {},\n);\n\ntype LandingRoutes = { [key in Category]: string[] };\nexport const landingRoutes: LandingRoutes = Object.keys(routeCategories).reduce(\n  (acc, key) => ({\n    ...acc,\n    [routeCategories[key]]: [...acc[routeCategories[key]], key],\n  }),\n  { features: [], games: [], storybook: [], creations: [], none: [] },\n);\n","import React, { ReactNode } from 'react';\nimport { View } from 'react-native';\nimport { padding } from '../../../features';\n\ntype RowProps = { children: ReactNode };\nexport const Row = ({ children }: RowProps) => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        paddingHorizontal: padding(4),\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\nimport { Spacing, Text } from '../../../components';\n\ntype TitleProps = { description: string; title: string };\n\nexport const Title = ({ title, description }: TitleProps) => {\n  return (\n    <Spacing padding={4}>\n      <Text\n        title={title}\n        type=\"h5\"\n      />\n      <Text\n        emphasis=\"medium\"\n        title={description}\n        type=\"caption\"\n      />\n    </Spacing>\n  );\n};\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { ListRenderItem, View } from 'react-native';\nimport {\n  Card,\n  FlatList,\n  Screen,\n  Spacing,\n  Text,\n  TouchableOpacity,\n} from '../../../components';\nimport { padding, useColors } from '../../../features';\nimport { SuperAny } from '../../../types/types';\nimport { landingRoutes } from '../navParams';\nimport { Row } from './Row';\nimport { Title } from './Title';\n\nexport const Landing = memo(function Playground() {\n  const colors = useColors();\n  const { goBack, navigate } = useNavigation<SuperAny>();\n  const navToItem = useCallback(\n    (item: string) => () => navigate(item),\n    [navigate],\n  );\n  const renderItem = useCallback<ListRenderItem<string>>(\n    ({ item }) => (\n      <TouchableOpacity\n        key={item}\n        onPress={navToItem(item)}\n      >\n        <View style={{ paddingVertical: padding(2) }}>\n          <Text\n            bold\n            title={item}\n            type=\"body2\"\n          />\n        </View>\n      </TouchableOpacity>\n    ),\n    [navToItem],\n  );\n  const keyExtractor = useCallback((item: string) => item, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Playground\"\n    >\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: colors.background.secondary,\n          paddingVertical: padding(2),\n        }}\n      >\n        <Row>\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"component examples\"\n              title=\"storybook\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingHorizontal: padding(4),\n                paddingBottom: padding(2),\n              }}\n              data={landingRoutes.storybook}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n          <Spacing padding={2} />\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"polished modules\"\n              title=\"features\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingHorizontal: padding(4),\n                paddingBottom: padding(2),\n              }}\n              data={landingRoutes.features}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n        </Row>\n        <Row>\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"interactive fun\"\n              title=\"games\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingHorizontal: padding(4),\n                paddingBottom: padding(2),\n              }}\n              data={landingRoutes.games}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n          <Spacing padding={2} />\n          <Card\n            flex\n            noPadding\n          >\n            <Title\n              description=\"misc creations\"\n              title=\"creations\"\n            />\n            <FlatList\n              contentContainerStyle={{\n                paddingHorizontal: padding(4),\n                paddingBottom: padding(2),\n              }}\n              data={landingRoutes.creations}\n              keyExtractor={keyExtractor}\n              keyboardShouldPersistTaps=\"handled\"\n              renderItem={renderItem}\n            />\n          </Card>\n        </Row>\n      </View>\n    </Screen>\n  );\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport {\n  Colors,\n  Fonts,\n  Inputs,\n  Modals,\n  Paragraphs,\n  Themes,\n} from './Components';\nimport {\n  AppleFit,\n  AppleMask,\n  AppleStopWatch,\n  Ball,\n  Drag,\n  OKRs,\n  Questionnaire,\n  Startup,\n  Tinder,\n} from './Creations';\nimport {\n  BouncingBalls,\n  Chat,\n  ImageCollection,\n  KeyboardScroll,\n  PinchSpread,\n  SearchBar,\n  SkeletonLoading,\n  SwipeFeed,\n} from './Features';\nimport {\n  Archero,\n  Bejeweled,\n  Crash,\n  Drift,\n  FlappyBird,\n  FortuneWheel,\n  GameOfLife,\n  PapiJump,\n  SlotMachine,\n  Snake,\n  TicTacToe,\n} from './Games';\nimport { Landing } from './Landing';\nimport { navParams } from './navParams';\n\nconst noHeader = { headerShown: false };\nconst Stack = createStackNavigator<typeof navParams>();\n\nexport default memo(function Games() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen\n        component={Landing}\n        name=\"landing\"\n      />\n      {/* storybook */}\n      <Stack.Screen\n        component={Colors}\n        name=\"colors\"\n      />\n      <Stack.Screen\n        component={Themes}\n        name=\"themes\"\n      />\n      <Stack.Screen\n        component={Fonts}\n        name=\"fonts\"\n      />\n      <Stack.Screen\n        component={Paragraphs}\n        name=\"paragraphs\"\n      />\n      <Stack.Screen\n        component={Inputs}\n        name=\"inputs\"\n      />\n      <Stack.Screen\n        component={Modals}\n        name=\"modals\"\n      />\n\n      {/* games */}\n      <Stack.Screen\n        component={PapiJump}\n        name=\"papi-jump\"\n      />\n      <Stack.Screen\n        component={Snake}\n        name=\"snake\"\n      />\n      <Stack.Screen\n        component={Archero}\n        name=\"archero\"\n      />\n      <Stack.Screen\n        component={Crash}\n        name=\"crash\"\n      />\n      <Stack.Screen\n        component={FlappyBird}\n        name=\"flappy-bird\"\n      />\n      <Stack.Screen\n        component={TicTacToe}\n        name=\"tic-tac-toe\"\n      />\n      <Stack.Screen\n        component={GameOfLife}\n        name=\"game-of-life\"\n      />\n      <Stack.Screen\n        component={Bejeweled}\n        name=\"bejeweled\"\n      />\n      <Stack.Screen\n        component={SlotMachine}\n        name=\"slot-machine\"\n      />\n      <Stack.Screen\n        component={FortuneWheel}\n        name=\"fortune-wheel\"\n      />\n      <Stack.Screen\n        component={Drift}\n        name=\"drift\"\n      />\n\n      {/* features */}\n      <Stack.Screen\n        component={Chat}\n        name=\"chat\"\n      />\n      <Stack.Screen\n        component={ImageCollection}\n        name=\"infinite-images\"\n      />\n      <Stack.Screen\n        component={SkeletonLoading}\n        name=\"skeleton-loader\"\n      />\n      <Stack.Screen\n        component={KeyboardScroll}\n        name=\"recycler-flatList\"\n      />\n      <Stack.Screen\n        component={SearchBar}\n        name=\"search-bar\"\n      />\n      <Stack.Screen\n        component={SwipeFeed}\n        name=\"swipe-feed\"\n      />\n      <Stack.Screen\n        component={BouncingBalls}\n        name=\"bouncing-balls\"\n      />\n      <Stack.Screen\n        component={PinchSpread}\n        name=\"pinch-spread\"\n      />\n\n      {/* creations */}\n      <Stack.Screen\n        component={Ball}\n        name=\"ball\"\n      />\n      <Stack.Screen\n        component={Drag}\n        name=\"drag\"\n      />\n      <Stack.Screen\n        component={OKRs}\n        name=\"okrs\"\n      />\n      <Stack.Screen\n        component={Startup}\n        name=\"startup\"\n      />\n      <Stack.Screen\n        component={Questionnaire}\n        name=\"questionnaire\"\n      />\n      <Stack.Screen\n        component={AppleMask}\n        name=\"apple-mask\"\n      />\n      <Stack.Screen\n        component={AppleStopWatch}\n        name=\"apple-stopwatch\"\n      />\n      <Stack.Screen\n        component={AppleFit}\n        name=\"apple-fit\"\n      />\n      <Stack.Screen\n        component={Tinder}\n        name=\"tinder\"\n      />\n    </Stack.Navigator>\n  );\n});\n"],"names":["ButtonGroup","memo","emphasis","colors","useColors","keys","Object","text","View","style","flex","center","paddingBottom","padding","title","type","map","c","buttonStyle","margin","color","disabled","key","v4","dropShadow","FontGroup","sizes","fontSizes","alignItems","bold","TagGroup","onPress","useCallback","tag","ThemeGroup","dispatch","useRootDispatch","currentTheme","useRootSelector","state","theme","themes","flexDirection","justifyContent","changeTheme","Title","Colors","goBack","useNavigation","onLeftPress","Fonts","contentContainerStyle","backgroundColor","background","secondary","Inputs","useState","email","error","name","password","form","setForm","handleChange","val","prev","handleSubmit","paddingHorizontal","paddingVertical","keyboardShouldPersistTaps","containerStyle","onChangeText","optional","placeholder","value","keyboardType","textContentType","secureTextEntry","paddingTop","Item","description","icon","hidden","active","marginBottom","styles","StyleSheet","button","borderColor","border","primaryA","borderRadius","borderWidth","height","container","subtitle","paddingLeft","textContainer","accent","length","size","Location","locations","id","onItemPress","index","location","daysOfWeek","OneTime","buttons","laterToday","dayjs","add","set","evening","tomorrow","nextWeek","nextMonth","yesterday","subtract","format","visible","day","generateButtons","valueOf","Radio","onChange","horizontal","Repeat","setActive","items","item","reminderTypes","Create","onBackgroundPress","onOneTimePress","onLocationPress","setState","section","submit","marginTop","handleReminderTypePress","showOverlay","Reminders","onComplete","reminders","modals","customDate","createReminder","selected","undefined","handleOneTimeReminder","date","isBefore","handleCustomDateClose","handleCreateReminderClose","handleLocation","handleLocationClose","ModalManager","modal","onClose","handleClose","setValue","handleTextChange","v","onCancelPress","onConfirmPress","onCancel","Modals","setModal","handleModalChange","nextModal","data","paragraphs","titleType","Paragraphs","showsVerticalScrollIndicator","sections","image","require","cards","target","chart","Themes","elevation","setElevation","handleSlider","columns","getLandscapeOrientation","renderItem","Image","source","resizeMode","width","maximumValue","minimumTrackTintColor","minimumValue","onValueChange","step","numColumns","AppleFit","Section","imageRatio","getWidth","leftWidth","imageWidth","borderBottomColor","tertiary","borderBottomWidth","String","AppleMask","_toArray","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","ButtonRound","colorScheme","buttonBorder","primaryB","buttonTitle","fontSize","handlePress","ButtonsRow","children","buttonsRow","alignSelf","Timer","interval","pad","n","toString","minutes","Math","floor","seconds","milliseconds","timerContainer","substr","Lap","num","fastest","slowest","positive","lap","borderTopWidth","lapText","fontFamily","negative","lapStyle","LapsTable","laps","timer","finishedLaps","slice","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","forEach","scrollView","AppleStopWatch","now","start","useRef","elapsed","reduce","total","curr","fontWeight","useEffect","current","clearTimeout","timestamp","Date","getTime","firstLap","other","stop","clearInterval","reset","run","setInterval","resume","Ball","getHeight","ballPosition","Animated","x","y","useNativeDriver","useDriver","ball","marginLeft","animate","dx","dy","toValue","onInitialPress","onRandomPress","random","testID","getLayout","Drag","useDropShadow","canvas","setCanvas","initialPosition","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","maxY","minY","maxX","minX","getPosition","onPanResponderEnd","handleCanvas","event","nativeEvent","layout","onLayout","position","left","right","top","panHandlers","OKRs","Questionnaires","questionnaires","getQuestionnaireArray","actionSheet","setActionSheet","handleLongPress","removeQuestionnaire","handleItemPress","selectQuestionnaire","handleActionSheetClose","handleCreate","createQuestionnaire","handleItemMenu","questions","onLongPress","keyExtractor","extraData","fab","bottom","choices","next","Dimensions","viewabilityConfig","itemVisiblePercentThreshold","Questionnaire","output","setOutput","currentIndex","tableViewRef","handleViewableItemsChanged","viewableItems","onProgress","direction","scrollToIndex","animated","onSelection","choice","updateSelection","updateProgress","onRef","onViewableItemsChanged","pagingEnabled","removeClippedSubviews","scrollEnabled","showsHorizontalScrollIndicator","initialState","launched","launchWeeks","usersTalkedTo","usersLearnedFrom","topGoals","primaryMetric","biggestObstacle","morale","targetCustomer","Startup","launchSubText","parseInt","updateForm","handleLaunchChange","Boolean","handleUserChange","handleMoraleChange","handleObstacleChange","handleLearnChange","handleMetricChange","handleGoalChange","handleWeeksToLaunchChange","Tinder","getRandomNumber","rotate","angle","cos","sin","getItemOverlap","a","b","ac","radius","bc","getItemCollision","maxSpeed","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","Balls","count","speed","difficulty","collision","i","coordinate","push","getInitialItems","score","setScore","draw","duration","finished","getNextDraw","j","multiplier","coordinates","adjustsFontSizeToFit","BouncingBalls","useLayout","relativeTime","paddingRight","userId","createdAt","message","Items","itemsRef","messages","getActiveChatMessagesOrderByCreatedAt","scrollToItem","initialNumToRender","inverted","TextField","textFieldRef","textField","chatMessage","submittable","getChatSubmittable","onMessageChange","typeChatMessage","onSubmit","trim","updatedAt","conversationId","createChatMessage","focus","onSubmitEditing","removeError","Chat","insets","keyboardHeight","s","device","bottomInset","columnWidth","Array","fill","ImageCollection","d","handleFetchMore","renderImage","uri","onEndReached","onEndReachedThreshold","lorem","KeyboardScroll","setMessage","loading","setLoading","timeout","setTimeout","refreshing","setRefreshing","onRefetch","onRowRender","colorWithOpacity","generateItems","setData","listRef","p","scrollToEnd","itemHeight","itemWidth","GestureHandler","minTouches","finish","this","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","point","pinch","spread","determineCenter","isPinch","isSpread","PinchSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","iconSearch","SearchBar","animation","iconName","input","keyboardVisible","translateIcon","interpolate","inputRange","outputRange","fadeContainer","header","textInput","changeIcon","iconChangeTimeout","animationDuration","onSearchBarFocus","onSearchBarUnFocus","transform","translateX","LoadingProfile","banner","noPadding","borderTopLeftRadius","borderTopRightRadius","zIndex","LoadingSection","SkeletonLoading","load","onRetry","formatRelativeDate","years","diff","weeks","days","hours","SwipeCard","onSwipeComplete","onSwipePercentChange","body","cardWidth","imageHeight","swipeThreshold","setCardWidth","panResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","gesture","ellipsizeMode","numberOfLines","toUpperCase","initialItems","Badge","percent","badgeSize","SwipeCards","feed","setFeed","filter","ImagePlaceholder","SwipeFeed","charSize","getLimit","limit","getBounds","Archero","x0","y0","window","dimension","dimensions","setDimensions","joystickSize","joystickCenter","thumbSize","initialJoystickLoc","initialCharLoc","initialThumbLoc","characterValueXY","joystick","thumb","character","addListener","onUpdate","offset","offset2","moveJoystick","vx","vy","moveCharacter","dz","sqrt","z","moveThumb","onPanResponderStart","g","overlay","light","getRandom","initialSelected","Bejeweled","getSmallestDimension","gems","warning","rows","cols","col","row","getInitialState","board","setBoard","matches","mid","up","down","vertical","getMatches","setSelected","sum","temp","gem","Crash","activeTab","bidAmount","autoCashOut","status","playerGame","setPlayerGame","startTime","endTime","payout","maxPayout","history","game","setGame","gameSeconds","handleTabPress","handleAmountInputChange","amount","handleAutoCashOutChange","handleAmountPress","handleButtonPress","loop","Drift","Bird","Pillar","onTouchStart","FlappyBird","NaN","epsilon","pi","PI","halfPi","tau","acos","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","getNewLocation","minSpin","maxSpin","numOfSegments","spins","getRandomRange","Wheel","textColor","segments","noBounce","spinSpeed","bounceSpeed","knobSize","knobOffset","angleOfSegment","angleOffset","spinning","yPosition","arcs","identity","sortValues","descending","sort","constant","pie","k","a1","array","a0","apply","arguments","da","pa","arc","instance","cornerRadius","padRadius","context","buffer","r0","path","moveTo","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","d3Arc","segment","onSpinComplete","winnerIndex","deg","getWinnerIndex","spin","newLocation","easing","Easing","bounce","config","translateY","Polygon","stroke","strokeWidth","G","Path","origin","rotation","Text","textAnchor","display","FortuneWheel","useMemo","useSegments","winner","setWinner","Buttons","gameOfLife","onRandom","resetBoard","onStart","toggleRun","onClear","Cell","smallest","getCell","updateCell","GameBoard","delay","timeoutRef","loopBoard","useLoop","__","Header","onCountSlide","updateCount","onDelaySlide","updateDelay","onSlidingComplete","GameOfLife","Game","papi","cord","getInitialPapiLocation","pause","setPause","papiAnimation","handleOnPress","green","PapiJump","SlotMachine","Snake","dfs","m","boardSize","turn","TicTacToe","landscape","turnTitle","onButtonPress","onCellPress","updatedBoard","copy","getUpdatedBoard","didWin","dRow","dCol","getWinner","routeCategories","landing","fonts","inputs","snake","archero","crash","bejeweled","drift","chat","drag","okrs","startup","questionnaire","tinder","landingRoutes","acc","features","games","storybook","creations","none","Row","Landing","navigate","navToItem","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component"],"sourceRoot":""}