{"version":3,"file":"static/js/455.e532dff1.chunk.js","mappings":"kOAaA,WAAeA,EAAAA,EAAAA,OAAK,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAUC,EAAAA,EAAAA,cACd,SAACC,GAAD,OAA0B,kBAAMJ,EAASI,MACzC,CAACJ,IAEGK,GAAQC,EAAAA,EAAAA,MAERC,GAAgBJ,EAAAA,EAAAA,cAAY,WAChCL,GACEU,EAAAA,EAAAA,IAAc,CACZC,SAAS,EACTC,kBAAmB,WACjBZ,GAASU,EAAAA,EAAAA,IAAc,CAAEC,SAAS,SAIxCE,YAAW,WACTb,GAASU,EAAAA,EAAAA,IAAc,CAAEC,SAAS,OACjC,OACF,CAACX,IAEEc,GAAcT,EAAAA,EAAAA,cAAY,WAC9BL,GACEe,EAAAA,EAAAA,IAAY,CACVJ,SAAS,EACTK,MAAO,QACPC,YAAa,mBACbL,kBAAmB,WACjBZ,GAASe,EAAAA,EAAAA,IAAY,CAAEJ,SAAS,MAElCO,aAAc,UACdC,eAAgB,WACdnB,GAASe,EAAAA,EAAAA,IAAY,CAAEJ,SAAS,MAElCS,YAAa,SACbC,cAAe,WACbrB,GAASe,EAAAA,EAAAA,IAAY,CAAEJ,SAAS,WAIrC,CAACX,IAEEsB,GAAqBjB,EAAAA,EAAAA,cAAY,WACrCL,GACEuB,EAAAA,EAAAA,IAAmB,CACjBZ,SAAS,EACTK,MAAO,eACPC,YAAa,0BACbO,KAAM,cAGT,CAACxB,IAEEyB,GAAoBpB,EAAAA,EAAAA,cAAY,WACpCL,GACE0B,EAAAA,EAAAA,IAAkB,CAChBf,SAAS,EACTK,MAAO,eACPC,YAAa,0BACbU,MAAO,GACPf,kBAAmB,aACnBS,cAAe,kBAGlB,CAACrB,IAEJ,OACE,gBAAC,KAAD,CAAQ4B,YAAU,EAACZ,MAAM,SACvB,gBAAC,KAAD,CACEa,sBAAuB,CAAEC,mBAAmBC,EAAAA,EAAAA,IAAQ,IACpDC,MAAO,CAAEC,gBAAiB1B,EAAM2B,WAAWC,YAE3C,gBAAC,KAAD,CAAMC,SAAS,SAASpB,MAAM,OAAOQ,KAAK,OAC1C,gBAAC,KAAD,CAAQpB,QAASA,EAAQ,UAAWY,MAAM,WAC1C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,aAAcY,MAAM,cAC7C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,gBAAiBY,MAAM,kBAChD,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,cAAeY,MAAM,eAC9C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,SAAUY,MAAM,UACzC,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,WAAYY,MAAM,YAC3C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,YAAaY,MAAM,aAC5C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,gBAAiBY,MAAM,iBAChD,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,iBAAkBY,MAAM,kBACjD,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,YAAaY,MAAM,aAC5C,gBAAC,KAAD,CAAQZ,QAASA,EAAQ,aAAcY,MAAM,cAE7C,gBAAC,KAAD,CAAMoB,SAAS,SAASpB,MAAM,aAAaQ,KAAK,OAChD,gBAAC,KAAD,CAAQpB,QAASK,EAAeO,MAAM,YACtC,gBAAC,KAAD,CAAQZ,QAASU,EAAaE,MAAM,UACpC,gBAAC,KAAD,CAAQZ,QAASqB,EAAmBT,MAAM,iBAC1C,gBAAC,KAAD,CAAQZ,QAASkB,EAAoBN,MAAM,iBAE3C,gBAAC,KAAD,CAAMoB,SAAS,SAASpB,MAAM,WAAWQ,KAAK,OAC9C,gBAAC,KAAD,CAAQpB,QAASA,EAAQ,cAAeY,MAAM","sources":["apps/Admin/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { Button, Screen, Text } from '../../components';\nimport { ScrollView } from '../../conversions';\nimport { padding, RootNavigation, RootRoutes, useColor } from '../../features';\nimport {\n  toggleActionSheet,\n  toggleAlert,\n  toggleLoading,\n  toggleNotification,\n  useRootDispatch,\n} from '../../redux';\n\nexport default memo(function Admin() {\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<RootNavigation>();\n  const onPress = useCallback(\n    (to: keyof RootRoutes) => () => navigate(to),\n    [navigate],\n  );\n  const color = useColor();\n\n  const handleLoading = useCallback(() => {\n    dispatch(\n      toggleLoading({\n        visible: true,\n        onBackgroundPress: () => {\n          dispatch(toggleLoading({ visible: false }));\n        },\n      }),\n    );\n    setTimeout(() => {\n      dispatch(toggleLoading({ visible: false }));\n    }, 3000);\n  }, [dispatch]);\n\n  const handleAlert = useCallback(() => {\n    dispatch(\n      toggleAlert({\n        visible: true,\n        title: 'Alert',\n        description: 'This is an alert',\n        onBackgroundPress: () => {\n          dispatch(toggleAlert({ visible: false }));\n        },\n        confirmTitle: 'Confirm',\n        onConfirmPress: () => {\n          dispatch(toggleAlert({ visible: false }));\n        },\n        cancelTitle: 'Cancel',\n        onCancelPress: () => {\n          dispatch(toggleAlert({ visible: false }));\n        },\n      }),\n    );\n  }, [dispatch]);\n\n  const handleNotification = useCallback(() => {\n    dispatch(\n      toggleNotification({\n        visible: true,\n        title: 'Notification',\n        description: 'This is an notification',\n        type: 'accent',\n      }),\n    );\n  }, [dispatch]);\n\n  const handleActionSheet = useCallback(() => {\n    dispatch(\n      toggleActionSheet({\n        visible: true,\n        title: 'Action sheet',\n        description: 'This is an action sheet',\n        items: [],\n        onBackgroundPress: () => undefined,\n        onCancelPress: () => undefined,\n      }),\n    );\n  }, [dispatch]);\n\n  return (\n    <Screen dropShadow title=\"Admin\">\n      <ScrollView\n        contentContainerStyle={{ paddingHorizontal: padding(4) }}\n        style={{ backgroundColor: color.background.secondary }}\n      >\n        <Text emphasis=\"medium\" title=\"Apps\" type=\"h3\" />\n        <Button onPress={onPress('arcade')} title=\"arcade\" />\n        <Button onPress={onPress('portfolio')} title=\"portfolio\" />\n        <Button onPress={onPress('cant-hurt-me')} title=\"can't hurt me\" />\n        <Button onPress={onPress('checklists')} title=\"checklists\" />\n        <Button onPress={onPress('focus')} title=\"focus\" />\n        <Button onPress={onPress('journal')} title=\"journal\" />\n        <Button onPress={onPress('progress')} title=\"progress\" />\n        <Button onPress={onPress('comfort-zone')} title=\"comfort zone\" />\n        <Button onPress={onPress('the-one-thing')} title=\"the one thing\" />\n        <Button onPress={onPress('complete')} title=\"complete\" />\n        <Button onPress={onPress('deep-work')} title=\"deep work\" />\n\n        <Text emphasis=\"medium\" title=\"Navigation\" type=\"h3\" />\n        <Button onPress={handleLoading} title=\"loading\" />\n        <Button onPress={handleAlert} title=\"alert\" />\n        <Button onPress={handleActionSheet} title=\"action sheet\" />\n        <Button onPress={handleNotification} title=\"notification\" />\n\n        <Text emphasis=\"medium\" title=\"Learning\" type=\"h3\" />\n        <Button onPress={onPress('playground')} title=\"playground\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n"],"names":["memo","dispatch","useRootDispatch","navigate","useNavigation","onPress","useCallback","to","color","useColor","handleLoading","toggleLoading","visible","onBackgroundPress","setTimeout","handleAlert","toggleAlert","title","description","confirmTitle","onConfirmPress","cancelTitle","onCancelPress","handleNotification","toggleNotification","type","handleActionSheet","toggleActionSheet","items","dropShadow","contentContainerStyle","paddingHorizontal","padding","style","backgroundColor","background","secondary","emphasis"],"sourceRoot":""}