{"version":3,"file":"static/js/354.f01d6daa.chunk.js","mappings":"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","sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/PasswordReset/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/Login.tsx","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"sourcesContent":["import { spacing } from '../../../features';\n\nexport const completeConfig = {\n  borderRadius: spacing(2),\n  padding: spacing(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import { v4 } from 'uuid';\nimport { Item, User } from '../models';\n\ntype GetDefaultUserTemplate = {\n  items: Item[];\n  user: User;\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    { ...dItem(u), title: 'Backlog', type: 'list' },\n    { ...dItem(u), title: 'Todo', type: 'list' },\n    { ...dItem(u), title: 'In Progress', type: 'list' },\n    { ...dItem(u), title: 'Done', type: 'list' },\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // User\n  const date = Date.now();\n  const u = v4();\n\n  // Inbox\n  const inboxItems: Item[] = [\n    { ...dItem(u), title: 'do dishes' },\n    { ...dItem(u), title: 'schedule meeting with Jim' },\n    { ...dItem(u), title: 'run 4 miles' },\n    { ...dItem(u), title: 'change oil' },\n    { ...dItem(u), title: 'what is the best mediation' },\n    { ...dItem(u), title: 'record Kelly birthday on Sep 22' },\n    { ...dItem(u), title: 'drink water' },\n    { ...dItem(u), title: 'intensity + focus = deep work' },\n    { ...dItem(u), title: 'put $20 in phone' },\n    { ...dItem(u), title: 'clear emails' },\n  ];\n\n  // Projects\n  const homeTodoItems: Item[] = [\n    { ...dItem(u), title: 'clean desk' },\n    { ...dItem(u), title: 'clean room' },\n    { ...dItem(u), title: 'walk dog' },\n    { ...dItem(u), title: 'brush teeth' },\n    { ...dItem(u), title: 'do laundry' },\n    { ...dItem(u), title: 'fix sink' },\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    { ...dItem(u), title: 'one one one' },\n    { ...dItem(u), title: 'q1 planning' },\n  ];\n  const bookItems: Item[] = [\n    { ...dItem(u), title: 'eat that frog' },\n    { ...dItem(u), title: 'deep work' },\n    { ...dItem(u), title: 'the one thing' },\n  ];\n  const giftItems: Item[] = [\n    { ...dItem(u), title: 'girlfriend' },\n    { ...dItem(u), title: 'sister' },\n    { ...dItem(u), title: 'parents' },\n  ];\n  const checkItems: Item[] = [\n    { ...dItem(u), title: 'after bathroom' },\n    { ...dItem(u), title: 'before car' },\n    { ...dItem(u), title: 'before sleep' },\n  ];\n  const codeItems: Item[] = [\n    { ...dItem(u), title: 'php' },\n    { ...dItem(u), title: 'javascript' },\n    { ...dItem(u), title: 'swift' },\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map((i) => i.id),\n    },\n  ];\n\n  // User\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    email: 'bob@smith.com',\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Keyboard } from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Button,\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n  View,\n} from '../../../components';\nimport { spacing, useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { addItemToItem, createItem, Item } from '../models';\nimport { completeConfig } from '../utils';\n\ntype AddItemProps = {\n  parentItemId: string;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  width,\n  parentItemId,\n  placeholder,\n  title,\n}: AddItemProps) {\n  const colors = useColors();\n  const textInputRef = useRef<TextInputRef>(null);\n  const text = useRef('');\n  const [showInput, setShowInput] = useState(false);\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n\n  const handleTextChange = useCallback((value: string) => {\n    text.current = value;\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    const value = text.current;\n    if (!value) {\n      Keyboard.dismiss();\n      return;\n    }\n    const itemId = v4();\n    const date = Date.now();\n    const item: Item = {\n      id: itemId,\n      userId,\n      active: true,\n      title: value,\n      createdAt: date,\n      updatedAt: date,\n      children: [],\n      tags: [],\n      description: '',\n      editable: true,\n      type: 'note',\n    };\n    dispatch(createItem(item));\n    dispatch(addItemToItem({ parentItemId, itemId }));\n  }, [dispatch, parentItemId, userId]);\n\n  const onAddItemPress = useCallback(() => setShowInput((p) => !p), []);\n  const onClose = useCallback(() => setShowInput(false), []);\n  const onBlur = useCallback(() => setShowInput(false), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n      clear: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: spacing(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: colors.background.primaryA,\n        justifyContent: 'center',\n      }}\n    >\n      {showInput ? (\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit={false}\n          editable\n          icons={icons}\n          keyboardType=\"default\"\n          onBlur={onBlur}\n          onChangeText={handleTextChange}\n          onRef={textInputRef}\n          onSubmitEditing={onSubmit}\n          placeholder={placeholder}\n          returnKeyType=\"done\"\n          submitClear\n          textContentType=\"none\"\n          value=\"\"\n        />\n      ) : (\n        <Button\n          center\n          color=\"accent\"\n          onPress={onAddItemPress}\n          title={title}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { View } from '../../../components';\nimport { useColors } from '../../../features';\nimport { completeConfig } from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  children: ReactNode;\n  flex?: boolean;\n  margin?: 'bottom' | 'right';\n  onLayout?: (event: LayoutChangeEvent) => void;\n  width?: number;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin,\n  width,\n  flex,\n}: CardProps) {\n  const colors = useColors();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: colors.background.primaryA,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}\n    >\n      {children}\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport { TextInput, TextInputIcon, View } from '../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { navItemDetails, updateItem } from '../models';\nimport { MainStackRoutes } from '../navigationTypes';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<StackNavigationProp<MainStackRoutes>>();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const form = useRef('');\n\n  const onSave = useCallback(() => {\n    dispatch(updateItem({ ...item, title: form.current }));\n    Keyboard.dismiss();\n  }, [dispatch, item]);\n\n  const handleChange = useCallback((title: string) => {\n    form.current = title;\n  }, []);\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onSave,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'dots-horizontal', onPress: onDetail },\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n    >\n      <TextInput\n        autoCapitalize=\"sentences\"\n        autoComplete=\"off\"\n        autoCorrect\n        blurOnSubmit\n        editable={item.editable}\n        icons={icons}\n        keyboardType=\"default\"\n        onChangeText={handleChange}\n        onSubmitEditing={onSave}\n        placeholder=\"List title...\"\n        returnKeyType=\"done\"\n        textContentType=\"none\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport {\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n  TouchableWithoutFeedback,\n} from '../../../components';\nimport { useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport { ImplementTabNavigation } from '../navigationTypes';\nimport { completeConfig } from '../utils';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<TextInputRef>(null);\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<ImplementTabNavigation>();\n  const colors = useColors();\n  const form = useRef('');\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(() => {\n    dispatch(updateItem({ ...item, title: form.current }));\n    Keyboard.dismiss();\n  }, [dispatch, item]);\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({ projectItemId: itemId }));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({ parentItemId, itemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index - 1 }));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({ parentItemId, i: index, j: index + 1 }));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons: TextInputIcon[] = [\n    { name: 'close', onPress: onItemTitleClose, focus: true, reset: true },\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: 'accent',\n      focus: true,\n      required: true,\n    },\n    { name: 'chevron-up', onPress: onItemUp, hidden: true },\n    { name: 'chevron-down', onPress: onItemDown, hidden: true },\n    { name: 'dots-horizontal', onPress: onItemDetails },\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  const handleChange = useCallback((value: string) => {\n    form.current = value;\n  }, []);\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: colors.background.secondary,\n        flexDirection: 'row',\n      }}\n    >\n      <TextInput\n        autoCapitalize=\"sentences\"\n        autoComplete=\"off\"\n        autoCorrect\n        backgroundColor=\"secondary\"\n        blurOnSubmit\n        editable\n        icons={icons}\n        keyboardType=\"default\"\n        onChangeText={handleChange}\n        onRef={textInputRef}\n        onSubmitEditing={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        returnKeyType=\"done\"\n        textContentType=\"none\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, FlatListRef } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { ListItem } from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const listRef = useRef<FlatListRef>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item: string) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      listRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({ item, index }) => (\n      <ListItem\n        index={index}\n        itemId={item}\n        key={item}\n        parentItemId={parentItemId}\n      />\n    ),\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      onRef={listRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { View } from '../../../components';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { Card } from './Card';\nimport { ListHeader } from './ListHeader';\nimport { ListItems } from './ListItems';\n\ntype ListProps = {\n  footer?: ReactNode;\n  itemId: string;\n  listWidth?: number;\n  maxHeight: number;\n  orientation?: 'vertical' | 'horizontal';\n  parentItemId: string | null;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{ padding, maxHeight }}>\n      <Card\n        margin={margin}\n        width={listWidth}\n      >\n        <ListHeader\n          itemId={itemId}\n          parentItemId={parentItemId}\n        />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, View } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { List } from './List';\n\ntype BoardProps = {\n  listMaxHeight: number;\n  listWidth: number;\n  projectItemId: string;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item: string) => item, []);\n  const getItemLayout = useCallback(\n    (_: string[] | null | undefined, index: number) => ({\n      length: listSize,\n      offset: listSize * index,\n      index,\n    }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback<ListRenderItem<string>>(\n    ({ item }) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{ padding: completeConfig.padding }}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{ height: '100%' }}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Button, Modal, Text, View } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype DeleteModalProps = {\n  onCancel: () => void;\n  onDelete: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal\n      onBackgroundPress={onCancel}\n      showOverlay\n      widthPercent={0.5}\n    >\n      <View style={{ alignItems: 'center' }}>\n        <Text\n          style={{ paddingBottom: spacing(2) }}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          <Button\n            onPress={onCancel}\n            title=\"close\"\n          />\n          <Button\n            color=\"negative\"\n            onPress={onDelete}\n            title=\"delete\"\n          />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{ padding: spacing(2) }}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, { memo } from 'react';\nimport { RelativeDate, Text, View } from '../../../components';\nimport { spacing } from '../../../features';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  createdAt: number;\n  type: string;\n  updatedAt: number;\n  userId: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text\n          style={{ padding: spacing(2) }}\n          title={type}\n        />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text\n          style={{ padding: spacing(2) }}\n          title={userId}\n        />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate\n          date={createdAt}\n          style={{ padding: spacing(2) }}\n        />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate\n          date={updatedAt}\n          style={{ padding: spacing(2) }}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport { TextInput, TextInputIcon, View } from '../../../components';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype OnSubmit = (text: string) => void;\n\ntype ItemEditProps = {\n  description?: string;\n  onSubmit: (type: string) => OnSubmit;\n  placeholder: string;\n  title: string;\n  titleEditable: boolean;\n};\n\ntype Form = {\n  description: string;\n  title: string;\n};\n\n// TODO: need to clear on blur\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  titleEditable,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n  const form = useRef({ title, description });\n\n  const handleChangeText = useCallback(\n    (key: keyof Form) => (value: string) => {\n      form.current[key] = value;\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    (key: keyof Form) => () => {\n      onSubmit(key);\n    },\n    [onSubmit],\n  );\n\n  const icons = useCallback(\n    (type: string): TextInputIcon[] => [\n      { name: 'close', onPress: onClose, focus: true, reset: true },\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: 'accent',\n        focus: true,\n        required: true,\n      },\n    ],\n    [onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit\n          editable={titleEditable}\n          icons={icons('title')}\n          keyboardType=\"default\"\n          onChangeText={handleChangeText('title')}\n          onSubmitEditing={handleSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          returnKeyType=\"done\"\n          textContentType=\"none\"\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit={false}\n          editable\n          icons={icons('description')}\n          keyboardType=\"default\"\n          multiline\n          onChangeText={handleChangeText('description')}\n          onSubmitEditing={handleSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          returnKeyType=\"default\"\n          textContentType=\"none\"\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Icon, Text, TouchableOpacity, View } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype Props = {\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n  title: string;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = spacing(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: spacing(4),\n      }}\n    >\n      <TouchableOpacity onPress={onLeftPress}>\n        <Icon\n          invisible={!onLeftPress}\n          name=\"chevron-left\"\n          size={size}\n        />\n      </TouchableOpacity>\n      <Text\n        center\n        flex\n        title={title}\n        type=\"h4\"\n      />\n      <TouchableOpacity onPress={onRightPress}>\n        <Icon\n          invisible={!onRightPress}\n          name=\"close\"\n          size={size}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { Button, Screen, ScrollView, Text } from '../../../../components';\nimport {\n  RootNavigation,\n  spacing,\n  useAuth,\n  useColors,\n  useLayout,\n} from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card } from '../../components';\nimport { logout } from '../../models';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<RootNavigation>();\n  const { onLogout, response } = useAuth();\n  const profile = useRootSelector((s) => s.completeAuth);\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  useEffect(() => {\n    if (response.type === 'logout') dispatch(logout());\n  }, [dispatch, response.type]);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      title=\"Account\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          padding: spacing(4),\n          backgroundColor: colors.background.secondary,\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Profile\"\n            type=\"h5\"\n          />\n          <Text title={profile?.displayName || ''} />\n          <Text title={profile?.email || ''} />\n          <Text title={String(profile?.emailVerified) || ''} />\n          <Text title={profile?.uid || ''} />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Reminders\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Payment\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Feedback\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Button\n          onPress={onLogout}\n          title=\"logout\"\n        />\n        {response.error ? (\n          <Text\n            color=\"negative\"\n            title={response.error}\n          />\n        ) : null}\n        <Button\n          onPress={onNavToAdmin}\n          title=\"go to admin\"\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useRef, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { Button, KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Card, List } from '../../components';\nimport { getInbox } from '../../models';\n\nconst initialState = { container: 0, button: 0 };\n\nexport const Capture = memo(function Capture() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = spacing(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const { height } = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const { container, button } = containerRefs.current;\n      if (container > 0 && button > 0 && !containerHeight) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n      }\n    },\n    [containerHeight],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title=\"Plan\"\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout('container')}\n      >\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"accent\"\n                disabled={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Keyboard } from 'react-native';\nimport { Button, Modal, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card, DeleteModal, ItemContext, ItemEdit } from '../../components';\nimport { removeItem, removeItemFromItem, updateItem } from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  const { itemId, parentItemId } = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({ parentItemId, itemId }));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({ ...item, [type]: text }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return item ? (\n    <>\n      <Modal\n        backgroundColor={colors.background.secondary}\n        onBackgroundPress={goBack}\n      >\n        <View>\n          <ItemEdit\n            description={item.description}\n            onSubmit={onItemSubmit}\n            placeholder=\"Item\"\n            title={item.title}\n            titleEditable={item.editable}\n          />\n          <Card margin=\"bottom\">\n            <Text title=\"Reminders\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Tags\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Comments\" />\n          </Card>\n          <ItemContext\n            createdAt={item.createdAt}\n            type={item.type}\n            updatedAt={item.updatedAt}\n            userId={item.userId}\n          />\n          {item.editable ? (\n            <View\n              style={{\n                flexDirection: 'row',\n                flex: 1,\n                justifyContent: 'space-between',\n              }}\n            >\n              <Card flex>\n                <Button\n                  center\n                  onPress={goBack}\n                  title=\"close\"\n                />\n              </Card>\n              <View style={{ padding: spacing(2) }} />\n              <Card flex>\n                <Button\n                  center\n                  color=\"negative\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            </View>\n          ) : (\n            <Card flex>\n              <Button\n                center\n                onPress={goBack}\n                title=\"close\"\n              />\n            </Card>\n          )}\n        </View>\n      </Modal>\n      {deleteModal ? (\n        <DeleteModal\n          onCancel={onDeleteClose}\n          onDelete={onItemDelete}\n        />\n      ) : null}\n    </>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Modal, TextInput, TextInputRef } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { eye: false, completeForm: false, loading: false };\n\nexport const LogIn = memo(function LogIn() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('password-reset'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.forEach((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const completeForm = email.length > 0 && password.length > 0;\n      setState((p) => ({ ...p, completeForm }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Log in\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        keyboardType=\"visible-password\"\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: spacing(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\nimport { LandingStackRoutes } from '../../navigationTypes';\n\nconst initialRef = { email: '' };\nconst initialState = { complete: false, loading: false };\nexport const PasswordReset = memo(function PasswordReset() {\n  const colors = useColors();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const focus = useIsFocused();\n  const emailRef = useRef<TextInputRef>(null);\n\n  const onSubmit = useCallback(() => {\n    if (!state.complete) return;\n    setState((p) => ({ ...p, loading: true }));\n    goBack();\n  }, [goBack, state.complete]);\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const complete = val.length > 0;\n      setState((p) => ({ ...p, complete }));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Password reset\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: spacing(4) }}\n        title=\"Please enter the email address associated with your account.\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: spacing(4) }}\n        title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Email address\"\n        returnKeyType=\"send\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.complete}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset password\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\nimport { Board } from '../../components';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const { projectItemId } = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const { tabBarEdges } = useLayout();\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = spacing(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = spacing(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onLeftPress={navBack}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title={projectItemTitle}\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { List } from '../../components';\nimport { getProjects } from '../../models';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = spacing(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title=\"Implement\"\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { scaleLinear, scaleTime } from 'd3-scale';\nimport { curveBasis, line } from 'd3-shape';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Svg, { Defs, LinearGradient, Path, Stop } from 'react-native-svg';\nimport { View } from '../../../../components';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  height: number;\n  width: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({ data, width, height }: GraphProps) => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d: string = line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(curveBasis)(data) as string;\n  return (\n    <View style={{ width, height }}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient\n            id=\"gradient\"\n            x1=\"50%\"\n            x2=\"50%\"\n            y1=\"0%\"\n            y2=\"100%\"\n          >\n            <Stop\n              offset=\"0%\"\n              stopColor=\"#cee3f9\"\n            />\n            <Stop\n              offset=\"80%\"\n              stopColor=\"#ddedfa\"\n            />\n            <Stop\n              offset=\"100%\"\n              stopColor=\"#feffff\"\n            />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path\n          d={d}\n          fill=\"transparent\"\n          stroke=\"#3977e3\"\n          strokeWidth={strokeWidth}\n        />\n      </Svg>\n    </View>\n  );\n};\n","import React, { memo } from 'react';\nimport { Dimensions } from 'react-native';\nimport {\n  Calendar,\n  Screen,\n  ScrollView,\n  Text,\n  View,\n} from '../../../../components';\nimport { spacing, useColors, useLayout } from '../../../../features';\nimport { Card } from '../../components';\nimport { completeConfig } from '../../utils';\nimport { Graph } from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = { name: string };\n\nconst Title = ({ name }: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{ paddingBottom: completeConfig.padding }}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  { date: new Date(2018, 9, 1).getTime(), value: 0 },\n  { date: new Date(2018, 9, 16).getTime(), value: 0 },\n  { date: new Date(2018, 9, 17).getTime(), value: 200 },\n  { date: new Date(2018, 10, 1).getTime(), value: 200 },\n  { date: new Date(2018, 10, 2).getTime(), value: 300 },\n  { date: new Date(2018, 10, 5).getTime(), value: 300 },\n];\n\nexport const Reflect = memo(function Reflect() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      title=\"Reflect\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          padding: spacing(4),\n          backgroundColor: colors.background.secondary,\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = {\n  eye: false,\n  completeForm: false,\n  passwordError: false,\n  loading: false,\n};\n\nexport const SignUp = memo(function SignUp() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    setState((p) => ({ ...p, loading: true }));\n    const { user, items } = getDefaultUserTemplate();\n    items.forEach((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n    setState((p) => ({ ...p, loading: false }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const passwordError = password.length < 10 && key === 'password';\n      const completeForm = email.length > 0 && password.length >= 10;\n      setState((p) => ({ ...p, completeForm, passwordError }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Log in\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        error={state.passwordError}\n        icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n        keyboardType=\"visible-password\"\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: spacing(2) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Text\n        color=\"negative\"\n        invisible={!state.passwordError}\n        title=\"Password is too short.\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: spacing(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign Up\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { FirebaseAuthTypes } from '@react-native-firebase/auth';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\nimport {\n  Button,\n  Icon,\n  IconName,\n  Loader,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n  TouchableOpacity,\n} from '../../../../components';\nimport { spacing, useAuth, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\n\ntype Props = {\n  onBackgroundPress: () => void;\n  onSuccess: (user: FirebaseAuthTypes.User | null) => void;\n  showAnonymous?: boolean;\n  showApple?: boolean;\n  showEmail?: boolean;\n  showFacebook?: boolean;\n  showGoogle?: boolean;\n  showPhone?: boolean;\n};\n\n// TODO: relocate to somewhere\ninterface SignInButtonProps {\n  icon: IconName;\n  margin?: boolean;\n  onPress: () => void;\n  title: string;\n}\n\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n  margin,\n}: SignInButtonProps) {\n  const colors = useColors();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: colors.background.secondary,\n        borderWidth: 1,\n        padding: spacing(2),\n        marginBottom: spacing(margin ? 4 : 0),\n        borderRadius: spacing(2),\n      }}\n    >\n      <Icon name={icon} />\n      <Text\n        style={{ paddingLeft: spacing(2) }}\n        title={title}\n        type=\"button\"\n      />\n    </TouchableOpacity>\n  );\n});\n\ntype Screen =\n  | 'loading'\n  | 'landing'\n  | 'signUp'\n  | 'logIn'\n  | 'forgotPassword'\n  | 'phone'\n  | 'phoneCode'\n  | 'anonymous';\n\ntype Ref = {\n  email: string;\n  password: string;\n  phone: string;\n  phoneCode: string;\n};\n\nconst initialRef: Ref = {\n  email: '',\n  password: '',\n  phone: '',\n  phoneCode: '',\n};\n\ntype State = {\n  completeForm: boolean;\n  error: string | null;\n  eye: boolean;\n  passwordError: boolean;\n  screen: Screen;\n};\n\nconst initialState: State = {\n  eye: false,\n  error: null,\n  completeForm: false,\n  passwordError: false,\n  screen: 'landing',\n};\n\nexport const Login = memo(function Login({\n  onBackgroundPress,\n  showFacebook,\n  showGoogle,\n  showApple,\n  showPhone,\n  showEmail,\n  showAnonymous,\n  onSuccess,\n}: Props) {\n  const {\n    response,\n    onApple,\n    onGoogle,\n    onFacebook,\n    onPhoneConfirm,\n    onPhone,\n    onEmail,\n    onPasswordReset,\n    onAnonymous,\n  } = useAuth();\n  const { type, error, user } = response;\n  const loading = type === 'loading';\n  const successful = useRef(false);\n  const form = useRef<Ref>(initialRef);\n  const [state, setState] = useState<State>(initialState);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onFormChange = useCallback(\n    (key: keyof Ref) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n    },\n    [],\n  );\n\n  const handleConfirm = useCallback(\n    () => onPhoneConfirm(form.current.phoneCode),\n    [onPhoneConfirm],\n  );\n\n  const handlePhone = useCallback(() => onPhone(form.current.phone), [onPhone]);\n  const handleReset = useCallback(\n    () => onPasswordReset(form.current.email),\n    [onPasswordReset],\n  );\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password')\n        onEmail(form.current.email, form.current.password);\n    },\n    [onEmail],\n  );\n\n  const onScreenChange = useCallback(\n    (screen: Screen) => () => setState((p) => ({ ...p, screen })),\n    [],\n  );\n\n  useEffect(() => {\n    if (user && !successful.current) {\n      onSuccess(user);\n      successful.current = true;\n    }\n  }, [onSuccess, user]);\n\n  return (\n    <Modal\n      onBackgroundPress={onBackgroundPress}\n      showOverlay\n    >\n      <>\n        {error ? (\n          <Text\n            center\n            color=\"negative\"\n            title={error}\n          />\n        ) : null}\n        {state.screen === 'loading' || type === 'initalizing' ? (\n          <Loader />\n        ) : state.screen === 'phoneCode' ? (\n          <>\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"off\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phoneCode')}\n              onSubmitEditing={handleConfirm}\n              placeholder=\"phone confirmation code\"\n              returnKeyType=\"done\"\n              textContentType=\"none\"\n              value=\"\"\n            />\n            <Button\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleConfirm}\n              title=\"verify phone confirmation code\"\n            />\n            <Button\n              onPress={onScreenChange('landing')}\n              title=\"go back\"\n            />\n          </>\n        ) : state.screen === 'phone' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Phone Confirmation\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"off\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phone')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('phone')}\n              placeholder=\"Phone number\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"none\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handlePhone}\n              title=\"send confirmation code\"\n            />\n          </>\n        ) : state.screen === 'forgotPassword' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('logIn')}\n              title=\"Reset password\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: spacing(4) }}\n              title=\"Please enter the email address associated with your account.\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: spacing(4) }}\n              title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleReset}\n              title=\"Reset password\"\n            />\n          </>\n        ) : state.screen === 'signUp' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Sign up\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"password\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              keyboardType=\"default\"\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: spacing(4) }}\n              center\n              color=\"accent\"\n              disabled={loading}\n              lowercase\n              onPress={onScreenChange('logIn')}\n              title=\"Already have an account?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              disabled={loading}\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Sign up\"\n            />\n          </>\n        ) : state.screen === 'logIn' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('signUp')}\n              title=\"Log in\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"password\"\n              autoCorrect={false}\n              backgroundColor=\"primaryA\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ name: eyeIcon, onPress: onEye, focus: true }]}\n              keyboardType=\"visible-password\"\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: spacing(4) }}\n              center\n              color=\"accent\"\n              lowercase\n              onPress={onScreenChange('forgotPassword')}\n              title=\"Forgot password?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Log in\"\n            />\n          </>\n        ) : (\n          <>\n            <ModalHeader\n              onRightPress={onBackgroundPress}\n              title=\"Get Started\"\n            />\n            {Platform.OS === 'ios' || showApple ? (\n              <SignInButton\n                icon=\"apple\"\n                margin\n                onPress={onApple}\n                title=\"Continue with Apple\"\n              />\n            ) : null}\n            {showGoogle ? (\n              <SignInButton\n                icon=\"google\"\n                margin\n                onPress={onGoogle}\n                title=\"Continue with Google\"\n              />\n            ) : null}\n            {showFacebook ? (\n              <SignInButton\n                icon=\"facebook\"\n                margin\n                onPress={onFacebook}\n                title=\"Continue with Facebook\"\n              />\n            ) : null}\n            {showEmail ? (\n              <SignInButton\n                icon=\"email\"\n                margin\n                onPress={onScreenChange('signUp')}\n                title=\"Continue with Email\"\n              />\n            ) : null}\n            {showPhone ? (\n              <SignInButton\n                icon=\"phone\"\n                margin\n                onPress={onScreenChange('phone')}\n                title=\"Continue with Phone\"\n              />\n            ) : null}\n            {showAnonymous ? (\n              <SignInButton\n                icon=\"account\"\n                onPress={onAnonymous}\n                title=\"Continue Anonymously\"\n              />\n            ) : null}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport {\n  Button,\n  Carousel,\n  CarouselSlide,\n  Screen,\n  View,\n} from '../../../../components';\nimport { FirebaseAuthTypes } from '../../../../conversions';\nimport { spacing } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { createItem, loadUser, login } from '../../models';\nimport { completeConfig, getDefaultUserTemplate } from '../../utils';\nimport { Login } from './Login';\n\nconst slides: CarouselSlide[] = [\n  {\n    id: '1',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Welcome to Accomplish',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: spacing(10) },\n        paragraphs: [\n          [{ title: 'Start investing commission-free' }],\n          [\n            { title: 'Other fees may apply. View our' },\n            { title: 'fee schedule', onPress: () => undefined },\n            { title: 'to learn more. All investments have risks.' },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Enjoy commission-free stock trading',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: spacing(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{ title: 'View fee disclosures', onPress: () => undefined }],\n        ],\n      },\n    ],\n  },\n  {\n    id: '3',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'No account minimum',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: spacing(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Everything at your fingertips',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: spacing(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '5',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Account protection',\n        titleType: 'h4',\n        titleStyle: { paddingBottom: spacing(10) },\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            { title: 'www.sipc.org', onPress: () => undefined },\n            { title: '.' },\n          ],\n        ],\n      },\n    ],\n  },\n];\n\nexport const Welcome = memo(function Welcome() {\n  const dispatch = useRootDispatch();\n  const [showLogin, setShowLogin] = useState(false);\n  const onToggleLogin = useCallback(() => setShowLogin((p) => !p), []);\n\n  const onLoginSuccess = useCallback(\n    (auth: FirebaseAuthTypes.User | null) => {\n      if (!auth) throw new Error('no login');\n      dispatch(login(auth));\n      const { user, items } = getDefaultUserTemplate();\n      items.forEach((item) => dispatch(createItem(item)));\n      dispatch(loadUser({ ...user, email: auth.email || 'anonymous' }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Screen>\n        <View flex>\n          <Carousel\n            duration={6000}\n            slides={slides}\n          />\n          <View style={{ padding: completeConfig.padding }}>\n            <Button\n              buttonStyle={{ marginBottom: spacing(2) }}\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onToggleLogin}\n              title=\"Get Started\"\n            />\n          </View>\n        </View>\n      </Screen>\n      {showLogin ? (\n        <Login\n          onBackgroundPress={onToggleLogin}\n          onSuccess={onLoginSuccess}\n          showAnonymous\n          showEmail\n          showFacebook\n          showGoogle\n          showPhone\n        />\n      ) : null}\n    </>\n  );\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React from 'react';\nimport { TabIcons, useNavScreenOptions } from '../../features';\nimport {\n  HomeStackRoutes,\n  ImplementStackRoutes,\n  LandingStackRoutes,\n  MainStackRoutes,\n} from './navigationTypes';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  PasswordReset,\n  Project,\n  Projects,\n  Reflect,\n  SignUp,\n  Welcome,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = { headerShown: false };\n\nconst tabIcons: TabIcons = {\n  plan: { focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline' },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: { focused: 'finance', unFocused: 'finance' },\n  account: { focused: 'account', unFocused: 'account' },\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackRoutes>();\nconst Implement = () => {\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen\n        component={Projects}\n        name=\"projects\"\n      />\n      <ImplementStack.Screen\n        component={Project}\n        name=\"project\"\n      />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst TabStack = createBottomTabNavigator<HomeStackRoutes>();\nconst Home = () => {\n  const { tabScreenOptions, tabScreenListeners } = useNavScreenOptions();\n  return (\n    <TabStack.Navigator\n      screenListeners={tabScreenListeners}\n      screenOptions={tabScreenOptions({ tabIcons })}\n    >\n      <TabStack.Screen\n        component={Capture}\n        name=\"plan\"\n      />\n      <TabStack.Screen\n        component={Implement}\n        name=\"implement\"\n      />\n      <TabStack.Screen\n        component={Reflect}\n        name=\"reflect\"\n      />\n      <TabStack.Screen\n        component={Account}\n        name=\"account\"\n      />\n    </TabStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackRoutes>();\nexport const Landing = () => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <LandingStack.Navigator screenOptions={modalScreenOptions}>\n      <LandingStack.Screen\n        component={Welcome}\n        name=\"welcome\"\n      />\n      <LandingStack.Screen\n        component={SignUp}\n        name=\"sign-up\"\n      />\n      <LandingStack.Screen\n        component={LogIn}\n        name=\"log-in\"\n      />\n      <LandingStack.Screen\n        component={PasswordReset}\n        name=\"password-reset\"\n      />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackRoutes>();\nexport const Main = () => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <MainStack.Navigator screenOptions={modalScreenOptions}>\n      <MainStack.Screen\n        component={Home}\n        name=\"home\"\n      />\n      <MainStack.Screen\n        component={ItemDetail}\n        name=\"item-detail\"\n      />\n    </MainStack.Navigator>\n  );\n};\n","import React, { memo } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { Landing, Main } from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"names":["completeConfig","borderRadius","spacing","padding","alert","width","height","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","name","items","AddItem","memo","parentItemId","placeholder","colors","useColors","textInputRef","useRef","text","useState","showInput","setShowInput","dispatch","useRootDispatch","useRootSelector","s","completeUser","Error","handleTextChange","useCallback","value","current","onSubmit","itemId","item","createItem","addItemToItem","Keyboard","onAddItemPress","p","onClose","onBlur","icons","onPress","focus","reset","color","required","clear","useEffect","style","backgroundColor","background","primaryA","justifyContent","autoCapitalize","autoComplete","autoCorrect","blurOnSubmit","keyboardType","onChangeText","onRef","onSubmitEditing","returnKeyType","submitClear","textContentType","center","Card","onLayout","margin","flex","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeItem","form","onSave","updateItem","handleChange","onDetail","navItemDetails","flexDirection","alignItems","ListItem","index","parentChildrenCount","length","onItemTitleClose","onItemTitleSubmit","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","swapItemOrderInItem","j","hidden","key","onLongPress","secondary","pointerEvents","ListItems","list","listRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","titleEditable","handleChangeText","handleSubmit","multiline","ModalHeader","onLeftPress","size","onRightPress","invisible","Account","tabBarEdges","useLayout","useAuth","onLogout","response","profile","completeAuth","onNavToAdmin","logout","edges","displayName","String","emailVerified","uid","error","initialState","container","button","Capture","containerRefs","keyboardHeight","useKeyboardHeight","containerHeight","setContainerHeight","keyboardPadding","getInbox","noItemChildren","onOrganize","event","nativeEvent","layout","showSearchBar","rightIcon","disabled","ItemDetail","goBack","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","onDeletePress","onDeleteClose","initialRef","password","eye","completeForm","loading","LogIn","useIsFocused","state","setState","navWelcome","onSecondary","emailRef","passwordRef","eyeIcon","onEye","forEach","loadUser","onFormChange","val","secureTextEntry","buttonStyle","lowercase","complete","PasswordReset","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","navBack","Projects","dimensions","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","line","x","y","curve","curveBasis","StyleSheet","Defs","LinearGradient","x1","x2","y1","y2","Stop","stopColor","Path","fill","stroke","Title","getTime","Reflect","Dimensions","passwordError","SignUp","SignInButton","icon","borderColor","borderWidth","paddingLeft","phone","phoneCode","screen","Login","showFacebook","showGoogle","showApple","showPhone","showEmail","showAnonymous","onSuccess","onApple","onGoogle","onFacebook","onPhoneConfirm","onPhone","onEmail","onPasswordReset","onAnonymous","successful","handleConfirm","handlePhone","handleReset","onScreenChange","Platform","slides","sections","titleType","titleStyle","paragraphs","Welcome","showLogin","setShowLogin","onToggleLogin","onLoginSuccess","auth","login","duration","noHeader","headerShown","tabIcons","plan","focused","unFocused","implement","reflect","account","ImplementStack","createStackNavigator","Implement","Navigator","screenOptions","Screen","component","TabStack","createBottomTabNavigator","Home","useNavScreenOptions","tabScreenOptions","tabScreenListeners","screenListeners","LandingStack","Landing","modalScreenOptions","MainStack","Main","App"],"sourceRoot":""}