{"version":3,"file":"static/js/623.f7b1ea58.chunk.js","mappings":"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","sources":["apps/Portfolio/ForgotPassword/index.tsx","apps/Portfolio/Home/index.tsx","apps/Portfolio/Landing/index.web.tsx","apps/Portfolio/Login/index.tsx","apps/Portfolio/NotFound/index.tsx","apps/Portfolio/Settings/index.tsx","apps/Portfolio/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Input, Screen, ScrollView } from '../../../components';\nimport { padding, useColors } from '../../../features';\n\nconst styles = StyleSheet.create({\n  row: { flexDirection: 'row', justifyContent: 'space-around' },\n});\n\nexport const ForgotPassword = memo(function PortfolioForgotPassword() {\n  const [email, setEmail] = useState('');\n  const { goBack } = useNavigation();\n  const handleEmail = useCallback((val: string) => setEmail(val), []);\n  const navLogin = useCallback(() => goBack(), [goBack]);\n  const colors = useColors();\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={navLogin}\n      title=\"Forgot Password\"\n    >\n      <ScrollView\n        style={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Input\n          onChangeText={handleEmail}\n          placeholder=\"example@gmail.com\"\n          title=\"email\"\n          value={email}\n        />\n        <View style={styles.row}>\n          <Button\n            onPress={navLogin}\n            title=\"Send email\"\n          />\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { Button, Screen, ScrollView } from '../../../components';\nimport { padding, useAdminNavBack, useColors } from '../../../features';\nimport { PortfolioNavigation, PortfolioRoutes } from '../types';\n\nexport const Home = memo(function PortfolioHome() {\n  const { navigate } = useNavigation<PortfolioNavigation>();\n  const navTo = useCallback(\n    (to: keyof PortfolioRoutes) => () => navigate(to),\n    [navigate],\n  );\n  const { onLeftPress } = useAdminNavBack();\n  const colors = useColors();\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={onLeftPress}\n      title=\"Home\"\n    >\n      <ScrollView\n        style={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Button\n          center\n          onPress={navTo('login')}\n          title=\"logout\"\n        />\n        <Button\n          center\n          onPress={navTo('settings')}\n          title=\"settings\"\n        />\n        <Button\n          center\n          onPress={navTo('notFound')}\n          title=\"not found\"\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { Image, View } from 'react-native';\nimport { Icon, Sentence, Text, TouchableOpacity } from '../../../components';\nimport { SentenceType } from '../../../components/Sentence/types';\nimport { padding, useColors } from '../../../features';\n\nconst missingCallback = () => undefined;\n\nconst image = require('../../../assets/line-chart.png');\n\ninterface SignInButtonProps {\n  icon: string;\n  onPress: () => void;\n  title: string;\n}\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n}: SignInButtonProps) {\n  const colors = useColors();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: colors.border.primaryA,\n        borderWidth: 2,\n        padding: padding(2),\n        marginBottom: padding(2),\n        borderRadius: padding(10),\n      }}\n    >\n      <Icon\n        name={icon}\n        style={{ width: '30px', height: '30px' }}\n      />\n      <Text\n        style={{ paddingLeft: padding(2) }}\n        title={title}\n        type=\"h4\"\n      />\n    </TouchableOpacity>\n  );\n});\n\ninterface NavButtonProps {\n  inverted?: boolean;\n  onPress: () => void;\n  title: string;\n}\nconst NavButton = memo(function NavButton({\n  onPress,\n  title,\n  inverted,\n}: NavButtonProps) {\n  const colors = useColors();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        justifyContent: 'center',\n        borderRadius: padding(10),\n        paddingVertical: padding(2),\n        paddingHorizontal: padding(2),\n        backgroundColor: inverted\n          ? colors.background.primaryB\n          : colors.background.primaryA,\n      }}\n    >\n      <Text\n        bold\n        inverse={inverted}\n        title={title}\n        type=\"h5\"\n      />\n    </TouchableOpacity>\n  );\n});\n\ninterface HeaderProps {\n  height: number;\n}\n\nexport const Header = memo(function Header({ height }: HeaderProps) {\n  const colors = useColors();\n  return (\n    <View\n      style={{\n        backgroundColor: colors.background.primaryA,\n        position: 'absolute',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderColor: colors.border.primaryA,\n        padding: padding(4),\n        borderBottomWidth: 1,\n        zIndex: 2,\n        height,\n      }}\n    >\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <Image\n          source={image}\n          style={{ width: '30px', height: '30px' }}\n        />\n        <Text\n          bold\n          style={{ paddingHorizontal: padding(4) }}\n          title=\"Core\"\n          type=\"h3\"\n        />\n        <NavButton\n          onPress={missingCallback}\n          title=\"Features\"\n        />\n        <NavButton\n          onPress={missingCallback}\n          title=\"Premium\"\n        />\n      </View>\n      <View style={{ flexDirection: 'row', justifyContent: 'flex-end' }}>\n        <NavButton\n          onPress={missingCallback}\n          title=\"Sign In\"\n        />\n        <NavButton\n          inverted\n          onPress={missingCallback}\n          title=\"Sign Up\"\n        />\n      </View>\n    </View>\n  );\n});\n\ninterface AppIconProps {\n  onPress: () => void;\n  type: 'google-play' | 'apple';\n}\n\nconst AppIcon = memo(function AppIcon({ onPress, type }: AppIconProps) {\n  const colors = useColors();\n  const iconSize = '48px';\n  const text = type === 'apple' ? 'Download on the' : 'GET IT ON';\n  const store = type === 'apple' ? 'App Store' : 'Google Play';\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        width: '248px',\n        justifyContent: 'center',\n        borderRadius: padding(2),\n        flexDirection: 'row',\n        backgroundColor: colors.background.primaryB,\n        paddingVertical: padding(2),\n        paddingHorizontal: padding(4),\n      }}\n    >\n      <Icon\n        color=\"primaryA\"\n        name={type}\n        style={{ width: iconSize, height: iconSize, alignSelf: 'center' }}\n      />\n      <View style={{ paddingLeft: padding(2) }}>\n        <Text\n          inverse\n          title={text}\n          type=\"h5\"\n        />\n        <Text\n          inverse\n          title={store}\n          type=\"h3\"\n        />\n      </View>\n    </TouchableOpacity>\n  );\n});\n\ninterface SectionProps {\n  backgroundColor: string;\n  children: ReactNode | ReactNode[];\n  paddingTop?: number;\n}\n\nconst Section = memo(function Section({\n  paddingTop,\n  children,\n  backgroundColor,\n}: SectionProps) {\n  return (\n    <View\n      style={{\n        paddingTop,\n        height: '100vh',\n        backgroundColor,\n      }}\n    >\n      {children}\n    </View>\n  );\n});\n\nexport const Landing = memo(function PortfolioLanding() {\n  const height = padding(18);\n  const titleSentence: SentenceType[] = [\n    { title: 'Get started with ', type: 'h2' },\n    { title: 'Core', bold: true, type: 'h2' },\n  ];\n  const passwordSentence: SentenceType[] = [\n    { title: 'Or use your password to ' },\n    {\n      title: 'sign up ',\n      bold: true,\n      onPress: () => undefined,\n    },\n    { title: 'or ' },\n    {\n      title: 'sign in ',\n      bold: true,\n      onPress: () => undefined,\n    },\n  ];\n  const colors = useColors();\n\n  const onNavLinkPress = (url: string) => () => window.open(url, '_blank');\n\n  return (\n    <>\n      <Header height={height} />\n      <Section\n        backgroundColor={colors.background.secondary}\n        paddingTop={height}\n      >\n        <Sentence\n          sentences={titleSentence}\n          style={{ paddingVertical: padding(8), alignSelf: 'center' }}\n        />\n        <View style={{ width: '400px', alignSelf: 'center' }}>\n          <SignInButton\n            icon=\"apple\"\n            onPress={missingCallback}\n            title=\"Continue with Apple\"\n          />\n          <SignInButton\n            icon=\"google\"\n            onPress={missingCallback}\n            title=\"Continue with Google\"\n          />\n          <SignInButton\n            icon=\"facebook\"\n            onPress={missingCallback}\n            title=\"Continue with Facebook\"\n          />\n          <Sentence\n            sentences={passwordSentence}\n            style={{\n              alignSelf: 'center',\n              paddingVertical: padding(4),\n            }}\n          />\n        </View>\n        <View style={{ flex: 1 }} />\n        <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\n          <AppIcon\n            onPress={missingCallback}\n            type=\"apple\"\n          />\n          <AppIcon\n            onPress={missingCallback}\n            type=\"google-play\"\n          />\n        </View>\n      </Section>\n      <Section backgroundColor={colors.background.primaryA}>\n        <View style={{ flex: 1 }} />\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginBottom: padding(4),\n          }}\n        >\n          <NavButton\n            onPress={onNavLinkPress('https://www.linkedin.com/in/ethanneff')}\n            title=\"About us\"\n          />\n          <NavButton\n            onPress={onNavLinkPress('mailto:ethan.neff@eneff.com')}\n            title=\"Contact us\"\n          />\n          <NavButton\n            onPress={missingCallback}\n            title=\"Terms of Service\"\n          />\n          <NavButton\n            onPress={missingCallback}\n            title=\"Privacy Policy\"\n          />\n        </View>\n      </Section>\n    </>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Input, Screen, ScrollView } from '../../../components';\nimport { padding, useColors } from '../../../features';\nimport { PortfolioNavigation } from '../types';\n\nconst styles = StyleSheet.create({\n  row: { flexDirection: 'row', justifyContent: 'space-around' },\n});\n\nexport const Login = memo(function PortfolioLogin() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { goBack, navigate } = useNavigation<PortfolioNavigation>();\n  const handlePassword = useCallback((val: string) => setPassword(val), []);\n  const handleEmail = useCallback((val: string) => setEmail(val), []);\n\n  const navPortfolio = useCallback(() => navigate('home'), [navigate]);\n  const navPassword = useCallback(() => navigate('forgotPassword'), [navigate]);\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Login\"\n    >\n      <ScrollView\n        style={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Input\n          onChangeText={handleEmail}\n          placeholder=\"example@gmail.com\"\n          title=\"email\"\n          value={email}\n        />\n        <Input\n          onChangeText={handlePassword}\n          placeholder=\"•••••••\"\n          title=\"password\"\n          value={password}\n        />\n        <View style={styles.row}>\n          <Button\n            onPress={navPortfolio}\n            title=\"Login\"\n          />\n          <Button\n            onPress={navPassword}\n            title=\"Forgot\"\n          />\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Button, Screen, ScrollView } from '../../../components';\nimport { padding, useColors } from '../../../features';\n\nexport const NotFound = memo(function PortfolioNotFound() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n\n  return (\n    <Screen\n      dropShadow\n      title=\"404 :(\"\n    >\n      <ScrollView\n        style={{\n          padding: padding(4),\n          backgroundColor: colors.background.secondary,\n        }}\n      >\n        <Button\n          center\n          onPress={goBack}\n          title=\"go back\"\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { ListRenderItem, View } from 'react-native';\nimport { Button, FlatList, Screen } from '../../../components';\nimport {\n  changeTheme,\n  Theme,\n  themes,\n  useRootDispatch,\n  useRootSelector,\n} from '../../../redux';\n\nexport const Settings = memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentTheme);\n  const { goBack } = useNavigation();\n  const themePress = useCallback(\n    (theme: Theme) => () => dispatch(changeTheme(theme)),\n    [dispatch],\n  );\n  const renderItem = useCallback<ListRenderItem<Theme>>(\n    ({ item }) => (\n      <View>\n        <Button\n          color={currentTheme === item ? 'positive' : 'primaryA'}\n          key={item}\n          onPress={themePress(item)}\n          title={item}\n        />\n      </View>\n    ),\n    [currentTheme, themePress],\n  );\n  const renderHeader = useCallback(\n    () => (\n      <Button\n        disabled\n        title=\"Theme\"\n      />\n    ),\n    [],\n  );\n  const keyExtractor = useCallback((item: Theme) => item, []);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={goBack}\n      title=\"Settings\"\n    >\n      <FlatList\n        ListHeaderComponent={renderHeader}\n        data={themes}\n        keyExtractor={keyExtractor}\n        keyboardShouldPersistTaps=\"handled\"\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport { ForgotPassword } from './ForgotPassword';\nimport { Home } from './Home';\nimport { Landing } from './Landing';\nimport { Login } from './Login';\nimport { NotFound } from './NotFound';\nimport { Settings } from './Settings';\nimport { PortfolioRoutes } from './types';\n\nconst noHeader = { headerShown: false };\nconst Stack = createStackNavigator<PortfolioRoutes>();\n\nexport default memo(function Portfolio() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen\n        component={Landing}\n        name=\"landing\"\n      />\n      <Stack.Screen\n        component={Login}\n        name=\"login\"\n      />\n      <Stack.Screen\n        component={ForgotPassword}\n        name=\"forgotPassword\"\n      />\n      <Stack.Screen\n        component={Home}\n        name=\"home\"\n      />\n      <Stack.Screen\n        component={NotFound}\n        name=\"notFound\"\n      />\n      <Stack.Screen\n        component={Settings}\n        name=\"settings\"\n      />\n    </Stack.Navigator>\n  );\n});\n"],"names":["styles","StyleSheet","row","flexDirection","justifyContent","ForgotPassword","memo","useState","email","setEmail","goBack","useNavigation","handleEmail","useCallback","val","navLogin","colors","useColors","dropShadow","onLeftPress","title","style","padding","backgroundColor","background","secondary","onChangeText","placeholder","value","View","onPress","Home","navigate","navTo","to","useAdminNavBack","center","missingCallback","image","require","SignInButton","icon","alignItems","borderColor","border","primaryA","borderWidth","marginBottom","borderRadius","name","width","height","paddingLeft","type","NavButton","inverted","paddingVertical","paddingHorizontal","primaryB","bold","inverse","Header","position","borderBottomWidth","zIndex","Image","source","AppIcon","iconSize","text","store","color","alignSelf","Section","paddingTop","children","Landing","passwordSentence","onNavLinkPress","url","window","open","sentences","flex","Login","password","setPassword","handlePassword","navPortfolio","navPassword","NotFound","Settings","dispatch","useRootDispatch","currentTheme","useRootSelector","state","theme","themePress","changeTheme","renderItem","item","key","renderHeader","disabled","keyExtractor","ListHeaderComponent","data","themes","keyboardShouldPersistTaps","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component"],"sourceRoot":""}