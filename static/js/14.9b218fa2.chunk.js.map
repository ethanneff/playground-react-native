{"version":3,"sources":["apps/DeepWork/Account.tsx","apps/DeepWork/Day.tsx","apps/DeepWork/Home.tsx","apps/DeepWork/index.tsx"],"names":["Account","memo","goBack","useNavigation","color","useColor","onLeftPress","title","contentContainerStyle","padding","style","backgroundColor","background","secondary","center","paddingBottom","type","Day","dropShadow","Home","navigate","useAdminNavBack","onItemAdd","useCallback","navToAccount","onRightPress","rightIcon","paddingHorizontal","paddingVertical","emphasis","site","username","View","position","bottom","right","flexDirection","margin","justifyContent","onPress","marginRight","fab","name","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component"],"mappings":"sMAMaA,EAAUC,gBAAK,WAC1B,IAAQC,EAAWC,cAAXD,OACFE,EAAQC,cAEd,OACE,kBAAC,IAAD,CAAQC,YAAaJ,EAAQK,MAAM,WACjC,kBAAC,IAAD,CACEC,sBAAuB,CAAEC,QAASA,YAAQ,IAC1CC,MAAO,CAAEC,gBAAiBP,EAAMQ,WAAWC,YAE3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAM,EACNJ,MAAO,CAAEK,cAAeN,YAAQ,IAChCF,MAAM,WACNS,KAAK,OAEP,kBAAC,IAAD,YCjBGC,EAAMhB,gBAAK,WACtB,IAAQC,EAAWC,cAAXD,OACFE,EAAQC,cAEd,OACE,kBAAC,IAAD,CAAQa,YAAU,EAACZ,YAAaJ,EAAQK,MAAM,gBAC5C,kBAAC,IAAD,CACEC,sBAAuB,CACrBC,QAASA,YAAQ,GACjBE,gBAAiBP,EAAMQ,WAAWC,YAGpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAM,EACNJ,MAAO,CAAEK,cAAeN,YAAQ,IAChCF,MAAM,WACNS,KAAK,OAEP,kBAAC,IAAD,Y,OCcGG,EAAOlB,gBAAK,WACvB,IAAQmB,EAAajB,cAAbiB,SACFhB,EAAQC,cACNC,EAAgBe,cAAhBf,YACFgB,EAAYC,uBAAY,cAAiB,IACzCC,EAAeD,uBAAY,kBAAMH,EAAS,aAAY,CAACA,IAE7D,OACE,kBAAC,IAAD,CACEF,YAAU,EACVZ,YAAaA,EACbmB,aAAcD,EACdE,UAAU,UACVnB,MAAM,aAEN,kBAAC,IAAD,CACEC,sBAAuB,CACrBmB,kBAAmBlB,YAAQ,GAC3BmB,gBAAiBnB,YAAQ,IAE3BC,MAAO,CAAEC,gBAAiBP,EAAMQ,WAAWC,YAE3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAM,EACNe,SAAS,SACTtB,MAAM,gCACNS,KAAK,QAGT,kBAAC,IAAD,CAAUc,KAAK,SAASvB,MAAM,cAAcwB,SAAS,SACrD,kBAAC,IAAD,CAAUD,KAAK,SAASvB,MAAM,YAAYwB,SAAS,SACnD,kBAAC,IAAD,CAAUD,KAAK,SAASvB,MAAM,kBAAkBwB,SAAS,SACzD,kBAAC,IAAD,CAAUD,KAAK,SAASvB,MAAM,uBAAuBwB,SAAS,UAEhE,kBAACC,EAAA,EAAD,CACEtB,MAAO,CACLuB,SAAU,WACVC,OAAQ,EACRC,MAAO,EACPC,cAAe,MACfC,OAAQ5B,YAAQ,GAChB6B,eAAgB,WAGlB,kBAAC,IAAD,CACEC,QAASjB,EACTZ,MAAO,CAAE8B,YAAa/B,YAAQ,KAE9B,kBAAC,IAAD,CAAME,gBAAgB,YAAYP,MAAM,WAAWqC,KAAG,EAACC,KAAK,UAE9D,kBAAC,IAAD,CAAkBH,QAASjB,GACzB,kBAAC,IAAD,CAAMlB,MAAM,WAAWqC,KAAG,EAACC,KAAK,iBCpFpCC,EAAW,CAAEC,aAAa,GAC1BC,EAAQC,cAEC7C,0BAAK,WAClB,OACE,kBAAC4C,EAAME,UAAP,CAAiBC,cAAeL,GAC9B,kBAACE,EAAMI,OAAP,CAAcC,UAAW/B,EAAMuB,KAAK,SACpC,kBAACG,EAAMI,OAAP,CAAcC,UAAWjC,EAAKyB,KAAK,QACnC,kBAACG,EAAMI,OAAP,CAAcC,UAAWlD,EAAS0C,KAAK","file":"static/js/14.9b218fa2.chunk.js","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Calendar, Card, Screen, Text } from '../../components';\nimport { ScrollView } from '../../conversions';\nimport { padding, useColor } from '../../features';\n\nexport const Account = memo(function Account() {\n  const { goBack } = useNavigation();\n  const color = useColor();\n\n  return (\n    <Screen onLeftPress={goBack} title=\"Account\">\n      <ScrollView\n        contentContainerStyle={{ padding: padding(4) }}\n        style={{ backgroundColor: color.background.secondary }}\n      >\n        <Card>\n          <Text\n            center\n            style={{ paddingBottom: padding(4) }}\n            title=\"Progress\"\n            type=\"h5\"\n          />\n          <Calendar />\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo } from 'react';\nimport { Calendar, Card, Screen, Text } from '../../components';\nimport { ScrollView } from '../../conversions';\nimport { padding, useColor } from '../../features';\n\nexport const Day = memo(function Day() {\n  const { goBack } = useNavigation();\n  const color = useColor();\n\n  return (\n    <Screen dropShadow onLeftPress={goBack} title=\"Comfort Zone\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: padding(4),\n          backgroundColor: color.background.secondary,\n        }}\n      >\n        <Card>\n          <Text\n            center\n            style={{ paddingBottom: padding(4) }}\n            title=\"Progress\"\n            type=\"h3\"\n          />\n          <Calendar />\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport {\n  Activity,\n  Card,\n  Icon,\n  Screen,\n  Text,\n  TouchableOpacity,\n} from '../../components';\nimport { ScrollView } from '../../conversions';\nimport { padding, useAdminNavBack, useColor } from '../../features';\nimport { DeepWorkNavigation } from './types';\n\n/*\n# Purpose\n- create a habit of deep work\n\n# Vision\n- focus on the number of sessions of deep work\n- goals will be achieved over time based on the number of deep work\n\n# Methodology\n- block off calendar 4 weeks in advance\n- track the number of deep work hours per day (aim for 4) (dark green dots)\n- ?group deep work activities by goals (categories)\n- highlight major milestones in the deep work hour (yellow star)\n\n# Next steps\n- rewrite activity to pass data\n- add redux\n- add login\n- add account screen (profile, notifications, best practices) https://memory.ai/timely-blog/how-to-do-deep-work-effectively\n- add day screen (number of deep work, notes, reflection, milestones)\n- add backend\n- ship\n*/\n\nexport const Home = memo(function Home() {\n  const { navigate } = useNavigation<DeepWorkNavigation>();\n  const color = useColor();\n  const { onLeftPress } = useAdminNavBack();\n  const onItemAdd = useCallback(() => undefined, []);\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen\n      dropShadow\n      onLeftPress={onLeftPress}\n      onRightPress={navToAccount}\n      rightIcon=\"account\"\n      title=\"Deep Work\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          paddingHorizontal: padding(4),\n          paddingVertical: padding(2),\n        }}\n        style={{ backgroundColor: color.background.secondary }}\n      >\n        <Card>\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"Deep Work = Focus + Intensity\"\n            type=\"h5\"\n          />\n        </Card>\n        <Activity site=\"random\" title=\"Be stronger\" username=\"none\" />\n        <Activity site=\"random\" title=\"Ship apps\" username=\"none\" />\n        <Activity site=\"random\" title=\"Master leetcode\" username=\"none\" />\n        <Activity site=\"random\" title=\"Master system design\" username=\"none\" />\n      </ScrollView>\n      <View\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n          flexDirection: 'row',\n          margin: padding(4),\n          justifyContent: 'center',\n        }}\n      >\n        <TouchableOpacity\n          onPress={onItemAdd}\n          style={{ marginRight: padding(2) }}\n        >\n          <Icon backgroundColor=\"secondary\" color=\"primaryA\" fab name=\"plus\" />\n        </TouchableOpacity>\n        <TouchableOpacity onPress={onItemAdd}>\n          <Icon color=\"primaryA\" fab name=\"pencil\" />\n        </TouchableOpacity>\n      </View>\n    </Screen>\n  );\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport React, { memo } from 'react';\nimport { Account } from './Account';\nimport { Day } from './Day';\nimport { Home } from './Home';\nimport { DeepWorkRoutes } from './types';\n\nconst noHeader = { headerShown: false };\nconst Stack = createStackNavigator<DeepWorkRoutes>();\n\nexport default memo(function DeepWork() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen component={Home} name=\"home\" />\n      <Stack.Screen component={Day} name=\"day\" />\n      <Stack.Screen component={Account} name=\"account\" />\n    </Stack.Navigator>\n  );\n});\n"],"sourceRoot":""}