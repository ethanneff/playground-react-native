{"version":3,"file":"static/js/249.c52dc583.chunk.js","mappings":"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","sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/PasswordReset/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/Login.tsx","apps/Complete/screens/Welcome/slides.ts","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"sourcesContent":["import { spacing } from '../../../features';\n\nexport const completeConfig = {\n  alert: {\n    height: 0.6,\n    width: 0.8,\n  },\n  borderRadius: spacing(2),\n  padding: spacing(4),\n};\n","import { v4 } from 'uuid';\nimport { Item, User } from '../models';\n\ntype GetDefaultUserTemplate = {\n  items: Item[];\n  user: User;\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    active: true,\n    children: [],\n    createdAt: date,\n    description: '',\n    editable: true,\n    id: v4(),\n    tags: [],\n    title: '',\n    type: 'note',\n    updatedAt: date,\n    userId: u,\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    { ...dItem(u), title: 'Backlog', type: 'list' },\n    { ...dItem(u), title: 'Todo', type: 'list' },\n    { ...dItem(u), title: 'In Progress', type: 'list' },\n    { ...dItem(u), title: 'Done', type: 'list' },\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // User\n  const date = Date.now();\n  const u = v4();\n\n  // Inbox\n  const inboxItems: Item[] = [\n    { ...dItem(u), title: 'do dishes' },\n    { ...dItem(u), title: 'schedule meeting with Jim' },\n    { ...dItem(u), title: 'run 4 miles' },\n    { ...dItem(u), title: 'change oil' },\n    { ...dItem(u), title: 'what is the best mediation' },\n    { ...dItem(u), title: 'record Kelly birthday on Sep 22' },\n    { ...dItem(u), title: 'drink water' },\n    { ...dItem(u), title: 'intensity + focus = deep work' },\n    { ...dItem(u), title: 'put $20 in phone' },\n    { ...dItem(u), title: 'clear emails' },\n  ];\n\n  // Projects\n  const homeTodoItems: Item[] = [\n    { ...dItem(u), title: 'clean desk' },\n    { ...dItem(u), title: 'clean room' },\n    { ...dItem(u), title: 'walk dog' },\n    { ...dItem(u), title: 'brush teeth' },\n    { ...dItem(u), title: 'do laundry' },\n    { ...dItem(u), title: 'fix sink' },\n  ];\n  const homeItems: Item[] = dKanban(u).map((item, index) =>\n    index === 0 ? { ...item, children: homeTodoItems.map((i) => i.id) } : item,\n  );\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    { ...dItem(u), title: 'one one one' },\n    { ...dItem(u), title: 'q1 planning' },\n  ];\n  const bookItems: Item[] = [\n    { ...dItem(u), title: 'eat that frog' },\n    { ...dItem(u), title: 'deep work' },\n    { ...dItem(u), title: 'the one thing' },\n  ];\n  const giftItems: Item[] = [\n    { ...dItem(u), title: 'girlfriend' },\n    { ...dItem(u), title: 'sister' },\n    { ...dItem(u), title: 'parents' },\n  ];\n  const checkItems: Item[] = [\n    { ...dItem(u), title: 'after bathroom' },\n    { ...dItem(u), title: 'before car' },\n    { ...dItem(u), title: 'before sleep' },\n  ];\n  const codeItems: Item[] = [\n    { ...dItem(u), title: 'php' },\n    { ...dItem(u), title: 'javascript' },\n    { ...dItem(u), title: 'swift' },\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      children: homeItems.map((i) => i.id),\n      title: 'at home',\n      type: 'board',\n    },\n    {\n      ...dItem(u),\n      children: townItems.map((i) => i.id),\n      title: 'at town',\n      type: 'board',\n    },\n    {\n      ...dItem(u),\n      children: workItems.map((i) => i.id),\n      title: 'at work',\n      type: 'board',\n    },\n    {\n      ...dItem(u),\n      children: gymItems.map((i) => i.id),\n      title: 'at gym',\n      type: 'board',\n    },\n    {\n      ...dItem(u),\n      children: appItems.map((i) => i.id),\n      title: 'app release',\n      type: 'board',\n    },\n    {\n      ...dItem(u),\n      children: meetItems.map((i) => i.id),\n      title: 'meeting notes',\n      type: 'list',\n    },\n    {\n      ...dItem(u),\n      children: bookItems.map((i) => i.id),\n      title: 'book notes',\n      type: 'list',\n    },\n    {\n      ...dItem(u),\n      children: giftItems.map((i) => i.id),\n      title: 'gift ideas',\n      type: 'list',\n    },\n    {\n      ...dItem(u),\n      children: checkItems.map((i) => i.id),\n      title: 'checklists',\n      type: 'list',\n    },\n    {\n      ...dItem(u),\n      children: codeItems.map((i) => i.id),\n      title: 'coding',\n      type: 'list',\n    },\n  ];\n\n  // User\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n      title: 'Inbox',\n      type: 'list',\n    },\n    {\n      ...dItem(u),\n      children: projectItems.map((i) => i.id),\n      editable: false,\n      title: 'Projects',\n      type: 'list',\n    },\n  ];\n  const user: User = {\n    active: true,\n    createdAt: date,\n    email: 'bob@smith.com',\n    id: u,\n    items: userItems.map((i) => i.id),\n    name: 'Bob Smith',\n    updatedAt: date,\n  };\n\n  return {\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n    user,\n  };\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Keyboard } from 'react-native';\nimport { v4 } from 'uuid';\nimport {\n  Button,\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n  View,\n} from '../../../components';\nimport { spacing, useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { addItemToItem, createItem, Item } from '../models';\nimport { completeConfig } from '../utils';\n\ntype AddItemProps = {\n  parentItemId: string;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  width,\n  parentItemId,\n  placeholder,\n  title,\n}: AddItemProps) {\n  const colors = useColors();\n  const textInputRef = useRef<TextInputRef>(null);\n  const text = useRef('');\n  const [showInput, setShowInput] = useState(false);\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n\n  const handleTextChange = useCallback((value: string) => {\n    text.current = value;\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    const value = text.current;\n    if (!value) {\n      Keyboard.dismiss();\n      return;\n    }\n    const itemId = v4();\n    const date = Date.now();\n    const item: Item = {\n      active: true,\n      children: [],\n      createdAt: date,\n      description: '',\n      editable: true,\n      id: itemId,\n      tags: [],\n      title: value,\n      type: 'note',\n      updatedAt: date,\n      userId,\n    };\n    dispatch(createItem(item));\n    dispatch(addItemToItem({ itemId, parentItemId }));\n  }, [dispatch, parentItemId, userId]);\n\n  const onAddItemPress = useCallback(() => setShowInput((p) => !p), []);\n  const onClose = useCallback(() => setShowInput(false), []);\n  const onBlur = useCallback(() => setShowInput(false), []);\n\n  const icons: TextInputIcon[] = [\n    { focus: true, name: 'close', onPress: onClose, reset: true },\n    {\n      clear: true,\n      color: 'accent',\n      focus: true,\n      name: 'send',\n      onPress: onSubmit,\n      required: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        backgroundColor: colors.background.primaryA,\n        borderRadius: completeConfig.borderRadius,\n        height: spacing(12),\n        justifyContent: 'center',\n        width,\n      }}\n    >\n      {showInput ? (\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit={false}\n          editable\n          icons={icons}\n          keyboardType=\"default\"\n          onBlur={onBlur}\n          onChangeText={handleTextChange}\n          onRef={textInputRef}\n          onSubmitEditing={onSubmit}\n          placeholder={placeholder}\n          returnKeyType=\"done\"\n          submitClear\n          textContentType=\"none\"\n          value=\"\"\n        />\n      ) : (\n        <Button\n          center\n          color=\"accent\"\n          onPress={onAddItemPress}\n          title={title}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { View } from '../../../components';\nimport { useColors } from '../../../features';\nimport { completeConfig } from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  children: ReactNode;\n  flex?: boolean;\n  margin?: 'bottom' | 'right';\n  onLayout?: (event: LayoutChangeEvent) => void;\n  width?: number;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin,\n  width,\n  flex,\n}: CardProps) {\n  const colors = useColors();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        backgroundColor: colors.background.primaryA,\n        borderRadius: completeConfig.borderRadius,\n        flex: flex ? 1 : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        padding: completeConfig.padding / 2,\n        width,\n      }}\n    >\n      {children}\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport { TextInput, TextInputIcon, View } from '../../../components';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport { navItemDetails, updateItem } from '../models';\nimport { MainStackRoutes } from '../navigationTypes';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<StackNavigationProp<MainStackRoutes>>();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const form = useRef('');\n\n  const onSave = useCallback(() => {\n    dispatch(updateItem({ ...item, title: form.current }));\n    Keyboard.dismiss();\n  }, [dispatch, item]);\n\n  const handleChange = useCallback((title: string) => {\n    form.current = title;\n  }, []);\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({ itemId, parentItemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons: TextInputIcon[] = [\n    { focus: true, name: 'close', onPress: onClose, reset: true },\n    {\n      color: 'accent',\n      focus: true,\n      name: 'send',\n      onPress: onSave,\n      required: true,\n    },\n    { name: 'dots-horizontal', onPress: onDetail },\n  ];\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n      }}\n    >\n      <TextInput\n        autoCapitalize=\"sentences\"\n        autoComplete=\"off\"\n        autoCorrect\n        blurOnSubmit\n        editable={item.editable}\n        icons={icons}\n        keyboardType=\"default\"\n        onChangeText={handleChange}\n        onSubmitEditing={onSave}\n        placeholder=\"List title...\"\n        returnKeyType=\"done\"\n        textContentType=\"none\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport {\n  TextInput,\n  TextInputIcon,\n  TextInputRef,\n  TouchableWithoutFeedback,\n} from '../../../components';\nimport { useColors } from '../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../redux';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport { ImplementTabNavigation } from '../navigationTypes';\nimport { completeConfig } from '../utils';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<TextInputRef>(null);\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<ImplementTabNavigation>();\n  const colors = useColors();\n  const form = useRef('');\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(() => {\n    dispatch(updateItem({ ...item, title: form.current }));\n    Keyboard.dismiss();\n  }, [dispatch, item]);\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({ projectItemId: itemId }));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({ itemId, parentItemId }));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({ i: index, j: index - 1, parentItemId }));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({ i: index, j: index + 1, parentItemId }));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons: TextInputIcon[] = [\n    { focus: true, name: 'close', onPress: onItemTitleClose, reset: true },\n    {\n      color: 'accent',\n      focus: true,\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      required: true,\n    },\n    { hidden: true, name: 'chevron-up', onPress: onItemUp },\n    { hidden: true, name: 'chevron-down', onPress: onItemDown },\n    { name: 'dots-horizontal', onPress: onItemDetails },\n    {\n      hidden: !item.children.length,\n      name: 'chevron-right',\n      onPress: onItemNav,\n    },\n  ];\n\n  const handleChange = useCallback((value: string) => {\n    form.current = value;\n  }, []);\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        backgroundColor: colors.background.secondary,\n        borderRadius: completeConfig.borderRadius,\n        flex: 1,\n        flexDirection: 'row',\n        margin: completeConfig.padding / 2,\n      }}\n    >\n      <TextInput\n        autoCapitalize=\"sentences\"\n        autoComplete=\"off\"\n        autoCorrect\n        backgroundColor=\"secondary\"\n        blurOnSubmit\n        editable\n        icons={icons}\n        keyboardType=\"default\"\n        onChangeText={handleChange}\n        onRef={textInputRef}\n        onSubmitEditing={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        returnKeyType=\"done\"\n        textContentType=\"none\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, FlatListRef } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { ListItem } from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const listRef = useRef<FlatListRef>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item: string) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      listRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({ item, index }) => (\n      <ListItem\n        index={index}\n        itemId={item}\n        key={item}\n        parentItemId={parentItemId}\n      />\n    ),\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      onRef={listRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { View } from '../../../components';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { Card } from './Card';\nimport { ListHeader } from './ListHeader';\nimport { ListItems } from './ListItems';\n\ntype ListProps = {\n  footer?: ReactNode;\n  itemId: string;\n  listWidth?: number;\n  maxHeight: number;\n  orientation?: 'vertical' | 'horizontal';\n  parentItemId: string | null;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{ maxHeight, padding }}>\n      <Card\n        margin={margin}\n        width={listWidth}\n      >\n        <ListHeader\n          itemId={itemId}\n          parentItemId={parentItemId}\n        />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport { ListRenderItem } from 'react-native';\nimport { FlatList, View } from '../../../components';\nimport { useRootSelector } from '../../../redux';\nimport { completeConfig } from '../utils';\nimport { AddItem } from './AddItem';\nimport { List } from './List';\n\ntype BoardProps = {\n  listMaxHeight: number;\n  listWidth: number;\n  projectItemId: string;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item: string) => item, []);\n  const getItemLayout = useCallback(\n    (_: string[] | null | undefined, index: number) => ({\n      index,\n      length: listSize,\n      offset: listSize * index,\n    }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback<ListRenderItem<string>>(\n    ({ item }) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{ padding: completeConfig.padding }}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{ height: '100%' }}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Button, Modal, Text, View } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype DeleteModalProps = {\n  onCancel: () => void;\n  onDelete: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal\n      onBackgroundPress={onCancel}\n      showOverlay\n      widthPercent={0.5}\n    >\n      <View style={{ alignItems: 'center' }}>\n        <Text\n          style={{ paddingBottom: spacing(2) }}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          <Button\n            onPress={onCancel}\n            title=\"close\"\n          />\n          <Button\n            color=\"negative\"\n            onPress={onDelete}\n            title=\"delete\"\n          />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, { memo } from 'react';\nimport { Text } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{ padding: spacing(2) }}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, { memo } from 'react';\nimport { RelativeDate, Text, View } from '../../../components';\nimport { spacing } from '../../../features';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  createdAt: number;\n  type: string;\n  updatedAt: number;\n  userId: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text\n          style={{ padding: spacing(2) }}\n          title={type}\n        />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text\n          style={{ padding: spacing(2) }}\n          title={userId}\n        />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate\n          date={createdAt}\n          style={{ padding: spacing(2) }}\n        />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate\n          date={updatedAt}\n          style={{ padding: spacing(2) }}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo, useCallback, useRef } from 'react';\nimport { Keyboard } from 'react-native';\nimport { TextInput, TextInputIcon, View } from '../../../components';\nimport { Card } from './Card';\nimport { ItemDetailHeader } from './ItemDetailHeader';\n\ntype OnSubmit = (text: string) => void;\n\ntype ItemEditProps = {\n  description?: string;\n  onSubmit: (type: string) => OnSubmit;\n  placeholder: string;\n  title: string;\n  titleEditable: boolean;\n};\n\ntype Form = {\n  description: string;\n  title: string;\n};\n\n// TODO: need to clear on blur\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  titleEditable,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n  const form = useRef({ description, title });\n\n  const handleChangeText = useCallback(\n    (key: keyof Form) => (value: string) => {\n      form.current[key] = value;\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    (key: keyof Form) => () => {\n      onSubmit(key);\n    },\n    [onSubmit],\n  );\n\n  const icons = useCallback(\n    (type: string): TextInputIcon[] => [\n      { focus: true, name: 'close', onPress: onClose, reset: true },\n      {\n        color: 'accent',\n        focus: true,\n        name: 'send',\n        onPress: onSubmit(type),\n        required: true,\n      },\n    ],\n    [onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit\n          editable={titleEditable}\n          icons={icons('title')}\n          keyboardType=\"default\"\n          onChangeText={handleChangeText('title')}\n          onSubmitEditing={handleSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          returnKeyType=\"done\"\n          textContentType=\"none\"\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInput\n          autoCapitalize=\"sentences\"\n          autoComplete=\"off\"\n          autoCorrect\n          blurOnSubmit={false}\n          editable\n          icons={icons('description')}\n          keyboardType=\"default\"\n          multiline\n          onChangeText={handleChangeText('description')}\n          onSubmitEditing={handleSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          returnKeyType=\"default\"\n          textContentType=\"none\"\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, { memo } from 'react';\nimport { Icon, Text, TouchableOpacity, View } from '../../../components';\nimport { spacing } from '../../../features';\n\ntype Props = {\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n  title: string;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = spacing(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        marginBottom: spacing(4),\n      }}\n    >\n      <TouchableOpacity onPress={onLeftPress}>\n        <Icon\n          invisible={!onLeftPress}\n          name=\"chevron-left\"\n          size={size}\n        />\n      </TouchableOpacity>\n      <Text\n        center\n        flex\n        title={title}\n        type=\"h4\"\n      />\n      <TouchableOpacity onPress={onRightPress}>\n        <Icon\n          invisible={!onRightPress}\n          name=\"close\"\n          size={size}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { Button, Screen, ScrollView, Text } from '../../../../components';\nimport {\n  RootNavigation,\n  spacing,\n  useAuth,\n  useColors,\n  useLayout,\n} from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card } from '../../components';\nimport { logout } from '../../models';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const dispatch = useRootDispatch();\n  const { navigate } = useNavigation<RootNavigation>();\n  const { onLogout, response } = useAuth();\n  const profile = useRootSelector((s) => s.completeAuth);\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  useEffect(() => {\n    if (response.type === 'logout') dispatch(logout());\n  }, [dispatch, response.type]);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      title=\"Account\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          backgroundColor: colors.background.secondary,\n          padding: spacing(4),\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Profile\"\n            type=\"h5\"\n          />\n          <Text title={profile?.displayName ?? ''} />\n          <Text title={profile?.email ?? ''} />\n          <Text title={String(profile?.emailVerified ?? '')} />\n          <Text title={profile?.uid ?? ''} />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Reminders\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Payment\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Card margin=\"bottom\">\n          <Text\n            emphasis=\"low\"\n            style={{ paddingBottom: spacing(4) }}\n            title=\"Feedback\"\n            type=\"h5\"\n          />\n          <Text\n            center\n            emphasis=\"medium\"\n            title=\"...\"\n            type=\"h4\"\n          />\n        </Card>\n        <Button\n          onPress={onLogout}\n          title=\"logout\"\n        />\n        {response.error ? (\n          <Text\n            color=\"negative\"\n            title={response.error}\n          />\n        ) : null}\n        <Button\n          onPress={onNavToAdmin}\n          title=\"go to admin\"\n        />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useRef, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { Button, KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { Card, List } from '../../components';\nimport { getInbox } from '../../models';\n\nconst initialState = { button: 0, container: 0 };\n\nexport const Capture = memo(function Capture() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = spacing(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const { height } = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const { container, button } = containerRefs.current;\n      if (container > 0 && button > 0 && !containerHeight) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n      }\n    },\n    [containerHeight],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title=\"Plan\"\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout('container')}\n      >\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"accent\"\n                disabled={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { Keyboard } from 'react-native';\nimport { Button, Modal, Text, View } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch, useRootSelector } from '../../../../redux';\nimport { Card, DeleteModal, ItemContext, ItemEdit } from '../../components';\nimport { removeItem, removeItemFromItem, updateItem } from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const { itemId, parentItemId } = useRootSelector((s) => s.completeItem.nav);\n  if (!itemId || !parentItemId)\n    throw new Error('missing listId or itemId on item detail screen');\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({ itemId, parentItemId }));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({ ...item, [type]: text }));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return (\n    <>\n      <Modal\n        backgroundColor={colors.background.secondary}\n        onBackgroundPress={goBack}\n      >\n        <View>\n          <ItemEdit\n            description={item.description}\n            onSubmit={onItemSubmit}\n            placeholder=\"Item\"\n            title={item.title}\n            titleEditable={item.editable}\n          />\n          <Card margin=\"bottom\">\n            <Text title=\"Reminders\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Tags\" />\n          </Card>\n          <Card margin=\"bottom\">\n            <Text title=\"Comments\" />\n          </Card>\n          <ItemContext\n            createdAt={item.createdAt}\n            type={item.type}\n            updatedAt={item.updatedAt}\n            userId={item.userId}\n          />\n          {item.editable ? (\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Card flex>\n                <Button\n                  center\n                  onPress={goBack}\n                  title=\"close\"\n                />\n              </Card>\n              <View style={{ padding: spacing(2) }} />\n              <Card flex>\n                <Button\n                  center\n                  color=\"negative\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            </View>\n          ) : (\n            <Card flex>\n              <Button\n                center\n                onPress={goBack}\n                title=\"close\"\n              />\n            </Card>\n          )}\n        </View>\n      </Modal>\n      {deleteModal ? (\n        <DeleteModal\n          onCancel={onDeleteClose}\n          onDelete={onItemDelete}\n        />\n      ) : null}\n    </>\n  );\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Modal, TextInput, TextInputRef } from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = { completeForm: false, eye: false, loading: false };\n\nexport const LogIn = memo(function LogIn() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('password-reset'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    const { user, items } = getDefaultUserTemplate();\n    items.forEach((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const completeForm = email.length > 0 && password.length > 0;\n      setState((p) => ({ ...p, completeForm }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Log in\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        icons={[{ focus: true, name: eyeIcon, onPress: onEye }]}\n        keyboardType=\"default\"\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: spacing(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\nimport { LandingStackRoutes } from '../../navigationTypes';\n\nconst initialRef = { email: '' };\nconst initialState = { complete: false, loading: false };\nexport const PasswordReset = memo(function PasswordReset() {\n  const colors = useColors();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const focus = useIsFocused();\n  const emailRef = useRef<TextInputRef>(null);\n\n  const onSubmit = useCallback(() => {\n    if (!state.complete) return;\n    setState((p) => ({ ...p, loading: true }));\n    goBack();\n  }, [goBack, state.complete]);\n\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const complete = val.length > 0;\n      setState((p) => ({ ...p, complete }));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Password reset\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: spacing(4) }}\n        title=\"Please enter the email address associated with your account.\"\n      />\n      <Text\n        center\n        style={{ paddingBottom: spacing(4) }}\n        title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmit}\n        placeholder=\"Email address\"\n        returnKeyType=\"send\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.complete}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset password\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { useNavigation } from '@react-navigation/native';\nimport React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { getSmallestDimension, useRootSelector } from '../../../../redux';\nimport { Board } from '../../components';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const { goBack } = useNavigation();\n  const colors = useColors();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const { projectItemId } = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n\n  const listWidth = screenWidth * 0.7;\n  const { tabBarEdges } = useLayout();\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = spacing(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = spacing(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onLeftPress={navBack}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title={projectItemTitle}\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { KeyboardHandler, Screen } from '../../../../components';\nimport {\n  spacing,\n  useColors,\n  useKeyboardHeight,\n  useLayout,\n} from '../../../../features';\nimport { useRootSelector } from '../../../../redux';\nimport { List } from '../../components';\nimport { getProjects } from '../../models';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = spacing(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const showSearchBar = useCallback(() => undefined, []);\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      onRightPress={showSearchBar}\n      rightIcon=\"magnify\"\n      title=\"Implement\"\n    >\n      <KeyboardHandler\n        backgroundColor={colors.background.secondary}\n        onLayout={onLayout}\n      >\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import { scaleLinear, scaleTime } from 'd3-scale';\nimport { curveBasis, line } from 'd3-shape';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Svg, { Defs, LinearGradient, Path, Stop } from 'react-native-svg';\nimport { View } from '../../../../components';\n\ntype DataPoint = {\n  date: number;\n  value: number;\n};\n\ntype GraphProps = {\n  data: DataPoint[];\n  height: number;\n  width: number;\n};\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({ data, width, height }: GraphProps) => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d: string | null = line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(curveBasis)(data);\n\n  return d ? (\n    <View style={{ height, width }}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient\n            id=\"gradient\"\n            x1=\"50%\"\n            x2=\"50%\"\n            y1=\"0%\"\n            y2=\"100%\"\n          >\n            <Stop\n              offset=\"0%\"\n              stopColor=\"#cee3f9\"\n            />\n            <Stop\n              offset=\"80%\"\n              stopColor=\"#ddedfa\"\n            />\n            <Stop\n              offset=\"100%\"\n              stopColor=\"#feffff\"\n            />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path\n          d={d}\n          fill=\"transparent\"\n          stroke=\"#3977e3\"\n          strokeWidth={strokeWidth}\n        />\n      </Svg>\n    </View>\n  ) : null;\n};\n","import React, { memo } from 'react';\nimport { Dimensions } from 'react-native';\nimport {\n  Calendar,\n  Screen,\n  ScrollView,\n  Text,\n  View,\n} from '../../../../components';\nimport { spacing, useColors, useLayout } from '../../../../features';\nimport { Card } from '../../components';\nimport { completeConfig } from '../../utils';\nimport { Graph } from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {\n  name: string;\n};\n\nconst Title = ({ name }: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{ paddingBottom: completeConfig.padding }}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  { date: new Date(2018, 9, 1).getTime(), value: 0 },\n  { date: new Date(2018, 9, 16).getTime(), value: 0 },\n  { date: new Date(2018, 9, 17).getTime(), value: 200 },\n  { date: new Date(2018, 10, 1).getTime(), value: 200 },\n  { date: new Date(2018, 10, 2).getTime(), value: 300 },\n  { date: new Date(2018, 10, 5).getTime(), value: 300 },\n];\n\nexport const Reflect = memo(function Reflect() {\n  const colors = useColors();\n  const { tabBarEdges } = useLayout();\n\n  return (\n    <Screen\n      edges={tabBarEdges}\n      title=\"Reflect\"\n    >\n      <ScrollView\n        contentContainerStyle={{\n          backgroundColor: colors.background.secondary,\n          padding: spacing(4),\n        }}\n        style={{ backgroundColor: colors.background.secondary }}\n      >\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{\n                alignItems: 'center',\n                flex: 1,\n                justifyContent: 'center',\n              }}\n            >\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n} from '../../../../components';\nimport { spacing, useColors } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { ModalHeader } from '../../components';\nimport { createItem, loadUser } from '../../models';\nimport { LandingStackRoutes } from '../../navigationTypes';\nimport { getDefaultUserTemplate } from '../../utils';\n\nconst initialRef = { email: '', password: '' };\nconst initialState = {\n  completeForm: false,\n  eye: false,\n  loading: false,\n  passwordError: false,\n};\n\nexport const SignUp = memo(function SignUp() {\n  const colors = useColors();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const form = useRef(initialRef);\n  const [state, setState] = useState(initialState);\n  const { goBack, navigate } =\n    useNavigation<StackNavigationProp<LandingStackRoutes>>();\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (!state.completeForm) return;\n    setState((p) => ({ ...p, loading: true }));\n    const { user, items } = getDefaultUserTemplate();\n    items.forEach((item) => dispatch(createItem(item)));\n    dispatch(loadUser({ ...user, email: form.current.email }));\n    setState((p) => ({ ...p, loading: false }));\n  }, [dispatch, state.completeForm]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialRef) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n      const { email, password } = form.current;\n      const passwordError = password.length < 10 && key === 'password';\n      const completeForm = email.length > 0 && password.length >= 10;\n      setState((p) => ({ ...p, completeForm, passwordError }));\n    },\n    [],\n  );\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password') onSubmit();\n    },\n    [onSubmit],\n  );\n\n  useEffect(() => {\n    if (focus) {\n      emailRef.current?.focus();\n    } else {\n      form.current = initialRef;\n      setState(initialState);\n    }\n  }, [focus]);\n\n  return focus ? (\n    <Modal\n      backgroundColor={colors.background.secondary}\n      onBackgroundPress={navWelcome}\n    >\n      <ModalHeader\n        onRightPress={goBack}\n        title=\"Log in\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        keyboardType=\"email-address\"\n        onChangeText={onFormChange('email')}\n        onRef={emailRef}\n        onSubmitEditing={onSubmitEditing('email')}\n        placeholder=\"Email address\"\n        returnKeyType=\"next\"\n        style={{ marginBottom: spacing(4) }}\n        textContentType=\"username\"\n        value=\"\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        blurOnSubmit={false}\n        editable={!state.loading}\n        error={state.passwordError}\n        icons={[{ focus: true, name: eyeIcon, onPress: onEye }]}\n        keyboardType=\"default\"\n        onChangeText={onFormChange('password')}\n        onRef={passwordRef}\n        onSubmitEditing={onSubmitEditing('password')}\n        placeholder=\"Password\"\n        returnKeyType=\"done\"\n        secureTextEntry={!state.eye}\n        style={{ marginBottom: spacing(2) }}\n        textContentType=\"password\"\n        value=\"\"\n      />\n      <Text\n        color=\"negative\"\n        invisible={!state.passwordError}\n        title=\"Password is too short.\"\n      />\n      <Button\n        buttonStyle={{ marginBottom: spacing(4) }}\n        center\n        color=\"accent\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"accent\"\n        disabled={!state.completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign Up\"\n      />\n    </Modal>\n  ) : null;\n});\n","import { FirebaseAuthTypes } from '@react-native-firebase/auth';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\nimport {\n  Button,\n  Icon,\n  IconName,\n  Loader,\n  Modal,\n  Text,\n  TextInput,\n  TextInputRef,\n  TouchableOpacity,\n} from '../../../../components';\nimport { spacing, useAuth, useColors } from '../../../../features';\nimport { ModalHeader } from '../../components';\n\ntype Props = {\n  onBackgroundPress: () => void;\n  onSuccess: (user: FirebaseAuthTypes.User | null) => void;\n  showAnonymous?: boolean;\n  showApple?: boolean;\n  showEmail?: boolean;\n  showFacebook?: boolean;\n  showGoogle?: boolean;\n  showPhone?: boolean;\n};\n\n// TODO: relocate to somewhere\ntype SignInButtonProps = {\n  icon: IconName;\n  margin?: boolean;\n  onPress: () => void;\n  title: string;\n};\n\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n  margin,\n}: SignInButtonProps) {\n  const colors = useColors();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        borderColor: colors.background.secondary,\n        borderRadius: spacing(2),\n        borderWidth: 1,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginBottom: spacing(margin ? 4 : 0),\n        padding: spacing(2),\n      }}\n    >\n      <Icon name={icon} />\n      <Text\n        style={{ paddingLeft: spacing(2) }}\n        title={title}\n        type=\"button\"\n      />\n    </TouchableOpacity>\n  );\n});\n\ntype Screen =\n  | 'loading'\n  | 'landing'\n  | 'signUp'\n  | 'logIn'\n  | 'forgotPassword'\n  | 'phone'\n  | 'phoneCode'\n  | 'anonymous';\n\ntype Ref = {\n  email: string;\n  password: string;\n  phone: string;\n  phoneCode: string;\n};\n\nconst initialRef: Ref = {\n  email: '',\n  password: '',\n  phone: '',\n  phoneCode: '',\n};\n\ntype State = {\n  completeForm: boolean;\n  error: string | null;\n  eye: boolean;\n  passwordError: boolean;\n  screen: Screen;\n};\n\nconst initialState: State = {\n  completeForm: false,\n  error: null,\n  eye: false,\n  passwordError: false,\n  screen: 'landing',\n};\n\nexport const Login = memo(function Login({\n  onBackgroundPress,\n  showFacebook,\n  showGoogle,\n  showApple,\n  showPhone,\n  showEmail,\n  showAnonymous,\n  onSuccess,\n}: Props) {\n  const {\n    response,\n    onApple,\n    onGoogle,\n    onFacebook,\n    onPhoneConfirm,\n    onPhone,\n    onEmail,\n    onPasswordReset,\n    onAnonymous,\n  } = useAuth();\n  const { type, error, user } = response;\n  const loading = type === 'loading';\n  const successful = useRef(false);\n  const form = useRef<Ref>(initialRef);\n  const [state, setState] = useState<State>(initialState);\n  const emailRef = useRef<TextInputRef>(null);\n  const passwordRef = useRef<TextInputRef>(null);\n  const eyeIcon = state.eye ? 'eye-outline' : 'eye-off-outline';\n\n  const onFormChange = useCallback(\n    (key: keyof Ref) => (val: string) => {\n      form.current = { ...form.current, [key]: val };\n    },\n    [],\n  );\n\n  const handleConfirm = useCallback(\n    () => onPhoneConfirm(form.current.phoneCode),\n    [onPhoneConfirm],\n  );\n\n  const handlePhone = useCallback(() => onPhone(form.current.phone), [onPhone]);\n  const handleReset = useCallback(\n    () => onPasswordReset(form.current.email),\n    [onPasswordReset],\n  );\n\n  const onEye = useCallback(() => {\n    setState((p) => ({ ...p, eye: !p.eye }));\n    passwordRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = useCallback(\n    (key: keyof typeof initialRef) => () => {\n      if (key === 'email') passwordRef.current?.focus();\n      if (key === 'password')\n        onEmail(form.current.email, form.current.password);\n    },\n    [onEmail],\n  );\n\n  const onScreenChange = useCallback(\n    (screen: Screen) => () => setState((p) => ({ ...p, screen })),\n    [],\n  );\n\n  useEffect(() => {\n    if (user && !successful.current) {\n      onSuccess(user);\n      successful.current = true;\n    }\n  }, [onSuccess, user]);\n\n  return (\n    <Modal\n      onBackgroundPress={onBackgroundPress}\n      showOverlay\n    >\n      <>\n        {error ? (\n          <Text\n            center\n            color=\"negative\"\n            title={error}\n          />\n        ) : null}\n        {state.screen === 'loading' || type === 'initializing' ? (\n          <Loader />\n        ) : state.screen === 'phoneCode' ? (\n          <>\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"off\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phoneCode')}\n              onSubmitEditing={handleConfirm}\n              placeholder=\"phone confirmation code\"\n              returnKeyType=\"done\"\n              textContentType=\"none\"\n              value=\"\"\n            />\n            <Button\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleConfirm}\n              title=\"verify phone confirmation code\"\n            />\n            <Button\n              onPress={onScreenChange('landing')}\n              title=\"go back\"\n            />\n          </>\n        ) : state.screen === 'phone' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Phone Confirmation\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"off\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"number-pad\"\n              onChangeText={onFormChange('phone')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('phone')}\n              placeholder=\"Phone number\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"none\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handlePhone}\n              title=\"send confirmation code\"\n            />\n          </>\n        ) : state.screen === 'forgotPassword' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('logIn')}\n              title=\"Reset password\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: spacing(4) }}\n              title=\"Please enter the email address associated with your account.\"\n            />\n            <Text\n              center\n              style={{ paddingBottom: spacing(4) }}\n              title=\"We'll send you an email with your login email as well as a password reset instructions.\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"send\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={handleReset}\n              title=\"Reset password\"\n            />\n          </>\n        ) : state.screen === 'signUp' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('landing')}\n              title=\"Sign up\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"password\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ focus: true, name: eyeIcon, onPress: onEye }]}\n              keyboardType=\"default\"\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: spacing(4) }}\n              center\n              color=\"accent\"\n              disabled={loading}\n              lowercase\n              onPress={onScreenChange('logIn')}\n              title=\"Already have an account?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              disabled={loading}\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Sign up\"\n            />\n          </>\n        ) : state.screen === 'logIn' ? (\n          <>\n            <ModalHeader\n              onRightPress={onScreenChange('signUp')}\n              title=\"Log in\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              autoCorrect={false}\n              backgroundColor=\"secondary\"\n              blurOnSubmit={false}\n              editable={!loading}\n              keyboardType=\"email-address\"\n              onChangeText={onFormChange('email')}\n              onRef={emailRef}\n              onSubmitEditing={onSubmitEditing('email')}\n              placeholder=\"Email address\"\n              returnKeyType=\"next\"\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"username\"\n              value=\"\"\n            />\n            <TextInput\n              autoCapitalize=\"none\"\n              autoComplete=\"password\"\n              autoCorrect={false}\n              backgroundColor=\"primaryA\"\n              blurOnSubmit={false}\n              editable={!loading}\n              icons={[{ focus: true, name: eyeIcon, onPress: onEye }]}\n              keyboardType=\"default\"\n              onChangeText={onFormChange('password')}\n              onRef={passwordRef}\n              onSubmitEditing={onSubmitEditing('password')}\n              placeholder=\"Password\"\n              returnKeyType=\"done\"\n              secureTextEntry={!state.eye}\n              style={{ marginBottom: spacing(4) }}\n              textContentType=\"password\"\n              value=\"\"\n            />\n            <Button\n              buttonStyle={{ marginBottom: spacing(4) }}\n              center\n              color=\"accent\"\n              lowercase\n              onPress={onScreenChange('forgotPassword')}\n              title=\"Forgot password?\"\n            />\n            <Button\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onSubmitEditing('password')}\n              title=\"Log in\"\n            />\n          </>\n        ) : (\n          <>\n            <ModalHeader\n              onRightPress={onBackgroundPress}\n              title=\"Get Started\"\n            />\n            {Platform.OS === 'ios' || showApple ? (\n              <SignInButton\n                icon=\"apple\"\n                margin\n                onPress={onApple}\n                title=\"Continue with Apple\"\n              />\n            ) : null}\n            {showGoogle ? (\n              <SignInButton\n                icon=\"google\"\n                margin\n                onPress={onGoogle}\n                title=\"Continue with Google\"\n              />\n            ) : null}\n            {showFacebook ? (\n              <SignInButton\n                icon=\"facebook\"\n                margin\n                onPress={onFacebook}\n                title=\"Continue with Facebook\"\n              />\n            ) : null}\n            {showEmail ? (\n              <SignInButton\n                icon=\"email\"\n                margin\n                onPress={onScreenChange('signUp')}\n                title=\"Continue with Email\"\n              />\n            ) : null}\n            {showPhone ? (\n              <SignInButton\n                icon=\"phone\"\n                margin\n                onPress={onScreenChange('phone')}\n                title=\"Continue with Phone\"\n              />\n            ) : null}\n            {showAnonymous ? (\n              <SignInButton\n                icon=\"account\"\n                onPress={onAnonymous}\n                title=\"Continue Anonymously\"\n              />\n            ) : null}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n});\n","import { CarouselSlide } from '../../../../components';\nimport { spacing } from '../../../../features';\n\nexport const slides: CarouselSlide[] = [\n  {\n    icon: 'trophy-outline',\n    id: '1',\n    sections: [\n      {\n        paragraphs: [\n          [{ title: 'Start investing commission-free' }],\n          [\n            { title: 'Other fees may apply. View our' },\n            { onPress: () => undefined, title: 'fee schedule' },\n            { title: 'to learn more. All investments have risks.' },\n          ],\n        ],\n        title: 'Welcome to Accomplish',\n        titleStyle: { paddingBottom: spacing(10) },\n        titleType: 'h4',\n      },\n    ],\n  },\n  {\n    icon: 'trophy-outline',\n    id: '2',\n    sections: [\n      {\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{ onPress: () => undefined, title: 'View fee disclosures' }],\n        ],\n        title: 'Enjoy commission-free stock trading',\n        titleStyle: { paddingBottom: spacing(10) },\n        titleType: 'h4',\n      },\n    ],\n  },\n  {\n    icon: 'trophy-outline',\n    id: '3',\n    sections: [\n      {\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n        title: 'No account minimum',\n        titleStyle: { paddingBottom: spacing(10) },\n        titleType: 'h4',\n      },\n    ],\n  },\n  {\n    icon: 'trophy-outline',\n    id: '4',\n    sections: [\n      {\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n        title: 'Everything at your fingertips',\n        titleStyle: { paddingBottom: spacing(10) },\n        titleType: 'h4',\n      },\n    ],\n  },\n  {\n    icon: 'trophy-outline',\n    id: '5',\n    sections: [\n      {\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            { onPress: () => undefined, title: 'www.sipc.org' },\n            { title: '.' },\n          ],\n        ],\n        title: 'Account protection',\n        titleStyle: { paddingBottom: spacing(10) },\n        titleType: 'h4',\n      },\n    ],\n  },\n];\n","import React, { memo, useCallback, useState } from 'react';\nimport { Button, Carousel, Screen, View } from '../../../../components';\nimport { FirebaseAuthTypes } from '../../../../conversions';\nimport { spacing } from '../../../../features';\nimport { useRootDispatch } from '../../../../redux';\nimport { createItem, loadUser, login } from '../../models';\nimport { completeConfig, getDefaultUserTemplate } from '../../utils';\nimport { Login } from './Login';\nimport { slides } from './slides';\n\nexport const Welcome = memo(function Welcome() {\n  const dispatch = useRootDispatch();\n  const [showLogin, setShowLogin] = useState(false);\n  const onToggleLogin = useCallback(() => setShowLogin((p) => !p), []);\n\n  const onLoginSuccess = useCallback(\n    (auth: FirebaseAuthTypes.User | null) => {\n      if (!auth) throw new Error('no login');\n      dispatch(login(auth));\n      const { user, items } = getDefaultUserTemplate();\n      items.forEach((item) => dispatch(createItem(item)));\n      dispatch(loadUser({ ...user, email: auth.email ?? 'anonymous' }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Screen>\n        <View flex>\n          <Carousel\n            duration={6000}\n            slides={slides}\n          />\n          <View style={{ padding: completeConfig.padding }}>\n            <Button\n              buttonStyle={{ marginBottom: spacing(2) }}\n              center\n              color=\"accent\"\n              emphasis=\"high\"\n              onPress={onToggleLogin}\n              title=\"Get Started\"\n            />\n          </View>\n        </View>\n      </Screen>\n      {showLogin ? (\n        <Login\n          onBackgroundPress={onToggleLogin}\n          onSuccess={onLoginSuccess}\n          showAnonymous\n          showEmail\n          showFacebook\n          showGoogle\n          showPhone\n        />\n      ) : null}\n    </>\n  );\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React from 'react';\nimport { TabIcons, useNavScreenOptions } from '../../features';\nimport {\n  HomeStackRoutes,\n  ImplementStackRoutes,\n  LandingStackRoutes,\n  MainStackRoutes,\n} from './navigationTypes';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  PasswordReset,\n  Project,\n  Projects,\n  Reflect,\n  SignUp,\n  Welcome,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = { headerShown: false };\n\nconst tabIcons: TabIcons = {\n  account: { focused: 'account', unFocused: 'account' },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  plan: { focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline' },\n  reflect: { focused: 'finance', unFocused: 'finance' },\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackRoutes>();\nconst Implement = () => {\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen\n        component={Projects}\n        name=\"projects\"\n      />\n      <ImplementStack.Screen\n        component={Project}\n        name=\"project\"\n      />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst TabStack = createBottomTabNavigator<HomeStackRoutes>();\nconst Home = () => {\n  const { tabScreenOptions, tabScreenListeners } = useNavScreenOptions();\n  return (\n    <TabStack.Navigator\n      screenListeners={tabScreenListeners}\n      screenOptions={tabScreenOptions({ tabIcons })}\n    >\n      <TabStack.Screen\n        component={Capture}\n        name=\"plan\"\n      />\n      <TabStack.Screen\n        component={Implement}\n        name=\"implement\"\n      />\n      <TabStack.Screen\n        component={Reflect}\n        name=\"reflect\"\n      />\n      <TabStack.Screen\n        component={Account}\n        name=\"account\"\n      />\n    </TabStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackRoutes>();\nexport const Landing = () => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <LandingStack.Navigator screenOptions={modalScreenOptions}>\n      <LandingStack.Screen\n        component={Welcome}\n        name=\"welcome\"\n      />\n      <LandingStack.Screen\n        component={SignUp}\n        name=\"sign-up\"\n      />\n      <LandingStack.Screen\n        component={LogIn}\n        name=\"log-in\"\n      />\n      <LandingStack.Screen\n        component={PasswordReset}\n        name=\"password-reset\"\n      />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackRoutes>();\nexport const Main = () => {\n  const { modalScreenOptions } = useNavScreenOptions();\n  return (\n    <MainStack.Navigator screenOptions={modalScreenOptions}>\n      <MainStack.Screen\n        component={Home}\n        name=\"home\"\n      />\n      <MainStack.Screen\n        component={ItemDetail}\n        name=\"item-detail\"\n      />\n    </MainStack.Navigator>\n  );\n};\n","import React, { memo } from 'react';\nimport { useRootSelector } from '../../redux';\nimport { Landing, Main } from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"names":["completeConfig","alert","height","width","borderRadius","spacing","padding","dItem","u","date","Date","now","active","children","createdAt","description","editable","id","v4","tags","title","type","updatedAt","userId","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","item","index","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","items","name","AddItem","memo","parentItemId","placeholder","colors","useColors","textInputRef","useRef","text","useState","showInput","setShowInput","dispatch","useRootDispatch","useRootSelector","s","completeUser","Error","handleTextChange","useCallback","value","current","onSubmit","itemId","createItem","addItemToItem","Keyboard","onAddItemPress","p","onClose","onBlur","icons","focus","onPress","reset","clear","color","required","useEffect","style","backgroundColor","background","primaryA","justifyContent","autoCapitalize","autoComplete","autoCorrect","blurOnSubmit","keyboardType","onChangeText","onRef","onSubmitEditing","returnKeyType","submitClear","textContentType","center","Card","onLayout","margin","flex","marginBottom","marginRight","ListHeader","navigate","useNavigation","completeItem","form","onSave","updateItem","handleChange","onDetail","navItemDetails","alignItems","flexDirection","ListItem","parentChildrenCount","length","onItemTitleClose","onItemTitleSubmit","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","hidden","swapItemOrderInItem","j","key","onLongPress","secondary","pointerEvents","ListItems","list","listRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","titleEditable","handleChangeText","handleSubmit","multiline","ModalHeader","onLeftPress","size","onRightPress","invisible","Account","tabBarEdges","useLayout","useAuth","onLogout","response","profile","completeAuth","onNavToAdmin","logout","edges","displayName","String","emailVerified","uid","error","initialState","button","container","Capture","containerRefs","keyboardHeight","useKeyboardHeight","containerHeight","setContainerHeight","keyboardPadding","getInbox","noItemChildren","onOrganize","event","nativeEvent","layout","showSearchBar","rightIcon","disabled","ItemDetail","goBack","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","onDeletePress","onDeleteClose","initialRef","password","completeForm","eye","loading","LogIn","useIsFocused","state","setState","navWelcome","onSecondary","emailRef","passwordRef","eyeIcon","onEye","forEach","loadUser","onFormChange","val","secureTextEntry","buttonStyle","lowercase","complete","PasswordReset","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","navBack","Projects","dimensions","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","line","x","y","curve","curveBasis","StyleSheet","Defs","LinearGradient","x1","x2","y1","y2","Stop","stopColor","Path","fill","stroke","Title","getTime","Reflect","Dimensions","passwordError","SignUp","SignInButton","icon","borderColor","borderWidth","paddingLeft","phone","phoneCode","screen","Login","showFacebook","showGoogle","showApple","showPhone","showEmail","showAnonymous","onSuccess","onApple","onGoogle","onFacebook","onPhoneConfirm","onPhone","onEmail","onPasswordReset","onAnonymous","successful","handleConfirm","handlePhone","handleReset","onScreenChange","Platform","slides","sections","paragraphs","titleStyle","titleType","Welcome","showLogin","setShowLogin","onToggleLogin","onLoginSuccess","auth","login","duration","noHeader","headerShown","tabIcons","account","focused","unFocused","implement","plan","reflect","ImplementStack","createStackNavigator","Implement","Navigator","screenOptions","Screen","component","TabStack","createBottomTabNavigator","Home","useNavScreenOptions","tabScreenOptions","tabScreenListeners","screenListeners","LandingStack","Landing","modalScreenOptions","MainStack","Main","App"],"sourceRoot":""}